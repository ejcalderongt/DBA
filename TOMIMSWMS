
--CKFK 20190319 Agregue el create de la tabla i_nav_barras_pallet
CREATE TABLE [dbo].[i_nav_barras_pallet](
	[IdPallet] [int] NOT NULL,
	[Codigo] [nvarchar](50) NULL,
	[Nombre] [nvarchar](100) NULL,
	[Camas_Por_Tarima] [int] NULL,
	[Cajas_Por_Cama] [int] NULL,
	[Cantidad_Presentacion] [float] NULL,
	[UM_Producto] [nvarchar](50) NULL,
	[Lote] [nvarchar](50) NULL,
	[Fecha_Agregado] [datetime] NULL,
	[Fecha_Ingreso] [date] NULL,
	[Fecha_Vence] [date] NULL,
	[Fecha_Produccion] [date] NULL,
	[Activo] [bit] NULL,
	[Recibido] [bit] NULL,
	[IdRecepcion] [int] NULL,
	[Bodega_Origen] [nvarchar](50) NULL,
	[Bodega_Destino] [nvarchar](50) NULL,
	[codigo_barra] [nvarchar](50) NULL,
 CONSTRAINT [PK_i_nav_barras_pallet] PRIMARY KEY CLUSTERED 
(
	[IdPallet] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

/****** Excluir las ubicaciones de tránsito para stock específico en pedidos ******/
ALTER VIEW [dbo].[VW_Stock_Especifico]
AS
SELECT        dbo.producto_bodega.IdBodega, dbo.propietarios.IdPropietario, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto.IdProducto, 
                         dbo.producto_bodega.IdProductoBodega, dbo.stock.IdStock, dbo.stock.IdUbicacion_anterior, dbo.unidad_medida.IdUnidadMedida, dbo.stock.IdProductoEstado, 
                         dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.propietarios.nombre_comercial AS Propietario, dbo.producto.codigo, dbo.producto.codigo_barra AS Barra, 
                         dbo.producto.nombre, dbo.unidad_medida.Nombre AS UnidadMedida, dbo.producto_presentacion.nombre AS Presentacion, dbo.stock.lote, 
                         dbo.stock.fecha_ingreso AS Ingreso, dbo.stock.fecha_vence AS Vence, dbo.stock.cantidad AS Cantidad_UMBas, SUM(ISNULL(dbo.stock_res.cantidad, 0)) 
                         AS CantidadReservadaUmBas, dbo.stock.cantidad - ISNULL(SUM(dbo.stock_res.cantidad), 0) AS Disponible_UMBas, dbo.stock.peso, 
                         ISNULL(dbo.stock.cantidad / dbo.producto_presentacion.factor, 0) AS Cantidad_Presentacion, dbo.producto_estado.nombre AS NomEstado, 
                         'T[' + dbo.bodega_tramo.descripcion + '] - C[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.indice_x), ''), 2) 
                         + '] - N[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.nivel), ''), 2) 
                         + ']' + ' - P[' + dbo.bodega_ubicacion.orientacion_pos + ']' + ' - #[' + CONVERT(NVARCHAR(25), dbo.bodega_ubicacion.IdUbicacion) + ']' AS UbicacionCompleta, 
                         dbo.producto_estado.dañado, dbo.producto_presentacion.factor, dbo.producto_estado.utilizable AS EstadoUtilizable, dbo.stock.IdUbicacion, dbo.stock.lic_plate, 
                         dbo.stock.serial, dbo.stock.añada, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, 
                         dbo.producto_presentacion.ancho, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho AS Ancho_ubicacion, 
                         dbo.bodega_ubicacion.largo AS Largo_ubicacion, dbo.bodega_ubicacion.alto AS Alto_ubicacion, dbo.indice_rotacion.Descripcion AS IndiceRotacion, 
                         dbo.producto.existencia_min AS Existencia_min_umbas, dbo.producto.existencia_max AS Existencia_max_umbas, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia AS Existencia_min_pres, dbo.producto_presentacion.MaximoExistencia AS Existencia_max_pres, 
                         dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.IdUbicacion AS IdUbicacionActual, dbo.bodega_ubicacion.nivel AS Ubicacion_Nivel, 
                         dbo.bodega_ubicacion.indice_x AS Ubicacion_Indice_X, dbo.bodega_ubicacion.descripcion AS Ubicacion_Nombre, 
                         dbo.bodega_tramo.descripcion AS Ubicacion_Tramo, ISNULL(dbo.motivo_devolucion.Nombre, 'N/A') AS MotivoDevolucion, ISNULL(dbo.trans_oc_pol.NoPoliza, 'N/D') 
                         AS NoPoliza, dbo.producto_clasificacion.IdClasificacion, dbo.producto_familia.IdFamilia, dbo.cliente_tiempos.Dias_Local, dbo.cliente_tiempos.Dias_Exterior, 
                         dbo.cliente_tiempos.IdCliente, CASE WHEN DATEDIFF(DAY, GETDATE(), dbo.stock.fecha_vence) >= dbo.cliente_tiempos.Dias_Local OR
                         DATEDIFF(DAY, GETDATE(), dbo.stock.fecha_vence) >= dbo.cliente_tiempos.Dias_Exterior THEN 'Si' ELSE 'No' END AS Aplica
FROM            dbo.trans_oc_pol RIGHT OUTER JOIN
                         dbo.trans_re_oc INNER JOIN
                         dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc LEFT OUTER JOIN
                         dbo.motivo_devolucion ON dbo.trans_oc_enc.IdMotivoDevolucion = dbo.motivo_devolucion.IdMotivoDevolucion ON 
                         dbo.trans_oc_pol.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc RIGHT OUTER JOIN
                         dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.stock INNER JOIN
                         dbo.propietario_bodega ON dbo.stock.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega ON 
                         dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida LEFT OUTER JOIN
                         dbo.producto_familia INNER JOIN
                         dbo.cliente_tiempos INNER JOIN
                         dbo.producto_clasificacion ON dbo.cliente_tiempos.IdClasificacion = dbo.producto_clasificacion.IdClasificacion ON 
                         dbo.producto_familia.IdFamilia = dbo.cliente_tiempos.IdFamilia RIGHT OUTER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto ON dbo.producto_familia.IdFamilia = dbo.producto.IdFamilia AND 
                         dbo.producto_clasificacion.IdClasificacion = dbo.producto.IdClasificacion ON dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega ON 
                         dbo.trans_re_oc.IdRecepcionEnc = dbo.stock.IdRecepcionEnc LEFT OUTER JOIN
                         dbo.bodega_tramo INNER JOIN
                         dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo ON 
                         dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion LEFT OUTER JOIN
                         dbo.indice_rotacion ON dbo.producto.IdIndiceRotacion = dbo.indice_rotacion.IdIndiceRotacion LEFT OUTER JOIN
                         dbo.stock_res ON dbo.stock.IdStock = dbo.stock_res.IdStock LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.stock.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion
WHERE        (dbo.stock.IdUbicacion NOT IN
                             (SELECT        IdUbicacion
                               FROM            dbo.bodega_ubicacion AS bodega_ubicacion_1
                               WHERE        (ubicacion_despacho = 1)))
GROUP BY dbo.propietarios.nombre_comercial, dbo.propietarios.IdPropietario, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion, dbo.stock.IdUbicacion_anterior, 
                         dbo.propietario_bodega.IdPropietarioBodega, dbo.producto_bodega.IdProductoBodega, dbo.unidad_medida.IdUnidadMedida, dbo.unidad_medida.Nombre, 
                         dbo.producto_presentacion.nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.serial, 
                         dbo.stock.añada, dbo.producto_bodega.IdBodega, dbo.stock.fecha_vence, dbo.stock.IdProductoEstado, dbo.producto_estado.nombre, 
                         dbo.producto_estado.utilizable, dbo.producto_estado.dañado, dbo.stock.IdUbicacion, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.stock.lic_plate, 
                         dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, 
                         dbo.producto_presentacion.factor, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho, dbo.bodega_ubicacion.largo, dbo.bodega_ubicacion.alto, 
                         dbo.indice_rotacion.Descripcion, dbo.producto.existencia_min, dbo.producto.existencia_max, dbo.producto.codigo_barra, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia, dbo.producto_presentacion.MaximoExistencia, dbo.stock.cantidad, 
                         dbo.stock.cantidad / dbo.producto_presentacion.factor, dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.indice_x, 
                         dbo.bodega_ubicacion.descripcion, dbo.bodega_tramo.descripcion, dbo.bodega_ubicacion.orientacion_pos, dbo.motivo_devolucion.Nombre, 
                         dbo.trans_oc_pol.NoPoliza, dbo.producto_clasificacion.IdClasificacion, dbo.producto_familia.IdFamilia, dbo.cliente_tiempos.Dias_Local, 
                         dbo.cliente_tiempos.Dias_Exterior, dbo.cliente_tiempos.IdCliente
GO

/****** Excluir las ubicaciones de tránsito para stock específico en pedidos cuando el cliente no tiene tiempos ******/
ALTER VIEW [dbo].[VW_Stock_Resumen]
AS
SELECT        dbo.producto_bodega.IdBodega, dbo.propietarios.IdPropietario, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto.IdProducto, 
                         dbo.producto_bodega.IdProductoBodega, dbo.stock.IdStock, dbo.stock.IdUbicacion_anterior, dbo.unidad_medida.IdUnidadMedida, dbo.stock.IdProductoEstado, 
                         dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.propietarios.nombre_comercial AS Propietario, dbo.producto.codigo, dbo.producto.codigo_barra AS Barra, 
                         dbo.producto.nombre, dbo.unidad_medida.Nombre AS UnidadMedida, dbo.producto_presentacion.nombre AS Presentacion, dbo.stock.lote, 
                         dbo.stock.fecha_ingreso AS Ingreso, dbo.stock.fecha_vence AS Vence, dbo.stock.cantidad AS Cantidad_UMBas, SUM(ISNULL(dbo.stock_res.cantidad, 0)) 
                         AS CantidadReservadaUmBas, dbo.stock.cantidad - ISNULL(SUM(dbo.stock_res.cantidad), 0) AS Disponible_UMBas, dbo.stock.peso, 
                         ISNULL(dbo.stock.cantidad / dbo.producto_presentacion.factor, 0) AS Cantidad_Presentacion, dbo.producto_estado.nombre AS NomEstado, 
                         'T[' + dbo.bodega_tramo.descripcion + '] - C[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.indice_x), ''), 2) 
                         + '] - N[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.nivel), ''), 2) 
                         + ']' + ' - P[' + dbo.bodega_ubicacion.orientacion_pos + ']' + ' - #[' + CONVERT(NVARCHAR(25), dbo.bodega_ubicacion.IdUbicacion) + ']' AS UbicacionCompleta, 
                         dbo.producto_estado.dañado, dbo.producto_presentacion.factor, dbo.producto_estado.utilizable AS EstadoUtilizable, dbo.stock.IdUbicacion, dbo.stock.lic_plate, 
                         dbo.stock.serial, dbo.stock.añada, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, 
                         dbo.producto_presentacion.ancho, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho AS Ancho_ubicacion, 
                         dbo.bodega_ubicacion.largo AS Largo_ubicacion, dbo.bodega_ubicacion.alto AS Alto_ubicacion, dbo.indice_rotacion.Descripcion AS IndiceRotacion, 
                         dbo.producto.existencia_min AS Existencia_min_umbas, dbo.producto.existencia_max AS Existencia_max_umbas, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia AS Existencia_min_pres, dbo.producto_presentacion.MaximoExistencia AS Existencia_max_pres, 
                         dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.IdUbicacion AS IdUbicacionActual, dbo.bodega_ubicacion.nivel AS Ubicacion_Nivel, 
                         dbo.bodega_ubicacion.indice_x AS Ubicacion_Indice_X, dbo.bodega_ubicacion.descripcion AS Ubicacion_Nombre, 
                         dbo.bodega_tramo.descripcion AS Ubicacion_Tramo, ISNULL(dbo.motivo_devolucion.Nombre, 'N/A') AS MotivoDevolucion, ISNULL(dbo.trans_oc_pol.NoPoliza, 'N/D') 
                         AS NoPoliza
FROM            dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.stock INNER JOIN
                         dbo.propietario_bodega ON dbo.stock.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega ON 
                         dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida LEFT OUTER JOIN
                         dbo.trans_oc_pol RIGHT OUTER JOIN
                         dbo.trans_re_oc INNER JOIN
                         dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc LEFT OUTER JOIN
                         dbo.motivo_devolucion ON dbo.trans_oc_enc.IdMotivoDevolucion = dbo.motivo_devolucion.IdMotivoDevolucion ON 
                         dbo.trans_oc_pol.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc ON dbo.stock.IdRecepcionEnc = dbo.trans_re_oc.IdRecepcionEnc LEFT OUTER JOIN
                         dbo.bodega_tramo INNER JOIN
                         dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo ON 
                         dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion LEFT OUTER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto LEFT OUTER JOIN
                         dbo.indice_rotacion ON dbo.producto.IdIndiceRotacion = dbo.indice_rotacion.IdIndiceRotacion ON 
                         dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega LEFT OUTER JOIN
                         dbo.stock_res ON dbo.stock.IdStock = dbo.stock_res.IdStock LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.stock.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion
WHERE        (dbo.stock.IdUbicacion NOT IN
                             (SELECT        IdUbicacion
                               FROM            dbo.bodega_ubicacion AS bodega_ubicacion_1
                               WHERE        (ubicacion_despacho = 1)))
GROUP BY dbo.propietarios.nombre_comercial, dbo.propietarios.IdPropietario, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion, dbo.stock.IdUbicacion_anterior, 
                         dbo.propietario_bodega.IdPropietarioBodega, dbo.producto_bodega.IdProductoBodega, dbo.unidad_medida.IdUnidadMedida, dbo.unidad_medida.Nombre, 
                         dbo.producto_presentacion.nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.serial, 
                         dbo.stock.añada, dbo.producto_bodega.IdBodega, dbo.stock.fecha_vence, dbo.stock.IdProductoEstado, dbo.producto_estado.nombre, 
                         dbo.producto_estado.utilizable, dbo.producto_estado.dañado, dbo.stock.IdUbicacion, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.stock.lic_plate, 
                         dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, 
                         dbo.producto_presentacion.factor, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho, dbo.bodega_ubicacion.largo, dbo.bodega_ubicacion.alto, 
                         dbo.indice_rotacion.Descripcion, dbo.producto.existencia_min, dbo.producto.existencia_max, dbo.producto.codigo_barra, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia, dbo.producto_presentacion.MaximoExistencia, dbo.stock.cantidad, 
                         dbo.stock.cantidad / dbo.producto_presentacion.factor, dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.indice_x, 
                         dbo.bodega_ubicacion.descripcion, dbo.bodega_tramo.descripcion, dbo.bodega_ubicacion.orientacion_pos, dbo.motivo_devolucion.Nombre, 
                         dbo.trans_oc_pol.NoPoliza
GO

ALTER VIEW [dbo].[VW_Bodega]
AS
SELECT        b.IdBodega AS Correlativo, p.NOMBRE AS Pais, e.nombre AS Empresa, b.codigo AS Código, b.nombre AS Nombre, b.nombre_comercial AS NombreComercial, 
                         b.encargado AS Responsable, b.activo AS Activo
FROM            dbo.bodega AS b INNER JOIN
                         dbo.empresa AS e ON b.IdEmpresa = e.IdEmpresa LEFT OUTER JOIN
                         dbo.paises AS p ON b.IdPais = p.IdPais
GO

ALTER VIEW [dbo].[VW_Despacho_Rep_Det]
AS
SELECT        dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, dbo.trans_picking_ubic.IdPropietarioBodega, 
                         dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, dbo.trans_picking_ubic.IdPresentacion, 
                         dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_despacho_det.IdDespachoEnc, dbo.trans_despacho_det.IdDespachoDet, 
                         dbo.trans_despacho_det.IdPedidoEnc, pr.nombre_comercial AS Propietario, p.codigo AS Codigo_Producto, p.nombre AS Nombre_Producto, um.Nombre AS UM, 
                         pp.nombre AS Presentacion, pp.factor, pe.nombre AS Estado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence AS Vence, 
                         bu.descripcion AS Ubicacion_Origen, ISNULL(dbo.trans_picking_ubic.cantidad_recibida, 0) AS cantidad_pickeada, 
                         ISNULL(dbo.trans_picking_ubic.cantidad_verificada, 0) AS cantidad_verificada, ISNULL(dbo.trans_picking_ubic.peso_recibido, 0) AS Peso_Pickeado, 
                         ISNULL(dbo.trans_picking_ubic.peso_verificado, 0) AS Peso_Verificado, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, 
                         ISNULL(dbo.trans_picking_ubic.encontrado, 0) AS Encontrado, ISNULL(dbo.trans_picking_ubic.acepto, 0) AS Acepto, 
                         dbo.trans_pe_enc.no_documento AS No_Documento_WMS, dbo.trans_pe_enc.referencia AS No_Referencia, dbo.cliente.codigo AS Codigo_Cliente, 
                         dbo.cliente.nombre_comercial AS Nombre_Cliente, dbo.cliente.idubicacionvirtual, dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, 
                         dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, dbo.trans_despacho_enc.marchamo, 
                         dbo.road_ruta.CODIGO AS Codigo_Ruta, dbo.road_ruta.NOMBRE AS Nombre_Ruta, dbo.empresa_transporte_vehiculos.placa AS Placa_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.placa_comercial, dbo.empresa_transporte_vehiculos.marca AS Marca_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.modelo AS Modelo_Vehiculo, dbo.empresa_transporte_pilotos.nombres AS Nombre_Piloto, 
                         dbo.empresa_transporte_pilotos.apellidos AS Apellido_Piloto, dbo.empresa_transporte_pilotos.no_carnet AS No_Carnet_Piloto, 
                         dbo.empresa_transporte_pilotos.no_licencia AS No_Licencia_Piloto, dbo.cliente.IdCliente
FROM            dbo.trans_despacho_det INNER JOIN
                         dbo.bodega_ubicacion AS bu INNER JOIN
                         dbo.producto AS p INNER JOIN
                         dbo.producto_bodega AS pb ON p.IdProducto = pb.IdProducto INNER JOIN
                         dbo.propietario_bodega AS prb ON p.IdPropietario = prb.IdPropietario INNER JOIN
                         dbo.producto_estado AS pe ON prb.IdPropietario = pe.IdPropietario INNER JOIN
                         dbo.unidad_medida AS um ON prb.IdPropietario = um.IdPropietario INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario INNER JOIN
                         dbo.trans_picking_det INNER JOIN
                         dbo.trans_picking_ubic ON dbo.trans_picking_det.IdPickingDet = dbo.trans_picking_ubic.IdPickingDet AND 
                         dbo.trans_picking_det.IdPedidoDet = dbo.trans_picking_ubic.IdPedidoDet ON prb.IdPropietarioBodega = dbo.trans_picking_ubic.IdPropietarioBodega AND 
                         pb.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND pe.IdEstado = dbo.trans_picking_ubic.IdProductoEstado AND 
                         um.IdUnidadMedida = dbo.trans_picking_ubic.IdUnidadMedida ON bu.IdUbicacion = dbo.trans_picking_ubic.IdUbicacion ON 
                         dbo.trans_despacho_det.IdPickingUbic = dbo.trans_picking_ubic.IdPickingUbic AND 
                         dbo.trans_despacho_det.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND 
                         dbo.trans_despacho_det.IdUnidadMedidaBasica = dbo.trans_picking_ubic.IdUnidadMedida INNER JOIN
                         dbo.trans_pe_enc ON prb.IdPropietarioBodega = dbo.trans_pe_enc.IdPropietarioBodega AND 
                         dbo.trans_despacho_det.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc INNER JOIN
                         dbo.cliente ON pr.IdPropietario = dbo.cliente.IdPropietario AND dbo.trans_pe_enc.IdCliente = dbo.cliente.IdCliente INNER JOIN
                         dbo.trans_despacho_enc ON dbo.trans_despacho_det.IdDespachoEnc = dbo.trans_despacho_enc.IdDespachoEnc AND 
                         prb.IdPropietarioBodega = dbo.trans_despacho_enc.IdPropietarioBodega LEFT OUTER JOIN
                         dbo.empresa_transporte_vehiculos ON dbo.trans_despacho_enc.IdVehiculo = dbo.empresa_transporte_vehiculos.IdVehiculo LEFT OUTER JOIN
                         dbo.road_ruta ON dbo.trans_despacho_enc.IdRuta = dbo.road_ruta.IdRuta LEFT OUTER JOIN
                         dbo.empresa_transporte_pilotos ON dbo.trans_despacho_enc.IdPiloto = dbo.empresa_transporte_pilotos.IdPiloto LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON dbo.trans_picking_ubic.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto
GROUP BY p.codigo, p.nombre, pp.nombre, pe.nombre, um.Nombre, pr.nombre_comercial, bu.descripcion, pp.factor, dbo.trans_picking_ubic.peso_recibido, 
                         dbo.trans_picking_ubic.peso_verificado, dbo.trans_picking_ubic.acepto, dbo.trans_picking_ubic.cantidad_recibida, dbo.trans_picking_ubic.cantidad_verificada, 
                         dbo.trans_picking_ubic.encontrado, dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, 
                         dbo.trans_picking_ubic.IdPropietarioBodega, dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, 
                         dbo.trans_picking_ubic.IdPresentacion, dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_despacho_det.IdDespachoEnc, 
                         dbo.trans_despacho_det.IdDespachoDet, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, 
                         dbo.trans_pe_enc.no_documento, dbo.trans_pe_enc.referencia, dbo.cliente.codigo, dbo.cliente.nombre_comercial, dbo.cliente.idubicacionvirtual, 
                         dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence, 
                         dbo.trans_despacho_det.IdPedidoEnc, dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, 
                         dbo.trans_despacho_enc.marchamo, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, dbo.empresa_transporte_vehiculos.placa, 
                         dbo.empresa_transporte_vehiculos.marca, dbo.empresa_transporte_vehiculos.modelo, dbo.empresa_transporte_vehiculos.placa_comercial, 
                         dbo.empresa_transporte_pilotos.nombres, dbo.empresa_transporte_pilotos.apellidos, dbo.empresa_transporte_pilotos.no_carnet, 
                         dbo.empresa_transporte_pilotos.no_licencia, dbo.cliente.IdCliente
GO



ALTER VIEW [dbo].[VW_Despacho_Rep_Det]
AS
SELECT        dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, dbo.trans_picking_ubic.IdPropietarioBodega, 
                         dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, dbo.trans_picking_ubic.IdPresentacion, 
                         dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_despacho_det.IdDespachoEnc, dbo.trans_despacho_det.IdDespachoDet, 
                         dbo.trans_despacho_det.IdPedidoEnc, pr.nombre_comercial AS Propietario, p.codigo AS Codigo_Producto, p.nombre AS Nombre_Producto, um.Nombre AS UM, 
                         pp.nombre AS Presentacion, pp.factor, pe.nombre AS Estado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence AS Vence, 
                         bu.descripcion AS Ubicacion_Origen, ISNULL(dbo.trans_picking_ubic.cantidad_recibida, 0) AS cantidad_pickeada, 
                         ISNULL(dbo.trans_picking_ubic.cantidad_verificada, 0) AS cantidad_verificada, ISNULL(dbo.trans_picking_ubic.peso_recibido, 0) AS Peso_Pickeado, 
                         ISNULL(dbo.trans_picking_ubic.peso_verificado, 0) AS Peso_Verificado, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, 
                         ISNULL(dbo.trans_picking_ubic.encontrado, 0) AS Encontrado, ISNULL(dbo.trans_picking_ubic.acepto, 0) AS Acepto, 
                         dbo.trans_pe_enc.no_documento AS No_Documento_WMS, dbo.trans_pe_enc.referencia AS No_Referencia, dbo.cliente.codigo AS Codigo_Cliente, 
                         dbo.cliente.nombre_comercial AS Nombre_Cliente, dbo.cliente.idubicacionvirtual, dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, 
                         dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, dbo.trans_despacho_enc.marchamo, 
                         dbo.road_ruta.CODIGO AS Codigo_Ruta, dbo.road_ruta.NOMBRE AS Nombre_Ruta, dbo.empresa_transporte_vehiculos.placa AS Placa_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.placa_comercial, dbo.empresa_transporte_vehiculos.marca AS Marca_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.modelo AS Modelo_Vehiculo, dbo.empresa_transporte_pilotos.nombres AS Nombre_Piloto, 
                         dbo.empresa_transporte_pilotos.apellidos AS Apellido_Piloto, dbo.empresa_transporte_pilotos.no_carnet AS No_Carnet_Piloto, 
                         dbo.empresa_transporte_pilotos.no_licencia AS No_Licencia_Piloto, dbo.cliente.IdCliente, dbo.trans_pe_enc.Fecha_Pedido, 
                         dbo.trans_despacho_enc.fecha AS Fecha_Despacho
FROM            dbo.trans_despacho_det INNER JOIN
                         dbo.bodega_ubicacion AS bu INNER JOIN
                         dbo.producto AS p INNER JOIN
                         dbo.producto_bodega AS pb ON p.IdProducto = pb.IdProducto INNER JOIN
                         dbo.propietario_bodega AS prb ON p.IdPropietario = prb.IdPropietario INNER JOIN
                         dbo.producto_estado AS pe ON prb.IdPropietario = pe.IdPropietario INNER JOIN
                         dbo.unidad_medida AS um ON prb.IdPropietario = um.IdPropietario INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario INNER JOIN
                         dbo.trans_picking_det INNER JOIN
                         dbo.trans_picking_ubic ON dbo.trans_picking_det.IdPickingDet = dbo.trans_picking_ubic.IdPickingDet AND 
                         dbo.trans_picking_det.IdPedidoDet = dbo.trans_picking_ubic.IdPedidoDet ON prb.IdPropietarioBodega = dbo.trans_picking_ubic.IdPropietarioBodega AND 
                         pb.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND pe.IdEstado = dbo.trans_picking_ubic.IdProductoEstado AND 
                         um.IdUnidadMedida = dbo.trans_picking_ubic.IdUnidadMedida ON bu.IdUbicacion = dbo.trans_picking_ubic.IdUbicacion ON 
                         dbo.trans_despacho_det.IdPickingUbic = dbo.trans_picking_ubic.IdPickingUbic AND 
                         dbo.trans_despacho_det.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND 
                         dbo.trans_despacho_det.IdUnidadMedidaBasica = dbo.trans_picking_ubic.IdUnidadMedida INNER JOIN
                         dbo.trans_pe_enc ON prb.IdPropietarioBodega = dbo.trans_pe_enc.IdPropietarioBodega AND 
                         dbo.trans_despacho_det.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc INNER JOIN
                         dbo.cliente ON pr.IdPropietario = dbo.cliente.IdPropietario AND dbo.trans_pe_enc.IdCliente = dbo.cliente.IdCliente INNER JOIN
                         dbo.trans_despacho_enc ON dbo.trans_despacho_det.IdDespachoEnc = dbo.trans_despacho_enc.IdDespachoEnc AND 
                         prb.IdPropietarioBodega = dbo.trans_despacho_enc.IdPropietarioBodega LEFT OUTER JOIN
                         dbo.empresa_transporte_vehiculos ON dbo.trans_despacho_enc.IdVehiculo = dbo.empresa_transporte_vehiculos.IdVehiculo LEFT OUTER JOIN
                         dbo.road_ruta ON dbo.trans_despacho_enc.IdRuta = dbo.road_ruta.IdRuta LEFT OUTER JOIN
                         dbo.empresa_transporte_pilotos ON dbo.trans_despacho_enc.IdPiloto = dbo.empresa_transporte_pilotos.IdPiloto LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON dbo.trans_picking_ubic.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto
GROUP BY p.codigo, p.nombre, pp.nombre, pe.nombre, um.Nombre, pr.nombre_comercial, bu.descripcion, pp.factor, dbo.trans_picking_ubic.peso_recibido, 
                         dbo.trans_picking_ubic.peso_verificado, dbo.trans_picking_ubic.acepto, dbo.trans_picking_ubic.cantidad_recibida, dbo.trans_picking_ubic.cantidad_verificada, 
                         dbo.trans_picking_ubic.encontrado, dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, 
                         dbo.trans_picking_ubic.IdPropietarioBodega, dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, 
                         dbo.trans_picking_ubic.IdPresentacion, dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_despacho_det.IdDespachoEnc, 
                         dbo.trans_despacho_det.IdDespachoDet, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, 
                         dbo.trans_pe_enc.no_documento, dbo.trans_pe_enc.referencia, dbo.cliente.codigo, dbo.cliente.nombre_comercial, dbo.cliente.idubicacionvirtual, 
                         dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence, 
                         dbo.trans_despacho_det.IdPedidoEnc, dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, 
                         dbo.trans_despacho_enc.marchamo, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, dbo.empresa_transporte_vehiculos.placa, 
                         dbo.empresa_transporte_vehiculos.marca, dbo.empresa_transporte_vehiculos.modelo, dbo.empresa_transporte_vehiculos.placa_comercial, 
                         dbo.empresa_transporte_pilotos.nombres, dbo.empresa_transporte_pilotos.apellidos, dbo.empresa_transporte_pilotos.no_carnet, 
                         dbo.empresa_transporte_pilotos.no_licencia, dbo.cliente.IdCliente, dbo.trans_pe_enc.Fecha_Pedido, dbo.trans_despacho_enc.fecha
GO

ALTER VIEW [dbo].[VW_Despacho_Rep_Det]
AS
SELECT        dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, dbo.trans_picking_ubic.IdPropietarioBodega, 
                         dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, dbo.trans_picking_ubic.IdPresentacion, 
                         dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_despacho_det.IdDespachoEnc, dbo.trans_despacho_det.IdDespachoDet, 
                         dbo.trans_despacho_det.IdPedidoEnc, pr.nombre_comercial AS Propietario, p.codigo AS Codigo_Producto, p.nombre AS Nombre_Producto, um.Nombre AS UM, 
                         pp.nombre AS Presentacion, pp.factor, pe.nombre AS Estado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence AS Vence, 
                         bu.descripcion AS Ubicacion_Origen, ISNULL(dbo.trans_picking_ubic.cantidad_recibida, 0) AS cantidad_pickeada, 
                         ISNULL(dbo.trans_picking_ubic.cantidad_verificada, 0) AS cantidad_verificada, ISNULL(dbo.trans_picking_ubic.peso_recibido, 0) AS Peso_Pickeado, 
                         ISNULL(dbo.trans_picking_ubic.peso_verificado, 0) AS Peso_Verificado, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, 
                         ISNULL(dbo.trans_picking_ubic.encontrado, 0) AS Encontrado, ISNULL(dbo.trans_picking_ubic.acepto, 0) AS Acepto, 
                         dbo.trans_pe_enc.no_documento AS No_Documento_WMS, dbo.trans_pe_enc.referencia AS No_Referencia, dbo.cliente.codigo AS Codigo_Cliente, 
                         dbo.cliente.nombre_comercial AS Nombre_Cliente, dbo.cliente.idubicacionvirtual, dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, 
                         dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, dbo.trans_despacho_enc.marchamo, 
                         dbo.road_ruta.CODIGO AS Codigo_Ruta, dbo.road_ruta.NOMBRE AS Nombre_Ruta, dbo.empresa_transporte_vehiculos.placa AS Placa_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.placa_comercial, dbo.empresa_transporte_vehiculos.marca AS Marca_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.modelo AS Modelo_Vehiculo, dbo.empresa_transporte_pilotos.nombres AS Nombre_Piloto, 
                         dbo.empresa_transporte_pilotos.apellidos AS Apellido_Piloto, dbo.empresa_transporte_pilotos.no_carnet AS No_Carnet_Piloto, 
                         dbo.empresa_transporte_pilotos.no_licencia AS No_Licencia_Piloto, dbo.cliente.IdCliente, dbo.trans_pe_enc.Fecha_Pedido, 
                         dbo.trans_despacho_enc.fecha AS Fecha_Despacho, p.IdProducto
FROM            dbo.trans_despacho_det INNER JOIN
                         dbo.bodega_ubicacion AS bu INNER JOIN
                         dbo.producto AS p INNER JOIN
                         dbo.producto_bodega AS pb ON p.IdProducto = pb.IdProducto INNER JOIN
                         dbo.propietario_bodega AS prb ON p.IdPropietario = prb.IdPropietario INNER JOIN
                         dbo.producto_estado AS pe ON prb.IdPropietario = pe.IdPropietario INNER JOIN
                         dbo.unidad_medida AS um ON prb.IdPropietario = um.IdPropietario INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario INNER JOIN
                         dbo.trans_picking_det INNER JOIN
                         dbo.trans_picking_ubic ON dbo.trans_picking_det.IdPickingDet = dbo.trans_picking_ubic.IdPickingDet AND 
                         dbo.trans_picking_det.IdPedidoDet = dbo.trans_picking_ubic.IdPedidoDet ON prb.IdPropietarioBodega = dbo.trans_picking_ubic.IdPropietarioBodega AND 
                         pb.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND pe.IdEstado = dbo.trans_picking_ubic.IdProductoEstado AND 
                         um.IdUnidadMedida = dbo.trans_picking_ubic.IdUnidadMedida ON bu.IdUbicacion = dbo.trans_picking_ubic.IdUbicacion ON 
                         dbo.trans_despacho_det.IdPickingUbic = dbo.trans_picking_ubic.IdPickingUbic AND 
                         dbo.trans_despacho_det.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND 
                         dbo.trans_despacho_det.IdUnidadMedidaBasica = dbo.trans_picking_ubic.IdUnidadMedida INNER JOIN
                         dbo.trans_pe_enc ON prb.IdPropietarioBodega = dbo.trans_pe_enc.IdPropietarioBodega AND 
                         dbo.trans_despacho_det.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc INNER JOIN
                         dbo.cliente ON pr.IdPropietario = dbo.cliente.IdPropietario AND dbo.trans_pe_enc.IdCliente = dbo.cliente.IdCliente INNER JOIN
                         dbo.trans_despacho_enc ON dbo.trans_despacho_det.IdDespachoEnc = dbo.trans_despacho_enc.IdDespachoEnc AND 
                         prb.IdPropietarioBodega = dbo.trans_despacho_enc.IdPropietarioBodega LEFT OUTER JOIN
                         dbo.empresa_transporte_vehiculos ON dbo.trans_despacho_enc.IdVehiculo = dbo.empresa_transporte_vehiculos.IdVehiculo LEFT OUTER JOIN
                         dbo.road_ruta ON dbo.trans_despacho_enc.IdRuta = dbo.road_ruta.IdRuta LEFT OUTER JOIN
                         dbo.empresa_transporte_pilotos ON dbo.trans_despacho_enc.IdPiloto = dbo.empresa_transporte_pilotos.IdPiloto LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON dbo.trans_picking_ubic.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto
GROUP BY p.codigo, p.nombre, pp.nombre, pe.nombre, um.Nombre, pr.nombre_comercial, bu.descripcion, pp.factor, dbo.trans_picking_ubic.peso_recibido, 
                         dbo.trans_picking_ubic.peso_verificado, dbo.trans_picking_ubic.acepto, dbo.trans_picking_ubic.cantidad_recibida, dbo.trans_picking_ubic.cantidad_verificada, 
                         dbo.trans_picking_ubic.encontrado, dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, 
                         dbo.trans_picking_ubic.IdPropietarioBodega, dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, 
                         dbo.trans_picking_ubic.IdPresentacion, dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_despacho_det.IdDespachoEnc, 
                         dbo.trans_despacho_det.IdDespachoDet, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, 
                         dbo.trans_pe_enc.no_documento, dbo.trans_pe_enc.referencia, dbo.cliente.codigo, dbo.cliente.nombre_comercial, dbo.cliente.idubicacionvirtual, 
                         dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence, 
                         dbo.trans_despacho_det.IdPedidoEnc, dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, 
                         dbo.trans_despacho_enc.marchamo, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, dbo.empresa_transporte_vehiculos.placa, 
                         dbo.empresa_transporte_vehiculos.marca, dbo.empresa_transporte_vehiculos.modelo, dbo.empresa_transporte_vehiculos.placa_comercial, 
                         dbo.empresa_transporte_pilotos.nombres, dbo.empresa_transporte_pilotos.apellidos, dbo.empresa_transporte_pilotos.no_carnet, 
                         dbo.empresa_transporte_pilotos.no_licencia, dbo.cliente.IdCliente, dbo.trans_pe_enc.Fecha_Pedido, dbo.trans_despacho_enc.fecha, p.IdProducto
GO

'#EJC20190604
ALTER TABLE unidad_medida add codigo nvarchar(25)

ALTER VIEW [dbo].[VW_UnidadMedida]
AS
SELECT        p.nombre_comercial AS Propietario, e.IdUnidadMedida, e.IdPropietario, e.Nombre, e.activo, e.fec_agr, e.user_mod, e.fec_mod, e.user_agr, e.codigo
FROM            dbo.unidad_medida AS e INNER JOIN
                         dbo.propietarios AS p ON e.IdPropietario = p.IdPropietario
GO

CREATE TABLE [dbo].[trans_series_doc](
    [IdTransSerieDoc] [int] NOT NULL,
    [Serie] [nvarchar](20) NOT NULL,
    [Tipo_Doc] [nvarchar](20) NOT NULL,
	[IdTipoTrans] int NOT NULL,
    [Inicial] [int] NULL,
    [Final] [int] NULL,
    [Actual] [int] NULL,
    [Activo] [bit] NOT NULL,
    [IdBodega] [int] NOT NULL,
    [UserAgr] [nvarchar](25) NULL,
    [FecAgr] [datetime] NULL,
    [UserMod] [nvarchar](25) NULL,
    [FecMod] [datetime] NULL,
 CONSTRAINT [PK_Correlativo] PRIMARY KEY CLUSTERED
(
    [IdTransSerieDoc] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

ALTER TABLE [dbo].[trans_series_doc]  WITH CHECK ADD  CONSTRAINT [FK_correlativo_bodega] FOREIGN KEY([IdBodega])
REFERENCES [dbo].[bodega] ([IdBodega])
GO

ALTER TABLE [dbo].[trans_series_doc] CHECK CONSTRAINT [FK_correlativo_bodega]
GO

/****** Changes ON Date: 28/03/2019 05:09:42 p.m. ******/
CREATE TABLE [dbo].[configuracion_barra_pallet](
	[IdConfiguracionPallet] [int] NOT NULL,
	[LongCodBodegaOrigen] [int] NULL,
	[LongCodProducto] [int] NULL,
	[LongLP] [int] NULL,
	[CodigoNumerico] [bit] NULL,
 CONSTRAINT [PK_configuracion_barra_pallet] PRIMARY KEY CLUSTERED 
(
	[IdConfiguracionPallet] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Si verdadero, entonces se hace un val del código en la HH de lo contrario se tomarán los ceros a la izquierda como parte del código' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'configuracion_barra_pallet', @level2type=N'COLUMN',@level2name=N'CodigoNumerico'
GO

alter table proveedor add IdConfiguracionBarraPallet int null

ALTER VIEW [dbo].[VW_Proveedor]
AS
SELECT        e.nombre AS Empresa, pr.nombre_comercial AS Propietario, p.IdEmpresa, p.IdPropietario, p.IdProveedor, p.codigo, p.nombre, p.telefono, p.nit, p.direccion, p.email, 
                         p.contacto, p.activo, p.muestra_precio, p.user_agr, p.fec_agr, p.user_mod, p.fec_mod, p.actualiza_costo_oc, dbo.proveedor_bodega.IdBodega, 
                         dbo.proveedor_bodega.activo AS activo_proveedor_bodega, p.idubicacionvirtual, p.es_bodega_recepcion, p.es_bodega_traslado, p.referencia, p.sistema, 
                         p.IdConfiguracionBarraPallet
FROM            dbo.proveedor AS p INNER JOIN
                         dbo.empresa AS e ON p.IdEmpresa = e.IdEmpresa INNER JOIN
                         dbo.propietarios AS pr ON p.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.proveedor_bodega ON p.IdProveedor = dbo.proveedor_bodega.IdProveedor
GO


alter table trans_re_enc add No_Marchamo nvarchar(50)
alter table bodega add codigo_bodega_erp nvarchar(25)
alter table producto_estado add codigo_bodega_erp nvarchar(25)
alter table bodega_ubicacion add codigo_bodega_erp nvarchar(25)
alter table bodega add ubic_transito nvarchar(25)
alter table bodega alter column codigo nvarchar(25) collate sql_latin1_general_cp1_ci_as
alter table road_p_vendedor drop constraint PK_P_VENDEDOR
alter table road_p_vendedor alter column codigo nvarchar(8) collate sql_latin1_general_cp1_ci_as not null
alter table road_p_vendedor add constraint PK_P_VENDEDOR  PRIMARY KEY (codigo)
alter table road_p_vendedor alter column nombre nvarchar(50) collate sql_latin1_general_cp1_ci_as not null
alter table i_nav_transacciones_out add Cantidad_Presentacion float
insert into trans_oc_ti values (3,'Transferencia', 0,1,GETDATE(),1,GETDATE(),1)
update proveedor_bodega set activo = 1
update cliente_bodega set activo = 1
alter table cliente add control_ultimo_lote bit default 0
alter table trans_pe_enc add control_ultimo_lote bit default 0


alter table i_nav_barras_pallet add Cantidad_UMP float

alter table configuracion_barra_pallet add IdentificadorInicio char(4)

alter table trans_pe_enc add Serie nvarchar(25)
alter table trans_pe_enc add Correlativo int

alter table trans_oc_enc add serie nvarchar(25)
alter table trans_oc_enc add correlativo int
alter table trans_oc_enc add IdDespachoEnc int null

alter table estructura_tramo add Horizontal bit default 0 
alter table bodega_tramo add Horizontal bit default 0

alter table i_nav_transacciones_out add lic_plate nvarchar(50) collate Modern_Spanish_CI_AS
alter table i_nav_transacciones_out add uds_lic_plate float

alter table trans_inv_enc add capturar_no_existente bit default 0

alter table producto_presentacion add IdPresentacionPallet int FOREIGN KEY (IdPresentacionPallet) REFERENCES producto_presentacion(IdPresentacion)

alter table trans_movimientos add lic_plate nvarchar(50)


INSERT INTO menu_sistema VALUES('6.1.1.13','Existencias por LP','cmdRpExitLP','4','6.1.1','0')

INSERT INTO menu_rol
SELECT max(idMenuRol) + 1,'6.1.1.13','1','Erik Calderón','2019-04-10 00:00:00.000','Erik Calderón','2019-04-10 00:00:00.000','1','1'
from menu_rol
 

CREATE TABLE [dbo].[trans_inv_ne](
	[idinventarione] [int] NOT NULL,
	[idinventarioenc] [int] NOT NULL,
	[idproducto] [int] NULL,
	[codigo] [nvarchar](50) NULL,
	[nombre] [nvarchar](50) NULL,
	[cantidad] [float] NULL,
	[fec_agr] [datetime] NULL,
	[usr_agr] [nvarchar](50) NULL,
 CONSTRAINT [PK_trans_inv_ne] PRIMARY KEY CLUSTERED 
(
	[idinventarione] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

ALTER VIEW [dbo].[VW_ProductoPresentacion]
AS
SELECT        p.nombre AS Producto, pp.IdPresentacion, pp.IdProducto, pp.codigo_barra, pp.nombre, pp.imprime_barra, pp.peso, pp.alto, pp.largo, pp.ancho, pp.factor, 
                         pp.MinimoExistencia, pp.MaximoExistencia, pp.user_agr, pp.fec_agr, pp.user_mod, pp.fec_mod, pp.activo, pp.EsPallet, pp.Precio, pp.MinimoPeso, pp.MaximoPeso, 
                         pp.Costo, pp.CamasPorTarima, pp.CajasPorCama, pp.genera_lp_auto, pp.permitir_paletizar, pp.sistema, pp.IdPresentacionPallet
FROM            dbo.producto_presentacion AS pp INNER JOIN
                         dbo.producto AS p ON pp.IdProducto = p.IdProducto
GO



INSERT INTO menu_sistema VALUES('6.1.1.14','Existencias con rec','cmdExistCnRec','4','6.1.1','0')
INSERT INTO menu_rol
SELECT max(idMenuRol) + 1,'6.1.1.14','1','Erik Calderón','2019-04-10 00:00:00.000','Erik Calderón','2019-04-10 00:00:00.000','1','1'
from menu_rol
 
update menu_sistema 
set nombre_lgco='cmdMi3', solicitar_clave_autorizacion = 0
where IdMenu = '7.5.1'
 
INSERT INTO menu_sistema VALUES('7.5.1.1','Transacciones Out','cmdTransaccionesOut','4','7.5.1','1')
INSERT INTO menu_sistema VALUES('7.5.1.1','Barras Pallet','cmdBarrasPallet','4','7.5.1','1')
INSERT INTO menu_rol
SELECT max(idMenuRol) + 1,'7.5.1.1','1','Erik Calderón','2019-04-10 00:00:00.000','Erik Calderón','2019-04-10 00:00:00.000','1','1'
from menu_rol
INSERT INTO menu_rol
SELECT max(idMenuRol) + 1,'7.5.1.2','1','Erik Calderón','2019-04-10 00:00:00.000','Erik Calderón','2019-04-10 00:00:00.000','1','1'
from menu_rol


ALTER VIEW [dbo].[VW_Stock_SP]
AS
SELECT        dbo.producto_bodega.IdBodega, dbo.propietarios.IdPropietario, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto.IdProducto, 
                         dbo.producto_bodega.IdProductoBodega, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion AS IdUbicacionActual, dbo.stock.IdUbicacion_anterior, 
                         dbo.unidad_medida.IdUnidadMedida, dbo.stock.IdProductoEstado, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, 
                         dbo.propietarios.nombre_comercial AS Propietario, bodega_ubicacion_1.descripcion AS UbicacionAnterior, dbo.unidad_medida.Nombre AS UnidadMedida, 
                         dbo.producto_presentacion.nombre AS Presentacion, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.serial, 
                         dbo.stock.añada, dbo.stock.cantidad, dbo.stock.fecha_vence, dbo.producto_estado.nombre AS NomEstado, dbo.producto_estado.utilizable AS EstadoUtilizable, 
                         dbo.producto_estado.dañado, dbo.stock.IdUbicacion, dbo.stock.lic_plate, dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, 
                         dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, dbo.producto_presentacion.factor
FROM            dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.propietario_bodega INNER JOIN
                         dbo.stock INNER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto ON dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega ON 
                         dbo.propietario_bodega.IdPropietarioBodega = dbo.stock.IdPropietarioBodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON 
                         dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.stock.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.bodega_ubicacion AS bodega_ubicacion_1 ON dbo.stock.IdUbicacion_anterior = bodega_ubicacion_1.IdUbicacion LEFT OUTER JOIN
                         dbo.bodega_ubicacion ON dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion
GROUP BY dbo.propietarios.nombre_comercial, dbo.propietarios.IdPropietario, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion, dbo.stock.IdUbicacion_anterior, 
                         bodega_ubicacion_1.descripcion, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto_bodega.IdProductoBodega, dbo.unidad_medida.IdUnidadMedida, 
                         dbo.unidad_medida.Nombre, dbo.producto_presentacion.nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, 
                         dbo.stock.fecha_ingreso, dbo.stock.serial, dbo.stock.añada, dbo.stock.cantidad, dbo.producto_bodega.IdBodega, dbo.stock.fecha_vence, 
                         dbo.stock.IdProductoEstado, dbo.producto_estado.nombre, dbo.producto_estado.utilizable, dbo.producto_estado.dañado, dbo.stock.IdUbicacion, 
                         dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.stock.lic_plate, dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, 
                         dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, dbo.producto_presentacion.factor
GO

ALTER TABLE [dbo].[licencia_item] DROP CONSTRAINT [PK_licencia_item] WITH ( ONLINE = OFF )
GO
ALTER TABLE [licencia_item] 
ALTER COLUMN idDisp nvarchar (500) not null
SET ANSI_PADDING ON
GO
/****** Object: Index [PK_licencia_item] Script Date: 26/04/2019 9:01:51 ******/
ALTER TABLE [dbo].[licencia_item] ADD CONSTRAINT [PK_licencia_item] PRIMARY KEY CLUSTERED 
(
[idDisp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

ALTER TABLE licencia_item 
ALTER COLUMN identificacion nvarchar (500)
ALTER TABLE licencia_llave 
ALTER COLUMN Llave nvarchar (500)
ALTER TABLE licencia_login 
ALTER COLUMN valor nvarchar (500)
ALTER TABLE [dbo].[licencia_login] DROP CONSTRAINT [PK_licencia_login] WITH ( ONLINE = OFF )
GO
ALTER TABLE [licencia_login] 
ALTER COLUMN idDisp nvarchar (500) not null
SET ANSI_PADDING ON
GO
/****** Object: Index [PK_licencia_item] Script Date: 26/04/2019 9:01:51 ******/
ALTER TABLE [dbo].[licencia_login] ADD CONSTRAINT [PK_licencia_login] PRIMARY KEY CLUSTERED 
(
[idDisp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
ALTER TABLE licencia_solic 
ALTER COLUMN identificacion nvarchar (500)

ALTER TABLE [dbo].[licencia_solic] DROP CONSTRAINT [PK_licencia_solic] WITH ( ONLINE = OFF )
GO
ALTER TABLE [licencia_solic] 
ALTER COLUMN idDisp nvarchar (500) not null
SET ANSI_PADDING ON
GO
/****** Object: Index [PK_licencia_item] Script Date: 26/04/2019 9:01:51 ******/
ALTER TABLE [dbo].[licencia_solic] ADD CONSTRAINT [PK_licencia_solic] PRIMARY KEY CLUSTERED 
(
[idDisp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO


ALTER PROCEDURE [dbo].[CLBD_PRC]
AS
BEGIN
DELETE FROM transacciones_log
DELETE FROM trans_ubic_tarima
DELETE FROM trans_ubic_hh_se
DELETE FROM trans_ubic_hh_op
DELETE FROM trans_ubic_hh_enc
DELETE FROM trans_ubic_hh_det
DELETE FROM trans_ubic_hh_stock
DELETE FROM trans_tras_op
DELETE FROM trans_tras_enc
DELETE FROM trans_tras_det
DELETE FROM trans_re_op
DELETE FROM trans_re_oc
DELETE FROM trans_re_img
DELETE FROM trans_re_fact
DELETE FROM producto_pallet
DELETE FROM trans_re_enc
DELETE FROM trans_re_det_parametros
DELETE FROM trans_re_det_infraccion
DELETE FROM trans_re_det
DELETE FROM trans_picking_ubic
DELETE FROM trans_picking_op
DELETE FROM trans_picking_enc
DELETE FROM trans_picking_det_parametros
DELETE FROM trans_picking_det
DELETE FROM trans_pe_det
DELETE FROM trans_pe_enc
DELETE FROM trans_oc_pol
DELETE FROM trans_oc_imagen
DELETE FROM trans_oc_det_lote
DELETE FROM trans_oc_det
DELETE FROM trans_oc_enc
DELETE FROM trans_movimientos
DELETE FROM trans_inventario_enc
DELETE FROM trans_inventario_det
DELETE FROM trans_despacho_enc
DELETE FROM trans_despacho_det
DELETE FROM tarea_hh
DELETE FROM stock_se_rec
DELETE FROM stock_se
DELETE FROM stock_res_se
DELETE FROM stock_res
DELETE FROM stock_rec
DELETE FROM stock_parametro
DELETE FROM stock_hist
DELETE FROM stock
DELETE FROM trans_inv_detalle
DELETE FROM trans_inv_resumen
DELETE FROM trans_inv_reconteo
DELETE FROM trans_inv_ciclico
DELETE FROM trans_inv_ciclico_ubic
DELETE FROM trans_inv_tramo
DELETE FROM trans_inv_operador
DELETE FROM trans_inv_stock
DELETE FROM trans_inv_stock_prod
DELETE FROM trans_inv_enc
DELETE FROM Appointments
DELETE FROM i_nav_ejecucion_det_error
DELETE FROM i_nav_ejecucion_res
DELETE FROM i_nav_ejecucion_enc
DELETE FROM I_nav_transacciones_out
DELETE FROM i_nav_barras_pallet
END

GO

alter table i_nav_barras_pallet add Lote_Numerico int

CREATE TABLE [dbo].[trans_re_det_lote_num](
	[IdLoteNum] [int] NOT NULL,
	[IdRecepcionEnc] [int] NULL,
	[IdProductoBodega] [int] NULL,
	[Codigo] [nvarchar](50) NULL,
	[Lote] [nvarchar](50) NULL,
	[Lote_Numerico] [int] NULL,
	[FechaIngreso] [date] NULL,
	[Cantidad] [float] NULL,
 CONSTRAINT [PK_lote_num] PRIMARY KEY CLUSTERED 
(
	[IdLoteNum] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[trans_despacho_det_lote_num](
	[IdDespachoDetLote] [int] NOT NULL,
	[IdDespachoEnc] [int] NOT NULL,
	[IdPedidoEnc] [int] NULL,	
	[IdProductoBodega] [int] NULL,	
	[Lote] [nvarchar](250) NULL,
	[LoteNum] [int] NULL,
	[CantidadDespachada] [float] NULL,
	[PesoDespachado] [float] NULL,
	[IdProductoEstado] [int] NULL,
 CONSTRAINT [PK_trans_despacho_det_lote] PRIMARY KEY CLUSTERED 
(
	[IdDespachoDetLote] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


alter table bodega_tramo add Horizontal bit

CREATE VIEW [dbo].[VW_Cambios_Ubicacion]
AS
SELECT        TOP (100) PERCENT dbo.trans_movimientos.IdBodegaOrigen, dbo.sis_tipo_tarea.Nombre AS TipoTarea, dbo.producto.codigo AS Código, dbo.producto.nombre AS Producto, dbo.trans_movimientos.cantidad as Cantidad, 
                         dbo.unidad_medida.Nombre AS UMBas, dbo.trans_movimientos.peso AS Peso, dbo.trans_movimientos.lote AS Lote, dbo.trans_movimientos.lic_plate AS LP, dbo.trans_movimientos.fecha_vence AS Vence, dbo.producto_estado.nombre AS Estado, 
                         dbo.motivo_ubicacion.Nombre AS Motivo, dbo.propietarios.nombre_comercial AS Propietario, 
CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, 
iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
+ ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
ELSE bodega_tramo.descripcion END AS Ubicacion_Origen,
CASE WHEN bodega_tramo_1.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo_1.descripcion, 2, 
iif(CHARINDEX('-', bodega_tramo_1.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo_1.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
bodega_ubicacion_1.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo_1.descripcion, iif(CHARINDEX('-', bodega_tramo_1.descripcion, 0) < 0, 0, CHARINDEX('-', 
bodega_tramo_1.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion_1.nivel), 2) 
+ ' - ' + 'Pos' + bodega_ubicacion_1.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion_1.IdUbicacion) 
ELSE bodega_tramo_1.descripcion END AS Ubicacion_Destino,
						 dbo.trans_movimientos.fecha as Fecha, dbo.trans_movimientos.IdPresentacion, dbo.producto_presentacion.nombre AS Presentacion, 
                         dbo.producto_presentacion.factor AS Factor, trans_movimientos.IdProductoBodega, trans_movimientos.IdPropietarioBodega
FROM            dbo.propietarios INNER JOIN
                         dbo.trans_movimientos INNER JOIN
                         dbo.sis_tipo_tarea ON dbo.trans_movimientos.IdTipoTarea = dbo.sis_tipo_tarea.IdTipoTarea INNER JOIN
                         dbo.producto_bodega ON dbo.trans_movimientos.IdProductoBodega = dbo.producto_bodega.IdProductoBodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
                         dbo.producto_estado ON dbo.trans_movimientos.IdEstadoOrigen = dbo.producto_estado.IdEstado AND dbo.trans_movimientos.IdEstadoDestino = dbo.producto_estado.IdEstado INNER JOIN
                         dbo.bodega_ubicacion ON dbo.trans_movimientos.IdUbicacionOrigen = dbo.bodega_ubicacion.IdUbicacion INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo INNER JOIN
                         dbo.bodega_ubicacion AS bodega_ubicacion_1 ON dbo.trans_movimientos.IdUbicacionDestino = bodega_ubicacion_1.IdUbicacion INNER JOIN
                         dbo.bodega_tramo AS bodega_tramo_1 ON bodega_ubicacion_1.IdTramo = bodega_tramo_1.IdTramo ON dbo.propietarios.IdPropietario = dbo.producto_estado.IdPropietario AND 
                         dbo.propietarios.IdPropietario = dbo.producto_estado.IdPropietario INNER JOIN
                         dbo.propietario_bodega ON dbo.trans_movimientos.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega AND dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario INNER JOIN
                         dbo.unidad_medida ON dbo.propietarios.IdPropietario = dbo.unidad_medida.IdPropietario AND dbo.trans_movimientos.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida AND 
                         dbo.producto.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.trans_movimientos.IdPresentacion = dbo.producto_presentacion.IdPresentacion AND dbo.producto.IdProducto = dbo.producto_presentacion.IdProducto LEFT OUTER JOIN
                         dbo.motivo_ubicacion INNER JOIN
                         dbo.trans_ubic_hh_enc ON dbo.motivo_ubicacion.IdMotivoUbicacion = dbo.trans_ubic_hh_enc.IdMotivoUbicacion ON dbo.trans_movimientos.IdTransaccion = dbo.trans_ubic_hh_enc.IdTareaUbicacionEnc
WHERE        (dbo.sis_tipo_tarea.Nombre = 'UBIC')
GO


ALTER VIEW [dbo].[VW_Pedido]
AS
SELECT        enc.IdPedidoEnc AS Pedido, enc.referencia, det.IdPedidoDet, p.codigo AS Código, p.nombre AS Producto, pp.nombre AS Presentacion, u.Nombre AS UnidadMedida, e.nombre AS Estado, det.Cantidad, enc.Fecha_Pedido AS Fecha,
                          p.IdProducto, enc.IdPickingEnc, enc.estado AS EstadoPedido, enc.IdBodega, dbo.trans_picking_ubic.cantidad_recibida AS Cantidad_Pickeada, dbo.trans_picking_ubic.cantidad_verificada, 
                         dbo.trans_picking_ubic.cantidad_despachada
FROM            dbo.trans_picking_ubic INNER JOIN
                         dbo.trans_picking_det ON dbo.trans_picking_ubic.IdPickingDet = dbo.trans_picking_det.IdPickingDet RIGHT OUTER JOIN
                         dbo.trans_pe_enc AS enc INNER JOIN
                         dbo.trans_pe_det AS det ON enc.IdPedidoEnc = det.IdPedidoEnc INNER JOIN
                         dbo.producto_bodega AS pb ON det.IdProductoBodega = pb.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON pb.IdProducto = p.IdProducto INNER JOIN
                         dbo.producto_estado AS e ON det.IdEstado = e.IdEstado INNER JOIN
                         dbo.unidad_medida AS u ON det.IdUnidadMedidaBasica = u.IdUnidadMedida ON dbo.trans_picking_det.IdPedidoDet = det.IdPedidoDet LEFT OUTER JOIN
                         dbo.trans_picking_enc ON dbo.trans_picking_det.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc AND enc.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON det.IdPresentacion = pp.IdPresentacion
GO

ALTER VIEW [dbo].[VW_Cambios_Ubicacion]
AS
SELECT        TOP (100) PERCENT dbo.trans_movimientos.IdBodegaOrigen, dbo.sis_tipo_tarea.Nombre AS TipoTarea, dbo.producto.codigo AS Código, dbo.producto.nombre AS Producto, dbo.trans_movimientos.cantidad AS Cantidad, 
                         dbo.unidad_medida.Nombre AS UMBas, dbo.trans_movimientos.peso AS Peso, dbo.trans_movimientos.lote AS Lote, dbo.trans_movimientos.barra_pallet AS LP, dbo.trans_movimientos.fecha_vence AS Vence, 
						CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, 
						iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
						bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
						bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
						+ ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
						ELSE bodega_tramo.descripcion END AS Ubicacion_Origen,
						CASE WHEN bodega_tramo_1.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo_1.descripcion, 2, 
						iif(CHARINDEX('-', bodega_tramo_1.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo_1.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
						bodega_ubicacion_1.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo_1.descripcion, iif(CHARINDEX('-', bodega_tramo_1.descripcion, 0) < 0, 0, CHARINDEX('-', 
						bodega_tramo_1.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion_1.nivel), 2) 
						+ ' - ' + 'Pos' + bodega_ubicacion_1.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion_1.IdUbicacion) 
						ELSE bodega_tramo_1.descripcion END AS Ubicacion_Destino,
                         dbo.producto_estado.nombre AS EstadoOrigen,  producto_estado_1.nombre AS EstadoDestino,
						 dbo.motivo_ubicacion.Nombre AS Motivo, dbo.propietarios.nombre_comercial AS Propietario, dbo.trans_movimientos.fecha AS Fecha, dbo.trans_movimientos.IdPresentacion, 
                         dbo.producto_presentacion.nombre AS Presentacion, dbo.producto_presentacion.factor AS Factor, dbo.trans_movimientos.IdProductoBodega, dbo.trans_movimientos.IdPropietarioBodega,
						 ISNULL(dbo.operador.nombres,'S/N') + ' ' + ISNULL(dbo.operador.apellidos,'') AS Operador
FROM            dbo.trans_movimientos INNER JOIN
                         dbo.sis_tipo_tarea ON dbo.trans_movimientos.IdTipoTarea = dbo.sis_tipo_tarea.IdTipoTarea INNER JOIN
                         dbo.producto_bodega ON dbo.trans_movimientos.IdProductoBodega = dbo.producto_bodega.IdProductoBodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
                         dbo.bodega_ubicacion ON dbo.trans_movimientos.IdUbicacionOrigen = dbo.bodega_ubicacion.IdUbicacion INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo INNER JOIN
                         dbo.bodega_ubicacion AS bodega_ubicacion_1 ON dbo.trans_movimientos.IdUbicacionDestino = bodega_ubicacion_1.IdUbicacion INNER JOIN
                         dbo.bodega_tramo AS bodega_tramo_1 ON bodega_ubicacion_1.IdTramo = bodega_tramo_1.IdTramo INNER JOIN
                         dbo.propietario_bodega ON dbo.trans_movimientos.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.producto_estado ON dbo.propietarios.IdPropietario = dbo.producto_estado.IdPropietario AND dbo.propietarios.IdPropietario = dbo.producto_estado.IdPropietario ON 
                         dbo.propietario_bodega.IdPropietario = dbo.propietarios.IdPropietario AND dbo.trans_movimientos.IdEstadoOrigen = dbo.producto_estado.IdEstado INNER JOIN
                         dbo.unidad_medida ON dbo.propietarios.IdPropietario = dbo.unidad_medida.IdPropietario AND dbo.trans_movimientos.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida AND 
                         dbo.producto.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida INNER JOIN
                         dbo.producto_estado AS producto_estado_1 ON dbo.propietarios.IdPropietario = producto_estado_1.IdPropietario AND dbo.propietarios.IdPropietario = producto_estado_1.IdPropietario AND 
                         dbo.trans_movimientos.IdEstadoDestino = producto_estado_1.IdEstado INNER JOIN
                         dbo.operador ON dbo.trans_movimientos.usuario_agr = dbo.operador.IdOperador LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.trans_movimientos.IdPresentacion = dbo.producto_presentacion.IdPresentacion AND dbo.producto.IdProducto = dbo.producto_presentacion.IdProducto LEFT OUTER JOIN
                         dbo.motivo_ubicacion INNER JOIN
                         dbo.trans_ubic_hh_enc ON dbo.motivo_ubicacion.IdMotivoUbicacion = dbo.trans_ubic_hh_enc.IdMotivoUbicacion ON dbo.trans_movimientos.IdTransaccion = dbo.trans_ubic_hh_enc.IdTareaUbicacionEnc
WHERE        (dbo.sis_tipo_tarea.Nombre IN ('UBIC', 'CEST'))
GO

alter table propietarios add sistema bit default 0

ALTER VIEW [dbo].[VW_Propietario]
AS
SELECT        e.nombre AS Empresa, p.IdPropietario, p.IdEmpresa, p.IdTipoActualizacionCosto, p.contacto, p.nombre_comercial, p.imagen, p.telefono, p.direccion, p.activo, p.user_agr, p.fec_agr, p.user_mod, p.fec_mod, p.email, 
                         p.actualiza_costo_oc, p.color, p.codigo, p.sistema
FROM            dbo.propietarios AS p LEFT OUTER JOIN
                         dbo.empresa AS e ON p.IdEmpresa = e.IdEmpresa
GO

alter table trans_re_enc add mostrar_cantidad_esperada bit default 1

CREATE TABLE [dbo].[impresion_productos_barras](
[IdProductoBarra] [int] NOT NULL,
[codigo] [nvarchar](50) NULL,
[nombre] [nvarchar](100) NULL,
[codigo_barra] [nvarchar](100) NULL,
[cantidad_impresiones] [int] NULL,
[IdPresentacion] [int] NULL,
[IdUnidadMedidaBasica] [int] NULL,
[UnidadMedida] [nvarchar](50) NULL,
[Presentacion] [nvarchar](50) NULL,
[Camas_Por_Tarima] [int] NULL,
[Cajas_Por_Cama] [int] NULL,
[Cantidad_Presentacion] [float] NULL,
[Factor] [float] NULL,
[Lote] [nvarchar](50) NULL,
[Fecha_Ingreso] [date] NULL,
[Fecha_Vence] [date] NULL,
[fecha_agr] [datetime] NULL,
[user_agr] [nvarchar](50) NULL,
[impreso] [bit] NULL,
[activo] [bit] NULL,
CONSTRAINT [PK_Impresion_productos_barras] PRIMARY KEY CLUSTERED 
(
[IdProductoBarra] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER VIEW [dbo].[VW_Recepcion]
AS
SELECT        dbo.trans_re_enc.IdRecepcionEnc AS Código, dbo.propietarios.nombre_comercial AS Propietario, dbo.proveedor.nombre AS Proveedor, 
                         dbo.bodega.nombre AS Bodega, dbo.trans_re_oc.IdOrdenCompraEnc AS NoOrdenCompra, 
                         dbo.trans_oc_enc.No_Documento + ' ' + dbo.trans_oc_enc.Referencia AS No_DocumentoOC, dbo.trans_re_enc.fecha_recepcion AS Fecha, dbo.trans_re_enc.estado as Estado, 
                         dbo.trans_re_tr.TipoTrans, dbo.trans_re_tr.Descripcion, dbo.bodega_muelles.nombre AS Muelle, dbo.trans_re_enc.activo as Activo, dbo.usuario.nombres AS Usuario_Agrego, 
                         dbo.trans_re_enc.fec_agr AS Fecha_Agrego, dbo.trans_re_tr.IdTipoTransaccion, dbo.bodega.IdBodega
FROM            dbo.usuario INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.propietario_bodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario INNER JOIN
                         dbo.trans_re_tr INNER JOIN
                         dbo.trans_re_enc ON dbo.trans_re_tr.IdTipoTransaccion = dbo.trans_re_enc.IdTipoTransaccion ON 
                         dbo.propietario_bodega.IdPropietarioBodega = dbo.trans_re_enc.IdPropietarioBodega ON dbo.usuario.IdUsuario = dbo.trans_re_enc.user_agr INNER JOIN
                         dbo.bodega ON dbo.propietario_bodega.IdBodega = dbo.bodega.IdBodega LEFT OUTER JOIN
                         dbo.bodega_muelles INNER JOIN
                         dbo.bodega AS bodega_1 ON dbo.bodega_muelles.IdBodega = bodega_1.IdBodega INNER JOIN
                         dbo.proveedor_bodega ON bodega_1.IdBodega = dbo.proveedor_bodega.IdBodega INNER JOIN
                         dbo.trans_re_oc INNER JOIN
                         dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc ON 
                         dbo.proveedor_bodega.IdAsignacion = dbo.trans_oc_enc.IdProveedorBodega INNER JOIN
                         dbo.proveedor ON dbo.proveedor_bodega.IdProveedor = dbo.proveedor.IdProveedor ON dbo.propietarios.IdPropietario = dbo.proveedor.IdPropietario AND 
                         dbo.trans_re_enc.IdMuelle = dbo.bodega_muelles.IdMuelle AND dbo.trans_re_enc.IdRecepcionEnc = dbo.trans_re_oc.IdRecepcionEnc
GO

'CM: Agregué Cantidad_presentacion en VW_MOVIMIENTOS.
ALTER VIEW [dbo].[VW_Movimientos]
AS
SELECT        pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS [Estado Origen], pe2.nombre AS [Estado Destino], 
                         u.Nombre AS [Unidad de Medida], m.cantidad, m.peso, m.lote, u1.descripcion AS Origen, u2.descripcion AS Destino, stt.Nombre AS [Tipo Tarea], m.IdBodegaOrigen, 
                         m.fecha, p.IdProducto, p.codigo, p.codigo_barra, m.barra_pallet, m.fecha_vence, m.cantidad / pp.factor AS Cantidad_Presentacion
FROM            dbo.trans_movimientos AS m LEFT OUTER JOIN
                         dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
                         dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion LEFT OUTER JOIN
                         dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
                         dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
GROUP BY pr.nombre_comercial, p.nombre, pp.nombre, pe1.nombre, pe2.nombre, u.Nombre, m.cantidad, m.peso, m.lote, u1.descripcion, u2.descripcion, stt.Nombre, 
                         m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra, m.barra_pallet, m.fecha_vence, pp.IdPresentacion, pp.factor, m.cantidad / pp.factor
GO

insert into menu_sistema values('7.8','Servicio de Impresión Principal','rpgServicioImpresiones',2,7,0)
insert into menu_sistema values('7.8.1','Servicio de impresión','cmdPrintSvr',3,7.8,0)
 
insert into menu_sistema_op values ('1.10',8,'Impresion Barras',2,1,12)
insert into menu_rol_op values ('1.10',1,'Erik Calderón', '20190605','Erik Calderón','20190605',1,1)


ALTER VIEW [dbo].[VW_Movimientos]
AS
SELECT pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS [Estado Origen], pe2.nombre AS [Estado Destino], 
u.Nombre AS [Unidad de Medida], m.cantidad, m.peso, m.lote, u1.descripcion AS Origen, u2.descripcion AS Destino, stt.Nombre AS [Tipo Tarea], m.IdBodegaOrigen, 
m.fecha, p.IdProducto, p.codigo, p.codigo_barra, m.barra_pallet, m.fecha_vence, m.cantidad / pp.factor AS Cantidad_Presentacion
FROM dbo.trans_movimientos AS m LEFT OUTER JOIN
dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion LEFT OUTER JOIN
dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
GROUP BY pr.nombre_comercial, p.nombre, pp.nombre, pe1.nombre, pe2.nombre, u.Nombre, m.cantidad, m.peso, m.lote, u1.descripcion, u2.descripcion, stt.Nombre, 
m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra, m.barra_pallet, m.fecha_vence, pp.IdPresentacion, pp.factor, m.cantidad / pp.factor
GO

alter table trans_re_det add lic_plate nvarchar(50)


ALTER VIEW [dbo].[VW_Movimientos_N]
AS
SELECT pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, pe2.nombre AS EstadoDestino, 
u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, stt.Nombre AS TipoTarea, m.IdBodegaOrigen, 
m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, m.fecha_vence, pr.IdTipoActualizacionCosto, m.IdPresentacion, 
m.IdUnidadMedida, m.IdEstadoOrigen, m.IdProductoBodega, prb.IdPropietarioBodega, prb.IdBodega, m.barra_pallet
FROM dbo.trans_movimientos AS m LEFT OUTER JOIN
dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion LEFT OUTER JOIN
dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
GO


ALTER VIEW [dbo].[VW_Movimientos_N1]
AS
SELECT m.idmovimiento, pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, 
pe2.nombre AS EstadoDestino, u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, 
stt.Nombre AS TipoTarea, m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, 
ISNULL(toce.No_Documento, N'') AS No_Doc_Ingreso, ISNULL(toce.Referencia, N'') AS No_Ref_Ingreso, '' AS No_Doc_Salida, '' AS No_Ref_Salida, m.fecha_vence, 
pr.IdTipoActualizacionCosto, m.IdPresentacion, m.IdUnidadMedida, m.IdEstadoOrigen, m.IdProductoBodega,m.barra_pallet
FROM dbo.trans_movimientos AS m LEFT OUTER JOIN
dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
dbo.trans_re_enc AS tre ON prb.IdPropietarioBodega = tre.IdPropietarioBodega AND m.IdRecepcion = tre.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_re_oc AS troc ON tre.IdRecepcionEnc = troc.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_oc_enc AS toce ON troc.IdOrdenCompraEnc = toce.IdOrdenCompraEnc LEFT OUTER JOIN
dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion LEFT OUTER JOIN
dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
WHERE M.IdTipoTarea IN (1, 2, 6, 13, 14, 15, 16)
UNION
SELECT m.idmovimiento, pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, 
pe2.nombre AS EstadoDestino, u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, 
stt.Nombre AS TipoTarea, m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, 
ISNULL(toce.No_Documento, N'') AS No_Doc_Ingreso, ISNULL(toce.Referencia, N'') AS No_Ref_Ingreso, ISNULL(CASE WHEN penc.IdPedidoEnc = '0' THEN '' END, 
N'') AS No_Doc_Salida, ISNULL(penc.Referencia, N'') AS No_Ref_Salida, m.fecha_vence, pr.IdTipoActualizacionCosto, m.IdPresentacion, m.IdUnidadMedida, 
m.IdEstadoOrigen, m.IdProductoBodega,m.barra_pallet
FROM dbo.trans_movimientos AS m LEFT OUTER JOIN
dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
(SELECT DISTINCT d .IdDespachoEnc, d .IDPEDIDOENC, d .IDPRODUCTOBODEGA, d .IdUnidadMedidaBasica, d .IdPresentacion
FROM trans_despacho_det d) Desp ON DESP.IdDespachoEnc = M.IdTransaccion AND m.IdProductoBodega = DESP.IdProductoBodega AND 
m.IdUnidadMedida = DESP.IdUnidadMedidaBasica AND ISNULL(m.IdPresentacion, 0) = DESP.IdPresentacion LEFT OUTER JOIN
trans_pe_enc penc ON penc.IdPedidoEnc = desp.IdPedidoEnc LEFT OUTER JOIN
dbo.trans_re_enc AS tre ON prb.IdPropietarioBodega = tre.IdPropietarioBodega AND m.IdRecepcion = tre.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_re_oc AS troc ON tre.IdRecepcionEnc = troc.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_oc_enc AS toce ON troc.IdOrdenCompraEnc = toce.IdOrdenCompraEnc LEFT OUTER JOIN
dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion LEFT OUTER JOIN
dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
WHERE M.IdTipoTarea = 5
UNION
SELECT m.idmovimiento, pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, 
pe2.nombre AS EstadoDestino, u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, 
stt.Nombre AS TipoTarea, m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, 
ISNULL(toce.No_Documento, N'') AS No_Doc_Ingreso, ISNULL(toce.Referencia, N'') AS No_Ref_Ingreso, CONVERT(NVARCHAR(50), ISNULL(aje.idajusteenc, N'')) 
AS No_Doc_Salida, CONVERT(NVARCHAR(50), ISNULL(aje.idajusteenc, N'')) AS No_Ref_Salida, m.fecha_vence, pr.IdTipoActualizacionCosto, m.IdPresentacion, 
m.IdUnidadMedida, m.IdEstadoOrigen, m.IdProductoBodega,m.barra_pallet
FROM dbo.trans_movimientos AS m LEFT OUTER JOIN
dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
dbo.trans_re_enc AS tre ON prb.IdPropietarioBodega = tre.IdPropietarioBodega AND m.IdRecepcion = tre.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_re_oc AS troc ON tre.IdRecepcionEnc = troc.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_oc_enc AS toce ON troc.IdOrdenCompraEnc = toce.IdOrdenCompraEnc LEFT OUTER JOIN
dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion LEFT OUTER JOIN
dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea LEFT OUTER JOIN
dbo.trans_ajuste_enc aje ON aje.idajusteenc = m.IdTransaccion
WHERE M.IdTipoTarea = 17
GO


ALTER VIEW [dbo].[VW_Picking]
AS
SELECT        enc.IdPickingEnc AS Código, b.nombre AS Bodega, p.nombre_comercial AS Propietario, bu.descripcion AS [Ubicación Picking], enc.estado as Estado, 
                         enc.detalle_operador AS [Detalle Operador], CONVERT(char(5), enc.hora_ini, 108) AS [Hora Inicial], CONVERT(char(5), enc.hora_fin, 108) AS [Hora Final], 
                         enc.fecha_picking AS [Fecha Picking], enc.activo, enc.IdBodega
FROM            dbo.trans_picking_enc AS enc INNER JOIN
                         dbo.propietario_bodega AS pb ON enc.IdPropietarioBodega = pb.IdPropietarioBodega INNER JOIN
                         dbo.propietarios AS p ON pb.IdPropietario = p.IdPropietario INNER JOIN
                         dbo.bodega AS b ON enc.IdBodega = b.IdBodega INNER JOIN
                         dbo.bodega_ubicacion AS bu ON enc.IdUbicacionPicking = bu.IdUbicacion
GO



INSERT INTO [dbo].[producto_estado]
           ([IdEstado]
           ,[IdPropietario]
           ,[nombre]
           ,[IdUbicacionDefecto]
           ,[utilizable]
           ,[activo]
           ,[user_agr]
           ,[fec_agr]
           ,[user_mod]
           ,[fec_mod]
           ,[dañado]
           ,[codigo_bodega_erp])
     VALUES
           (5
           ,1
           ,'No Encontrado'
           ,7479
           ,0
           ,1
           ,1
           ,getdate()
           ,1
           ,getdate()
           ,0
           ,'')

alter table bodega add ubic_producto_ne int 
alter table bodega add IdProductoEstadoNE int
alter table bodega_ubicacion add ubicacion_ne bit default 0

ALTER VIEW [dbo].[VW_Recepcion_Det]
AS
SELECT dbo.trans_re_enc.IdRecepcionEnc AS Código, dbo.propietarios.nombre_comercial AS Propietario, dbo.proveedor.nombre AS Proveedor, 
dbo.bodega.nombre AS Bodega, dbo.trans_re_oc.IdOrdenCompraEnc AS NoOrdenCompra, dbo.trans_oc_enc.No_Documento AS No_DocumentoOC, 
dbo.trans_oc_enc.Referencia AS Pedido_Compra, dbo.trans_re_enc.fecha_recepcion AS Fecha, dbo.trans_re_enc.estado, dbo.trans_re_tr.TipoTrans, 
dbo.trans_re_tr.Descripcion, dbo.bodega_muelles.nombre AS Muelle, dbo.trans_re_enc.activo, dbo.usuario.nombres AS Usuario_Agrego, 
dbo.trans_re_enc.fec_agr AS Fecha_Agrego, dbo.producto.codigo AS CodigoProd, dbo.producto.codigo_barra AS BarraProd, dbo.producto.nombre AS NombreProd, 
dbo.trans_re_det.cantidad_recibida AS Recibido, dbo.unidad_medida.Nombre AS UM, dbo.producto_estado.nombre AS EstadoProd, 
dbo.producto_presentacion.nombre AS PresProd, dbo.trans_re_det.lic_plate
FROM dbo.producto_bodega INNER JOIN
dbo.bodega_muelles INNER JOIN
dbo.bodega ON dbo.bodega_muelles.IdBodega = dbo.bodega.IdBodega INNER JOIN
dbo.proveedor_bodega ON dbo.bodega.IdBodega = dbo.proveedor_bodega.IdBodega INNER JOIN
dbo.trans_re_oc INNER JOIN
dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc ON 
dbo.proveedor_bodega.IdAsignacion = dbo.trans_oc_enc.IdProveedorBodega INNER JOIN
dbo.proveedor ON dbo.proveedor_bodega.IdProveedor = dbo.proveedor.IdProveedor ON dbo.producto_bodega.IdBodega = dbo.bodega.IdBodega INNER JOIN
dbo.trans_re_det ON dbo.producto_bodega.IdProductoBodega = dbo.trans_re_det.IdProductoBodega INNER JOIN
dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
dbo.unidad_medida ON dbo.trans_re_det.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida AND 
dbo.producto.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida INNER JOIN
dbo.producto_estado ON dbo.trans_re_det.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
dbo.producto_presentacion ON dbo.trans_re_det.IdPresentacion = dbo.producto_presentacion.IdPresentacion AND 
dbo.producto.IdProducto = dbo.producto_presentacion.IdProducto RIGHT OUTER JOIN
dbo.usuario INNER JOIN
dbo.propietarios INNER JOIN
dbo.propietario_bodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario INNER JOIN
dbo.trans_re_tr INNER JOIN
dbo.trans_re_enc ON dbo.trans_re_tr.IdTipoTransaccion = dbo.trans_re_enc.IdTipoTransaccion ON 
dbo.propietario_bodega.IdPropietarioBodega = dbo.trans_re_enc.IdPropietarioBodega ON dbo.usuario.IdUsuario = dbo.trans_re_enc.user_agr ON 
dbo.producto_estado.IdPropietario = dbo.propietarios.IdPropietario AND dbo.producto_estado.IdPropietario = dbo.propietarios.IdPropietario AND 
dbo.unidad_medida.IdPropietario = dbo.propietarios.IdPropietario AND dbo.producto.IdPropietario = dbo.propietarios.IdPropietario AND 
dbo.trans_re_det.IdRecepcionEnc = dbo.trans_re_enc.IdRecepcionEnc AND dbo.proveedor.IdPropietario = dbo.propietarios.IdPropietario AND 
dbo.bodega_muelles.IdMuelle = dbo.trans_re_enc.IdMuelle AND dbo.trans_re_oc.IdRecepcionEnc = dbo.trans_re_enc.IdRecepcionEnc
GO


ALTER VIEW [dbo].[VW_ExistenciasPorNoDocumento]
AS
SELECT dbo.trans_re_enc.IdRecepcionEnc AS Código, dbo.propietarios.nombre_comercial AS Propietario, dbo.proveedor.nombre AS Proveedor, 
dbo.bodega.nombre AS Bodega, dbo.trans_re_oc.IdOrdenCompraEnc AS NoOrdenCompra, dbo.trans_oc_enc.No_Documento AS No_DocumentoOC, 
dbo.trans_re_oc.no_docto AS No_DocumentoRec, dbo.trans_oc_enc.Referencia AS ReferenciaOC, dbo.trans_re_enc.fecha_recepcion AS Fecha, 
dbo.trans_re_enc.estado, dbo.trans_re_tr.TipoTrans, dbo.trans_re_tr.Descripcion, dbo.bodega_muelles.nombre AS Muelle, dbo.trans_re_enc.activo, 
dbo.usuario.nombres AS Usuario_Agrego, dbo.trans_re_enc.fec_agr AS Fecha_Agrego, dbo.producto.codigo AS CodigoProd, dbo.producto.codigo_barra AS BarraProd,
dbo.producto.nombre AS NombreProd, dbo.trans_re_det.cantidad_recibida AS Recibido, dbo.unidad_medida.Nombre AS UM, 
dbo.producto_estado.nombre AS EstadoProd, dbo.producto_presentacion.nombre AS PresProd, dbo.trans_re_det.lic_plate
FROM dbo.producto_bodega INNER JOIN
dbo.bodega_muelles INNER JOIN
dbo.bodega ON dbo.bodega_muelles.IdBodega = dbo.bodega.IdBodega INNER JOIN
dbo.proveedor_bodega ON dbo.bodega.IdBodega = dbo.proveedor_bodega.IdBodega INNER JOIN
dbo.trans_re_oc INNER JOIN
dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc ON 
dbo.proveedor_bodega.IdAsignacion = dbo.trans_oc_enc.IdProveedorBodega INNER JOIN
dbo.proveedor ON dbo.proveedor_bodega.IdProveedor = dbo.proveedor.IdProveedor ON dbo.producto_bodega.IdBodega = dbo.bodega.IdBodega INNER JOIN
dbo.trans_re_det ON dbo.producto_bodega.IdProductoBodega = dbo.trans_re_det.IdProductoBodega INNER JOIN
dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
dbo.unidad_medida ON dbo.trans_re_det.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida AND 
dbo.producto.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida INNER JOIN
dbo.producto_estado ON dbo.trans_re_det.IdProductoEstado = dbo.producto_estado.IdEstado INNER JOIN
dbo.trans_re_tr INNER JOIN
dbo.usuario INNER JOIN
dbo.propietarios INNER JOIN
dbo.propietario_bodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario INNER JOIN
dbo.trans_re_enc ON dbo.propietario_bodega.IdPropietarioBodega = dbo.trans_re_enc.IdPropietarioBodega ON 
dbo.usuario.IdUsuario = dbo.trans_re_enc.user_agr ON dbo.trans_re_tr.IdTipoTransaccion = dbo.trans_re_enc.IdTipoTransaccion ON 
dbo.producto_estado.IdPropietario = dbo.propietarios.IdPropietario AND dbo.producto_estado.IdPropietario = dbo.propietarios.IdPropietario AND 
dbo.unidad_medida.IdPropietario = dbo.propietarios.IdPropietario AND dbo.producto.IdPropietario = dbo.propietarios.IdPropietario AND 
dbo.trans_re_det.IdRecepcionEnc = dbo.trans_re_enc.IdRecepcionEnc AND dbo.proveedor.IdPropietario = dbo.propietarios.IdPropietario AND 
dbo.bodega_muelles.IdMuelle = dbo.trans_re_enc.IdMuelle AND dbo.trans_re_oc.IdRecepcionEnc = dbo.trans_re_enc.IdRecepcionEnc LEFT OUTER JOIN
dbo.producto_presentacion ON dbo.trans_re_det.IdPresentacion = dbo.producto_presentacion.IdPresentacion AND 
dbo.producto.IdProducto = dbo.producto_presentacion.IdProducto
GO


alter table i_nav_config_enc add rechazar_pedido_incompleto int default 1
alter table i_nav_config_enc add despachar_existencia_parcial int default 0
alter table i_nav_config_enc add convertir_decimales_a_umbas int default 0
alter table i_nav_ped_compra_enc add Internal_Transfer_Document_No nvarchar(50)
alter table I_nav_config_enc add generar_pedido_ingreso_bodega_destino bit default 0
alter table i_nav_ped_traslado_enc add Receipt_Document_Reference nvarchar(50)
alter table trans_pe_enc add Referencia_Documento_Ingreso_Bodega_Destino nvarchar(50)


ALTER VIEW [dbo].[VW_Pedido]
AS
SELECT        enc.IdPedidoEnc AS Pedido, enc.referencia, det.IdPedidoDet, p.codigo AS Código, p.nombre AS Producto, pp.nombre AS Presentacion, u.Nombre AS UnidadMedida, e.nombre AS Estado, det.Cantidad, enc.Fecha_Pedido AS Fecha,
                          p.IdProducto, enc.IdPickingEnc, enc.estado AS EstadoPedido, enc.IdBodega, SUM(dbo.trans_picking_ubic.cantidad_recibida) AS Cantidad_Pickeada, SUM(dbo.trans_picking_ubic.cantidad_verificada) AS Cantidad_Verificada, 
                         SUM(dbo.trans_picking_ubic.cantidad_despachada) AS Cantidad_Despachada
FROM            dbo.trans_picking_ubic INNER JOIN
                         dbo.trans_picking_det ON dbo.trans_picking_ubic.IdPickingDet = dbo.trans_picking_det.IdPickingDet RIGHT OUTER JOIN
                         dbo.trans_pe_enc AS enc INNER JOIN
                         dbo.trans_pe_det AS det ON enc.IdPedidoEnc = det.IdPedidoEnc INNER JOIN
                         dbo.producto_bodega AS pb ON det.IdProductoBodega = pb.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON pb.IdProducto = p.IdProducto INNER JOIN
                         dbo.producto_estado AS e ON det.IdEstado = e.IdEstado INNER JOIN
                         dbo.unidad_medida AS u ON det.IdUnidadMedidaBasica = u.IdUnidadMedida ON dbo.trans_picking_det.IdPedidoDet = det.IdPedidoDet LEFT OUTER JOIN
                         dbo.trans_picking_enc ON dbo.trans_picking_det.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc AND enc.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON det.IdPresentacion = pp.IdPresentacion
GROUP BY enc.IdPedidoEnc, enc.referencia, det.IdPedidoDet, p.codigo, p.nombre, pp.nombre, u.Nombre, e.nombre, det.Cantidad, enc.Fecha_Pedido, p.IdProducto, enc.IdPickingEnc, enc.estado, enc.IdBodega
GO

DROP INDEX [NonClusteredIndex-20181122-121853] ON dbo.i_nav_barras_pallet


CREATE TABLE [dbo].[stock_transito](
	[IdStockTransito] [int] NOT NULL,
	[IdEmpresa] [int] NULL,
	[IdBodegaOrigen] [int] NULL,
	[IdBodegaDestino] [int] NULL,
	[IdStock] [int] NULL,
	[IdProductoBodegaDestino] [int] NULL,
	[IdProductoBodegaOrigen] [int] NULL,
	[IdProductoEstado] [int] NULL,
	[IdPresentacion] [int] NULL,
	[IdUnidadMedida] [int] NULL,
	[IdUbicacion] [int] NULL,
	[IdRecepcionEnc] [int] NULL,
	[IdRecepcionDet] [int] NULL,
	[IdPedidoEnc] [int] NULL,
	[IdPickingEnc] [int] NULL,
	[IdDespachoEnc] [int] NULL,
	[IdPickingUbic] [int] NULL,
	[IdPedidoDet] [int] NULL,
	[Lote] [nvarchar](50) NULL,
	[Lic_Plate] [nvarchar](50) NULL,
	[Cantidad] [float] NULL,
	[Fecha_Ingreso] [date] NULL,
	[Fecha_Vence] [date] NULL,
	[Fecha_Manufactura] [date] NULL,
	[Cantidad_Recibida] [float] NULL,
	[Fecha_Agregado] [date] NULL,
	[IdOrdenCompraEnc_BodDest] [int] NULL,
	[IdRecepcionEnc_BodDest] [int] NULL,
 CONSTRAINT [PK_stock_transito] PRIMARY KEY CLUSTERED 
(
	[IdStockTransito] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[stock_transito] ADD  CONSTRAINT [DF_stock_transito_Fecha_Agregado]  DEFAULT (getdate()) FOR [Fecha_Agregado]
GO	
	
insert into trans_oc_ti values (4,'Transferencia WMS',0,1,GETDATE(),1,getdate(),1)

alter table i_nav_config_enc add generar_recepcion_auto_bodega_destino bit default 0

CREATE VIEW VW_Tareas_Picking_HH AS
SELECT p.IdPickingEnc, p.IdBodega, p.IdPropietarioBodega, p.IdUbicacionPicking, 
p.fecha_picking, p.hora_ini, p.hora_fin, p.estado, p.user_agr, p.fec_agr, p.user_mod, p.fec_mod,
p.detalle_operador, p.activo, 
b.nombre AS NombreBodega, pp.nombre_comercial,
CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, 
iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
+ ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
ELSE bodega_tramo.descripcion END AS NombreUbicacion,
o.IdOperadorBodega
FROM  trans_picking_enc AS p INNER JOIN
trans_picking_op AS o ON p.IdPickingEnc = o.IdPickingEnc INNER JOIN
bodega AS b ON p.IdBodega = b.IdBodega INNER JOIN
propietario_bodega AS pb ON pb.IdPropietarioBodega = p.IdPropietarioBodega INNER JOIN
propietarios AS pp ON pp.IdPropietario = pb.IdPropietario INNER JOIN
bodega_area ON b.IdBodega = bodega_area.IdBodega INNER JOIN
bodega_sector ON bodega_area.IdArea = bodega_sector.IdArea INNER JOIN
bodega_tramo ON bodega_sector.IdSector = bodega_tramo.IdSector INNER JOIN
bodega_ubicacion ON p.IdUbicacionPicking = bodega_ubicacion.IdUbicacion AND bodega_tramo.IdTramo = bodega_ubicacion.IdTramo

alter table trans_picking_ubic add lic_plate_reemplazo nvarchar(50)
alter table trans_picking_ubic add IdUbicacion_reemplazo int
alter table trans_picking_ubic add IdStock_reemplazo int

ALTER VIEW [dbo].[VW_CalculoVencimientos]
AS
SELECT        dbo.propietarios.nombre_comercial AS Propietario, dbo.producto.codigo, dbo.producto.codigo_barra AS Barra, dbo.producto.nombre, 
                         dbo.unidad_medida.Nombre AS UnidadMedida, dbo.producto_presentacion.nombre AS Presentacion, dbo.stock.lote, dbo.stock.fecha_ingreso, 
                         dbo.stock.fecha_vence, DATEADD(day, ISNULL(dbo.producto.tolerancia, 0), GETDATE()) AS FechaProyectada, dbo.producto.tolerancia AS [CalculoVencimiento(Días)], 
                         DATEDIFF(day, DATEADD(day, ISNULL(dbo.producto.tolerancia, 0), GETDATE()), dbo.stock.fecha_vence) AS DiasCalculados, dbo.stock.cantidad AS CantidadSF, 
                         dbo.producto_estado.nombre AS NomEstado, dbo.stock.IdUbicacion, ROUND(dbo.stock.cantidad / dbo.producto_presentacion.factor, 2) AS Cantidad, 
                         dbo.producto.IdProducto, dbo.propietario_bodega.IdPropietarioBodega, dbo.propietario_bodega.IdBodega, 
                         CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, 
                         iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
                         bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
                         bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
                         + ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
                         ELSE bodega_tramo.descripcion END AS UbicacionCompleta
FROM            dbo.producto_estado INNER JOIN
                         dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.propietario_bodega INNER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.stock ON dbo.producto_bodega.IdProductoBodega = dbo.stock.IdProductoBodega ON 
                         dbo.propietario_bodega.IdPropietarioBodega = dbo.stock.IdPropietarioBodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON 
                         dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida ON dbo.producto_estado.IdEstado = dbo.stock.IdProductoEstado INNER JOIN
                         dbo.bodega_ubicacion ON dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion LEFT OUTER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto
WHERE        (dbo.producto.control_vencimiento = 1)
GROUP BY dbo.propietarios.nombre_comercial, dbo.stock.IdStock, dbo.propietario_bodega.IdPropietarioBodega, dbo.unidad_medida.IdUnidadMedida, 
                         dbo.unidad_medida.Nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.cantidad, 
                         dbo.stock.fecha_vence, dbo.stock.IdProductoEstado, dbo.stock.IdPresentacion, dbo.producto.existencia_min, dbo.producto.existencia_max, 
                         dbo.producto.codigo_barra, dbo.producto.tolerancia, dbo.producto.control_vencimiento, dbo.producto_presentacion.nombre, dbo.producto_estado.IdEstado, 
                         dbo.producto_estado.nombre, dbo.stock.serial, dbo.stock.IdUbicacion, dbo.stock.cantidad / dbo.producto_presentacion.factor, dbo.propietario_bodega.IdBodega, 
                         dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.descripcion, dbo.bodega_tramo.descripcion, 
                         dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, bodega_tramo.es_rack, 
                         bodega_tramo.descripcion
HAVING        (DATEADD(day, ISNULL(dbo.producto.tolerancia, 0), GETDATE()) >= dbo.stock.fecha_vence)
GO


CREATE VIEW [dbo].[VW_ProductoEstadoUbicDefecto]
AS
SELECT u.IdUbicacion,  p.IdEstado, a.IdBodega, CASE WHEN t.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(t.descripcion, 2, 
iif(CHARINDEX('-', t.descripcion, 0) < 0, 1, CHARINDEX('-', t.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
u.indice_x), 2) + ' - ' + 'T' + SUBSTRING(t.descripcion, iif(CHARINDEX('-', t.descripcion, 0) < 0, 0, CHARINDEX('-', 
t.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), u.nivel), 2) 
+ ' - ' + 'Pos' + u.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), u.IdUbicacion) 
ELSE t.descripcion END AS NombreUbic
FROM producto_estado AS p 
INNER JOIN bodega_ubicacion AS u ON p.IdUbicacionDefecto = u.IdUbicacion 
INNER JOIN bodega_tramo t ON t.IdTramo = u.IdTramo
INNER JOIN bodega_sector s ON s.IdSector = t.IdSector
INNER JOIN bodega_area a ON s.IdArea = a.IdArea
GO


CREATE VIEW [dbo].[VW_ProductoEstadoUbic]
AS
SELECT u.IdUbicacion, p.IdEstado, a.IdBodega, CASE WHEN t.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(t.descripcion, 2, 
iif(CHARINDEX('-', t.descripcion, 0) < 0, 1, CHARINDEX('-', t.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
u.indice_x), 2) + ' - ' + 'T' + SUBSTRING(t.descripcion, iif(CHARINDEX('-', t.descripcion, 0) < 0, 0, CHARINDEX('-', 
t.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), u.nivel), 2) 
+ ' - ' + 'Pos' + u.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), u.IdUbicacion) 
ELSE t.descripcion END AS NombreUbic
FROM producto_estado_ubic AS p 
INNER JOIN bodega_ubicacion AS u ON p.IdUbicacionDefecto = u.IdUbicacion
INNER JOIN bodega_tramo t ON t.IdTramo = u.IdTramo
INNER JOIN bodega_sector s ON s.IdSector = t.IdSector
INNER JOIN bodega_area a ON s.IdArea = a.IdArea
GO

CREATE VIEW [dbo].[VW_Reporte_Recepcion_20190726]
AS
SELECT        dbo.trans_re_oc.IdOrdenCompraEnc, dbo.producto_bodega.IdProductoBodega, dbo.trans_re_enc.IdRecepcionEnc, dbo.producto.codigo, dbo.producto.nombre AS Producto, dbo.trans_oc_det.cantidad, 
                         dbo.trans_re_det.cantidad_recibida AS CantidadRecibida, dbo.unidad_medida.Nombre AS Unidad_Medida, dbo.producto_presentacion.nombre AS Presentacion, dbo.trans_re_enc.fecha_recepcion, dbo.trans_re_enc.hora_ini_pc, 
                         dbo.trans_re_enc.hora_fin_pc, dbo.trans_re_enc.estado AS EstadoRec, dbo.trans_re_det.lote, dbo.trans_re_det.fecha_vence, dbo.trans_re_det.peso, dbo.proveedor.nombre AS Proveedor, dbo.trans_oc_enc.IdProveedorBodega, 
                         dbo.proveedor.IdProveedor AS Id_Proveedor, dbo.trans_re_tr.TipoTrans, dbo.trans_oc_enc.No_Documento, dbo.trans_re_det.No_Linea, dbo.producto_estado.nombre AS EstadoProducto, 
                         dbo.trans_re_det.atributo_variante_1 AS Atributo_Variante
FROM            dbo.producto_estado INNER JOIN
                         dbo.unidad_medida INNER JOIN
                         dbo.trans_re_det ON dbo.unidad_medida.IdUnidadMedida = dbo.trans_re_det.IdUnidadMedida INNER JOIN
                         dbo.producto ON dbo.unidad_medida.IdUnidadMedida = dbo.producto.IdUnidadMedidaBasica ON dbo.producto_estado.IdEstado = dbo.trans_re_det.IdProductoEstado INNER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.bodega_muelles INNER JOIN
                         dbo.bodega ON dbo.bodega_muelles.IdBodega = dbo.bodega.IdBodega INNER JOIN
                         dbo.proveedor_bodega ON dbo.bodega.IdBodega = dbo.proveedor_bodega.IdBodega INNER JOIN
                         dbo.trans_re_oc INNER JOIN
                         dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc ON dbo.proveedor_bodega.IdAsignacion = dbo.trans_oc_enc.IdProveedorBodega INNER JOIN
                         dbo.proveedor ON dbo.proveedor_bodega.IdProveedor = dbo.proveedor.IdProveedor ON dbo.producto_bodega.IdBodega = dbo.bodega.IdBodega ON 
                         dbo.trans_re_det.IdProductoBodega = dbo.producto_bodega.IdProductoBodega AND dbo.producto.IdProducto = dbo.producto_bodega.IdProducto LEFT OUTER JOIN
                         dbo.trans_oc_det ON dbo.trans_re_oc.IdRecepcionOc = dbo.trans_oc_det.IdOrdenCompraEnc LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.trans_re_det.IdPresentacion = dbo.producto_presentacion.IdPresentacion AND dbo.producto.IdProducto = dbo.producto_presentacion.IdProducto RIGHT OUTER JOIN
                         dbo.usuario INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.propietario_bodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario INNER JOIN
                         dbo.trans_re_tr INNER JOIN
                         dbo.trans_re_enc ON dbo.trans_re_tr.IdTipoTransaccion = dbo.trans_re_enc.IdTipoTransaccion ON dbo.propietario_bodega.IdPropietarioBodega = dbo.trans_re_enc.IdPropietarioBodega ON 
                         dbo.usuario.IdUsuario = dbo.trans_re_enc.user_agr ON dbo.producto_estado.IdPropietario = dbo.propietarios.IdPropietario AND dbo.producto_estado.IdPropietario = dbo.propietarios.IdPropietario AND 
                         dbo.unidad_medida.IdPropietario = dbo.propietarios.IdPropietario AND dbo.producto.IdPropietario = dbo.propietarios.IdPropietario AND dbo.trans_re_det.IdRecepcionEnc = dbo.trans_re_enc.IdRecepcionEnc AND 
                         dbo.proveedor.IdPropietario = dbo.propietarios.IdPropietario AND dbo.bodega_muelles.IdMuelle = dbo.trans_re_enc.IdMuelle AND dbo.trans_re_oc.IdRecepcionEnc = dbo.trans_re_enc.IdRecepcionEnc
GROUP BY dbo.trans_re_enc.IdRecepcionEnc, dbo.propietarios.nombre_comercial, dbo.proveedor.nombre, dbo.trans_re_oc.IdOrdenCompraEnc, dbo.trans_oc_enc.No_Documento, dbo.trans_re_enc.fecha_recepcion, 
                         dbo.trans_re_enc.estado, dbo.trans_re_tr.TipoTrans, dbo.trans_re_tr.Descripcion, dbo.bodega_muelles.nombre, dbo.usuario.nombres, dbo.trans_re_enc.fec_agr, dbo.producto.codigo, dbo.producto.codigo_barra, 
                         dbo.producto.nombre, dbo.trans_re_det.cantidad_recibida, dbo.unidad_medida.Nombre, dbo.producto_estado.nombre, dbo.producto_presentacion.nombre, dbo.trans_re_det.No_Linea, dbo.trans_oc_det.cantidad, 
                         dbo.trans_re_enc.hora_ini_pc, dbo.trans_re_enc.hora_fin_pc, dbo.trans_re_det.lote, dbo.trans_re_det.fecha_vence, dbo.trans_re_det.peso, dbo.trans_oc_enc.IdProveedorBodega, dbo.proveedor.IdProveedor, 
                         dbo.trans_re_enc.activo, dbo.producto_bodega.IdProductoBodega, dbo.trans_re_det.atributo_variante_1
GO

CREATE VIEW [dbo].[VW_Reporte_Recepcion_20190727]
AS
SELECT        TOP (100) PERCENT dbo.trans_re_enc.IdRecepcionEnc, dbo.trans_re_det.IdRecepcionDet, dbo.trans_re_enc.IdPropietarioBodega, dbo.propietarios.nombre_comercial AS Propietario, dbo.trans_re_enc.fecha_recepcion, 
                         dbo.trans_re_enc.hora_ini_pc, dbo.trans_re_enc.hora_fin_pc, dbo.trans_re_tr.TipoTrans, dbo.trans_re_det.No_Linea, dbo.producto.codigo, dbo.producto.codigo_barra, dbo.producto.nombre AS Producto, 
                         dbo.trans_re_det.cantidad_recibida AS CantidadRecibida, dbo.trans_re_det.fecha_ingreso, dbo.trans_re_det.lote, dbo.trans_re_det.fecha_vence, dbo.producto_estado.nombre AS EstadoProducto, 
                         dbo.producto_presentacion.nombre AS Presentacion, dbo.trans_re_enc.estado AS EstadoRec, dbo.unidad_medida.Nombre AS Unidad_Medida, dbo.trans_re_det.peso, 
                         dbo.trans_re_det.atributo_variante_1 AS Atributo_Variante
FROM            dbo.trans_re_oc INNER JOIN
                         dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc INNER JOIN
                         dbo.propietario_bodega ON dbo.trans_oc_enc.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega INNER JOIN
                         dbo.proveedor_bodega ON dbo.trans_oc_enc.IdProveedorBodega = dbo.proveedor_bodega.IdAsignacion INNER JOIN
                         dbo.proveedor ON dbo.proveedor_bodega.IdProveedor = dbo.proveedor.IdProveedor RIGHT OUTER JOIN
                         dbo.trans_re_enc INNER JOIN
                         dbo.trans_re_det ON dbo.trans_re_enc.IdRecepcionEnc = dbo.trans_re_det.IdRecepcionEnc INNER JOIN
                         dbo.producto_bodega ON dbo.trans_re_det.IdProductoBodega = dbo.producto_bodega.IdProductoBodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
                         dbo.propietarios ON dbo.producto.IdPropietario = dbo.propietarios.IdPropietario INNER JOIN
                         dbo.unidad_medida ON dbo.trans_re_det.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida AND dbo.producto.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida AND 
                         dbo.propietarios.IdPropietario = dbo.unidad_medida.IdPropietario INNER JOIN
                         dbo.trans_re_tr ON dbo.trans_re_enc.IdTipoTransaccion = dbo.trans_re_tr.IdTipoTransaccion ON dbo.proveedor.IdPropietario = dbo.propietarios.IdPropietario AND 
                         dbo.propietario_bodega.IdPropietario = dbo.propietarios.IdPropietario AND dbo.propietario_bodega.IdPropietarioBodega = dbo.trans_re_enc.IdPropietarioBodega AND 
                         dbo.trans_re_oc.IdRecepcionEnc = dbo.trans_re_enc.IdRecepcionEnc AND dbo.trans_oc_enc.IdPropietarioBodega = dbo.trans_re_enc.IdPropietarioBodega LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.trans_re_det.IdPresentacion = dbo.producto_presentacion.IdPresentacion AND dbo.producto.IdProducto = dbo.producto_presentacion.IdProducto LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.trans_re_det.IdProductoEstado = dbo.producto_estado.IdEstado AND dbo.propietarios.IdPropietario = dbo.producto_estado.IdPropietario AND 
                         dbo.propietarios.IdPropietario = dbo.producto_estado.IdPropietario
GROUP BY dbo.trans_re_enc.IdRecepcionEnc, dbo.trans_re_det.IdRecepcionDet, dbo.trans_re_enc.IdPropietarioBodega, dbo.propietarios.nombre_comercial, dbo.trans_re_enc.fecha_recepcion, dbo.trans_re_enc.hora_ini_pc, 
                         dbo.trans_re_enc.hora_fin_pc, dbo.trans_re_tr.TipoTrans, dbo.trans_re_det.No_Linea, dbo.producto.codigo, dbo.producto.codigo_barra, dbo.producto.nombre, dbo.trans_re_det.cantidad_recibida, 
                         dbo.trans_re_det.fecha_ingreso, dbo.trans_re_det.lote, dbo.trans_re_det.fecha_vence, dbo.producto_estado.nombre, dbo.producto_presentacion.nombre, dbo.trans_re_enc.estado, dbo.unidad_medida.Nombre, 
                         dbo.trans_oc_enc.IdOrdenCompraEnc, dbo.trans_re_oc.IdRecepcionOc, dbo.trans_re_oc.no_docto, dbo.proveedor_bodega.IdProveedor, dbo.proveedor.nombre, dbo.trans_re_det.peso, 
                         dbo.trans_re_det.atributo_variante_1
ORDER BY dbo.trans_re_enc.IdRecepcionEnc
GO

CREATE VIEW [dbo].[VW_Tareas_Activas_HH]
AS
SELECT        TOP (100) PERCENT t.IdTransaccion AS Correlativo, 
                         CASE ta.Nombre WHEN 'RECE' THEN 'Recepción' WHEN 'UBIC' THEN 'Ubicación' WHEN 'CEST' THEN 'Cambio Estado' WHEN 'TRS' THEN 'Traslado' WHEN 'DES' THEN 'Despacho' WHEN 'INVE' THEN 'Inventario' WHEN 'AJU' THEN
                          'Ajuste' WHEN 'PIK' THEN 'Picking' END AS Tarea, t.FechaInicio AS Inicio, GETDATE() AS Ult_Revision, DATEDIFF(MINUTE, t.FechaInicio, GETDATE()) AS TTM, p.nombre_comercial AS Propietario, e.descripcion AS Estado, 
                         t.IdTareahh, t.IdBodega
FROM            dbo.tarea_hh AS t LEFT OUTER JOIN
                         dbo.propietarios AS p ON t.IdPropietario = p.IdPropietario LEFT OUTER JOIN
                         dbo.sis_estado_tarea_hh AS e ON t.IdEstado = e.IdEstado LEFT OUTER JOIN
                         dbo.sis_tipo_tarea AS ta ON t.IdTipoTarea = ta.IdTipoTarea
WHERE        (e.IdEstado <> 4) AND (e.IdEstado <> 3)
ORDER BY 'Inicio' DESC

CREATE TABLE [dbo].[tipo_tarea_tiempos](
	[IdEmpresa] [int] NOT NULL,
	[IdBodega] [int] NOT NULL,
	[IdTipoTarea] [int] NOT NULL,
	[TiempoMedioMinutos] [float] NULL,
 CONSTRAINT [PK_tipo_tarea_tiempos] PRIMARY KEY CLUSTERED 
(
	[IdEmpresa] ASC,
	[IdBodega] ASC,
	[IdTipoTarea] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

insert into menu_sistema_op values (1.11,13,'PalletId',2,1,13)
insert into menu_rol_op values (1.11,1,'Erik Calderón',GETDATE(),'Erik Calderón',GETDATE(),1,1)
insert into menu_rol_op values (1.11,2,'Erik Calderón',GETDATE(),'Erik Calderón',GETDATE(),1,1)


CREATE TABLE [dbo].[impresion_barras_pallet](
	[IdImpresionBarraPallet] [int] NOT NULL,
	[IdEmpresa] [int] NULL,
	[IdBodega] [int] NULL,
	[IdPropietarioBodega] [int] NOT NULL,
	[IdProductoBodega] [int] NOT NULL,
	[IdPresentacion] [int] NOT NULL,
	[IdOperadorBodega] [int] NULL,
	[IdImpresora] [int] NULL,
	[IdRecepcionDet] [int] NOT NULL,
	[IdUnidadMedida] [int] NULL,
	[codigo_bodega_origen] [nvarchar](50) NULL,
	[codigo_producto] [nvarchar](50) NULL,
	[nombre] [nvarchar](100) NULL,
	[codigo_barra] [nvarchar](35) NOT NULL,
	[cantidad] [float] NULL,
	[lote] [nvarchar](25) NULL,
	[fecha_vence] [datetime] NULL,
	[lic_plate_anterior] [nvarchar](50) NULL,
	[impreso] [bit] NULL,
	[reimpresiones] [int] NULL,
	[user_agr] [nvarchar](50) NULL,
	[fec_agr] [datetime] NULL,
	[user_mod] [nvarchar](50) NULL,
	[fec_mod] [datetime] NULL,
	[activo] [bit] NULL,
 CONSTRAINT [PK_impresion_barras_pallet] PRIMARY KEY CLUSTERED 
(
	[IdImpresionBarraPallet] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [dbo].[series_documento](
	[IdSerie] [int] NOT NULL,
	[IdEmpresa] [int] NULL,
	[IdBodega] [int] NULL,
	[IdTipoDocumento] [int] NULL,
	[serie] [nvarchar](50) NULL,
	[correlativo_inicial] [int] NULL,
	[correlativo_final] [int] NULL,
	[correlativo_actual] [int] NULL,
	[fec_agr] [datetime] NULL,
	[user_agr] [nvarchar](50) NULL,
	[fec_mod] [datetime] NULL,
	[user_mod] [nvarchar](50) NULL,
	[activo] [bit] NULL,
 CONSTRAINT [PK_series_documento] PRIMARY KEY CLUSTERED 
(
	[IdSerie] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

alter table producto_pallet add codigo_producto nvarchar(50)
alter table impresora add mac_adress nvarchar(25)

/*Flags para poder imprimir barras de pallet desde la HH si tiene presentación
update producto_presentacion set permitir_paletizar = 1
update producto_presentacion set genera_lp_auto= 1
update producto_presentacion set imprime_barra= 1
*/

alter table impresora add IdBodega int	

alter table i_nav_ped_traslado_det add Status int

CREATE VIEW [dbo].[VW_Producto_Estado_Ubic_Bodega]
AS
SELECT        dbo.producto_estado.IdEstado, dbo.producto_estado.IdPropietario, dbo.producto_estado.nombre, dbo.producto_estado.IdUbicacionDefecto, dbo.producto_estado.utilizable, dbo.producto_estado.activo, 
                         dbo.producto_estado.user_agr, dbo.producto_estado.fec_agr, dbo.producto_estado.user_mod, dbo.producto_estado.fec_mod, dbo.producto_estado.dañado, dbo.producto_estado.codigo_bodega_erp, 
                         dbo.producto_estado.sistema, dbo.producto_estado_ubic.IdUbicacionDefecto AS IdUbicacionBodegaDefecto, dbo.bodega.IdBodega, 
						CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, 
						iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
						bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
						bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
						+ ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
						ELSE bodega_tramo.descripcion END AS NombreUbic
FROM            dbo.bodega_ubicacion INNER JOIN
                         dbo.producto_estado_ubic ON dbo.bodega_ubicacion.IdUbicacion = dbo.producto_estado_ubic.IdUbicacionDefecto INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo INNER JOIN
                         dbo.bodega_sector ON dbo.bodega_tramo.IdSector = dbo.bodega_sector.IdSector INNER JOIN
                         dbo.bodega_area ON dbo.bodega_sector.IdArea = dbo.bodega_area.IdArea INNER JOIN
                         dbo.bodega ON dbo.bodega_area.IdBodega = dbo.bodega.IdBodega RIGHT OUTER JOIN
                         dbo.producto_estado ON dbo.producto_estado_ubic.IdEstado = dbo.producto_estado.IdEstado
GO



ALTER VIEW [dbo].[VW_Stock_Resumen]
AS
SELECT        dbo.producto_bodega.IdBodega, dbo.propietarios.IdPropietario, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto.IdProducto, 
                         dbo.producto_bodega.IdProductoBodega, dbo.stock.IdStock, dbo.stock.IdUbicacion_anterior, dbo.unidad_medida.IdUnidadMedida, dbo.stock.IdProductoEstado, 
                         dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.propietarios.nombre_comercial AS Propietario, dbo.producto.codigo, dbo.producto.codigo_barra AS Barra, 
                         dbo.producto.nombre, dbo.unidad_medida.Nombre AS UnidadMedida, dbo.producto_presentacion.nombre AS Presentacion, dbo.stock.lote, 
                         dbo.stock.fecha_ingreso AS Ingreso, dbo.stock.fecha_vence AS Vence, dbo.stock.cantidad AS Cantidad_UMBas, SUM(ISNULL(dbo.stock_res.cantidad, 0)) 
                         AS CantidadReservadaUmBas, dbo.stock.cantidad - ISNULL(SUM(dbo.stock_res.cantidad), 0) AS Disponible_UMBas, dbo.stock.peso, 
                         ISNULL(dbo.stock.cantidad / dbo.producto_presentacion.factor, 0) AS Cantidad_Presentacion, dbo.producto_estado.nombre AS NomEstado, 
                         'T[' + dbo.bodega_tramo.descripcion + '] - C[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.indice_x), ''), 2) 
                         + '] - N[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.nivel), ''), 2) 
                         + ']' + ' - P[' + dbo.bodega_ubicacion.orientacion_pos + ']' + ' - #[' + CONVERT(NVARCHAR(25), dbo.bodega_ubicacion.IdUbicacion) + ']' AS UbicacionCompleta, 
                         dbo.producto_estado.dañado, dbo.producto_presentacion.factor, dbo.producto_estado.utilizable AS EstadoUtilizable, dbo.stock.IdUbicacion, dbo.stock.lic_plate, 
                         dbo.stock.serial, dbo.stock.añada, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, 
                         dbo.producto_presentacion.ancho, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho AS Ancho_ubicacion, 
                         dbo.bodega_ubicacion.largo AS Largo_ubicacion, dbo.bodega_ubicacion.alto AS Alto_ubicacion, dbo.indice_rotacion.Descripcion AS IndiceRotacion, 
                         dbo.producto.existencia_min AS Existencia_min_umbas, dbo.producto.existencia_max AS Existencia_max_umbas, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia AS Existencia_min_pres, dbo.producto_presentacion.MaximoExistencia AS Existencia_max_pres, 
                         dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.IdUbicacion AS IdUbicacionActual, dbo.bodega_ubicacion.nivel AS Ubicacion_Nivel, 
                         dbo.bodega_ubicacion.indice_x AS Ubicacion_Indice_X, dbo.bodega_ubicacion.descripcion AS Ubicacion_Nombre, 
                         dbo.bodega_tramo.descripcion AS Ubicacion_Tramo, ISNULL(dbo.motivo_devolucion.Nombre, 'N/A') AS MotivoDevolucion, ISNULL(dbo.trans_oc_pol.NoPoliza, 'N/D') 
                         AS NoPoliza
FROM            dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.stock INNER JOIN
                         dbo.propietario_bodega ON dbo.stock.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega ON 
                         dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida LEFT OUTER JOIN
                         dbo.trans_oc_pol RIGHT OUTER JOIN
                         dbo.trans_re_oc INNER JOIN
                         dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc LEFT OUTER JOIN
                         dbo.motivo_devolucion ON dbo.trans_oc_enc.IdMotivoDevolucion = dbo.motivo_devolucion.IdMotivoDevolucion ON 
                         dbo.trans_oc_pol.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc ON dbo.stock.IdRecepcionEnc = dbo.trans_re_oc.IdRecepcionEnc LEFT OUTER JOIN
                         dbo.bodega_tramo INNER JOIN
                         dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo ON 
                         dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion LEFT OUTER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto LEFT OUTER JOIN
                         dbo.indice_rotacion ON dbo.producto.IdIndiceRotacion = dbo.indice_rotacion.IdIndiceRotacion ON 
                         dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega LEFT OUTER JOIN
                         dbo.stock_res ON dbo.stock.IdStock = dbo.stock_res.IdStock LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.stock.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion
GROUP BY dbo.propietarios.nombre_comercial, dbo.propietarios.IdPropietario, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion, dbo.stock.IdUbicacion_anterior, 
                         dbo.propietario_bodega.IdPropietarioBodega, dbo.producto_bodega.IdProductoBodega, dbo.unidad_medida.IdUnidadMedida, dbo.unidad_medida.Nombre, 
                         dbo.producto_presentacion.nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.serial, 
                         dbo.stock.añada, dbo.producto_bodega.IdBodega, dbo.stock.fecha_vence, dbo.stock.IdProductoEstado, dbo.producto_estado.nombre, 
                         dbo.producto_estado.utilizable, dbo.producto_estado.dañado, dbo.stock.IdUbicacion, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.stock.lic_plate, 
                         dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, 
                         dbo.producto_presentacion.factor, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho, dbo.bodega_ubicacion.largo, dbo.bodega_ubicacion.alto, 
                         dbo.indice_rotacion.Descripcion, dbo.producto.existencia_min, dbo.producto.existencia_max, dbo.producto.codigo_barra, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia, dbo.producto_presentacion.MaximoExistencia, dbo.stock.cantidad, 
                         dbo.stock.cantidad / dbo.producto_presentacion.factor, dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.indice_x, 
                         dbo.bodega_ubicacion.descripcion, dbo.bodega_tramo.descripcion, dbo.bodega_ubicacion.orientacion_pos, dbo.motivo_devolucion.Nombre, 
                         dbo.trans_oc_pol.NoPoliza
GO

alter table i_nav_ped_traslado_det add Process_Result nvarchar(500)

ALTER VIEW [dbo].[VW_Recepcion_Det]
AS
SELECT     dbo.trans_re_enc.IdRecepcionEnc AS Código, dbo.propietarios.nombre_comercial AS Propietario, dbo.proveedor.nombre AS Proveedor, 
                      dbo.bodega.nombre AS Bodega, dbo.trans_re_oc.IdOrdenCompraEnc AS NoOrdenCompra, dbo.trans_oc_enc.No_Documento AS No_DocumentoOC, 
                      dbo.trans_oc_enc.Referencia AS Pedido_Compra, dbo.trans_re_enc.fecha_recepcion AS Fecha, dbo.trans_re_enc.estado, dbo.trans_re_tr.TipoTrans, 
                      dbo.trans_re_tr.Descripcion, dbo.bodega_muelles.nombre AS Muelle, dbo.trans_re_enc.activo, dbo.usuario.nombres AS Usuario_Agrego, 
                      dbo.trans_re_enc.fec_agr AS Fecha_Agrego, dbo.producto.codigo AS CodigoProd, dbo.producto.codigo_barra AS BarraProd, dbo.producto.nombre AS NombreProd, 
                      dbo.trans_re_det.cantidad_recibida AS Recibido, dbo.unidad_medida.Nombre AS UM, dbo.producto_estado.nombre AS EstadoProd, 
                      dbo.producto_presentacion.nombre AS PresProd, dbo.trans_re_det.lote AS Lote, dbo.trans_re_det.fecha_vence AS Fecha_Vence, 
                      dbo.trans_re_det.lic_plate AS Lic_Plate
FROM         dbo.producto_bodega INNER JOIN
                      dbo.bodega_muelles INNER JOIN
                      dbo.bodega ON dbo.bodega_muelles.IdBodega = dbo.bodega.IdBodega INNER JOIN
                      dbo.proveedor_bodega ON dbo.bodega.IdBodega = dbo.proveedor_bodega.IdBodega INNER JOIN
                      dbo.trans_re_oc INNER JOIN
                      dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc ON 
                      dbo.proveedor_bodega.IdAsignacion = dbo.trans_oc_enc.IdProveedorBodega INNER JOIN
                      dbo.proveedor ON dbo.proveedor_bodega.IdProveedor = dbo.proveedor.IdProveedor ON dbo.producto_bodega.IdBodega = dbo.bodega.IdBodega INNER JOIN
                      dbo.trans_re_det ON dbo.producto_bodega.IdProductoBodega = dbo.trans_re_det.IdProductoBodega INNER JOIN
                      dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
                      dbo.unidad_medida ON dbo.trans_re_det.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida AND 
                      dbo.producto.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida INNER JOIN
                      dbo.producto_estado ON dbo.trans_re_det.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                      dbo.producto_presentacion ON dbo.trans_re_det.IdPresentacion = dbo.producto_presentacion.IdPresentacion AND 
                      dbo.producto.IdProducto = dbo.producto_presentacion.IdProducto RIGHT OUTER JOIN
                      dbo.usuario INNER JOIN
                      dbo.propietarios INNER JOIN
                      dbo.propietario_bodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario INNER JOIN
                      dbo.trans_re_tr INNER JOIN
                      dbo.trans_re_enc ON dbo.trans_re_tr.IdTipoTransaccion = dbo.trans_re_enc.IdTipoTransaccion ON 
                      dbo.propietario_bodega.IdPropietarioBodega = dbo.trans_re_enc.IdPropietarioBodega ON dbo.usuario.IdUsuario = dbo.trans_re_enc.user_agr ON 
                      dbo.producto_estado.IdPropietario = dbo.propietarios.IdPropietario AND dbo.producto_estado.IdPropietario = dbo.propietarios.IdPropietario AND 
                      dbo.unidad_medida.IdPropietario = dbo.propietarios.IdPropietario AND dbo.producto.IdPropietario = dbo.propietarios.IdPropietario AND 
                      dbo.trans_re_det.IdRecepcionEnc = dbo.trans_re_enc.IdRecepcionEnc AND dbo.proveedor.IdPropietario = dbo.propietarios.IdPropietario AND 
                      dbo.bodega_muelles.IdMuelle = dbo.trans_re_enc.IdMuelle AND dbo.trans_re_oc.IdRecepcionEnc = dbo.trans_re_enc.IdRecepcionEnc

GO


CREATE VIEW [dbo].[VW_rptMinimosMaximos_v2]
AS
SELECT        dbo.producto_bodega.IdBodega, dbo.propietarios.IdPropietario, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto.IdProducto, 
                         dbo.producto_bodega.IdProductoBodega, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion AS IdUbicacionActual, dbo.stock.IdUbicacion_anterior, 
                         dbo.unidad_medida.IdUnidadMedida, dbo.stock.IdProductoEstado, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, 
                         dbo.propietarios.nombre_comercial AS Propietario, bodega_ubicacion_1.descripcion AS UbicacionAnterior, dbo.unidad_medida.Nombre AS UnidadMedida, 
                         dbo.producto_presentacion.nombre AS Presentacion, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.serial, 
                         dbo.stock.añada, dbo.stock.cantidad AS CantidadSF, dbo.stock.fecha_vence, dbo.producto_estado.nombre AS NomEstado, 
                         dbo.producto_estado.utilizable AS EstadoUtilizable, dbo.producto_estado.dañado, dbo.stock.IdUbicacion, dbo.stock.lic_plate, dbo.stock.peso, 
                         dbo.producto.IdIndiceRotacion, ISNULL(dbo.producto_presentacion.MinimoExistencia, 0) AS MinimoExistencia, 
                         ISNULL(dbo.producto_presentacion.MaximoExistencia, 0) AS MaximoExistencia, dbo.producto.codigo_barra, dbo.indice_rotacion.Descripcion AS IndiceRotacion, 
                         dbo.producto_presentacion.Costo, dbo.stock.cantidad * dbo.producto_presentacion.Costo AS totalLinea, 
                         dbo.stock.cantidad / dbo.producto_presentacion.factor AS Cantidad, dbo.producto.existencia_min AS Existencia_min_umbas, 
                         dbo.producto.existencia_max AS Existencia_max_umbas
FROM            dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.propietario_bodega INNER JOIN
                         dbo.stock INNER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto ON dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega ON 
                         dbo.propietario_bodega.IdPropietarioBodega = dbo.stock.IdPropietarioBodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON 
                         dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida INNER JOIN
                         dbo.indice_rotacion ON dbo.producto.IdIndiceRotacion = dbo.indice_rotacion.IdIndiceRotacion LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.stock.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.bodega_ubicacion AS bodega_ubicacion_1 ON dbo.stock.IdUbicacion_anterior = bodega_ubicacion_1.IdUbicacion LEFT OUTER JOIN
                         dbo.bodega_ubicacion ON dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion
GROUP BY dbo.propietarios.nombre_comercial, dbo.propietarios.IdPropietario, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion, dbo.stock.IdUbicacion_anterior, 
                         bodega_ubicacion_1.descripcion, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto_bodega.IdProductoBodega, dbo.unidad_medida.IdUnidadMedida, 
                         dbo.unidad_medida.Nombre, dbo.producto_presentacion.nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, 
                         dbo.stock.fecha_ingreso, dbo.stock.serial, dbo.stock.añada, dbo.stock.cantidad, dbo.producto_bodega.IdBodega, dbo.stock.fecha_vence, 
                         dbo.stock.IdProductoEstado, dbo.producto_estado.nombre, dbo.producto_estado.utilizable, dbo.producto_estado.dañado, dbo.stock.IdUbicacion, 
                         dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.stock.lic_plate, dbo.stock.peso, dbo.producto.IdIndiceRotacion, 
                         dbo.producto_presentacion.MinimoExistencia, dbo.producto_presentacion.MaximoExistencia, dbo.producto.codigo_barra, dbo.indice_rotacion.Descripcion, 
                         dbo.producto_presentacion.Costo, dbo.stock.cantidad / dbo.producto_presentacion.factor, dbo.producto.existencia_min, dbo.producto.existencia_max
GO

CREATE NONCLUSTERED INDEX noncltrans_pe_det
INCLUDE ([IdPedidoDet],[IdPedidoEnc],[IdProductoBodega],[IdPresentacion],[IdUnidadMedidaBasica],[Cantidad])
ON [dbo].[trans_pe_det] ([IdEstado])


CREATE TABLE [dbo].[producto_kit_composicion](
[IdProductoKitComposicion] [int] NOT NULL,
[IdProductoPadre] [int] NOT NULL,
[IdProductoHijo] [int] NOT NULL,
[IdUnidadMedidaBasicaPadre] [int] NULL,
[IdUnidadMedidaBasicaHijo] [int] NULL,
[Cantidad] [float] NULL,
[fecha_agr] [datetime] NULL,
[user_agr] [nvarchar](50) NULL,
[fecha_mod] [datetime] NULL,
[user_mod] [nvarchar](50) NULL,
CONSTRAINT [PK_producto_kit_composicion] PRIMARY KEY CLUSTERED 
(
[IdProductoKitComposicion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

alter table producto_kit_composicion add IdBodega integer null

alter table estructura_tramo add idarea int 

alter table estructura_ubicacion add idsector int 
alter table estructura_ubicacion add idarea int 
alter table estructura_ubicacion add idbodega int 

alter table i_nav_transacciones_out add tipo_documento nvarchar(25)
alter table i_nav_transacciones_out add observacion nvarchar(50)
alter table i_nav_transacciones_out add empresa_transporte nvarchar(50)
alter table i_nav_transacciones_out add piloto_transporte nvarchar(50)
alter table i_nav_transacciones_out add contacto_recibe nvarchar(50)
alter table i_nav_transacciones_out add contacto_entrega nvarchar(50)
alter table i_nav_transacciones_out add marchamo_no nvarchar(50)

alter table trans_pe_enc add sync_mi3 bit default 1

ALTER VIEW [dbo].[VW_TransUbicHhDet]
AS
SELECT        dbo.trans_ubic_hh_det.IdTareaUbicacionEnc, dbo.trans_ubic_hh_det.IdTareaUbicacionDet, dbo.trans_ubic_hh_det.IdStock, dbo.producto.nombre, 
                         dbo.trans_ubic_hh_det.IdUbicacionDestino, bodega_ubicacion_1.descripcion, dbo.trans_ubic_hh_det.IdEstadoOrigen, dbo.trans_ubic_hh_det.IdEstadoDestino, 
                         dbo.trans_ubic_hh_det.IdOperador, dbo.trans_ubic_hh_det.HoraInicio, dbo.trans_ubic_hh_det.HoraFin, dbo.trans_ubic_hh_det.Realizado, 
                         dbo.trans_ubic_hh_det.cantidad, dbo.trans_ubic_hh_det.activo, dbo.operador.nombres, dbo.producto.codigo, dbo.producto.serializado, 
                         dbo.producto_estado.IdEstado, dbo.producto_estado.nombre AS NomEstado, dbo.trans_ubic_hh_stock.añada, dbo.trans_ubic_hh_stock.lote, CONVERT(char(10), 
                         dbo.trans_ubic_hh_stock.fecha_ingreso, 120) AS fecha_ingreso, dbo.producto_presentacion.nombre AS Presentacion, dbo.unidad_medida.Nombre AS UnidadMedida,
                          dbo.trans_ubic_hh_stock.fecha_vence, dbo.trans_ubic_hh_stock.serial, dbo.producto.IdPropietario, dbo.propietarios.nombre_comercial, 
                         dbo.trans_ubic_hh_det.recibido, dbo.producto.IdProducto, dbo.producto_bodega.IdProductoBodega, dbo.producto.IdUnidadMedidaBasica, 
                         dbo.trans_ubic_hh_det.estado, dbo.trans_ubic_hh_det.IdUbicacionOrigen, dbo.producto_presentacion.IdPresentacion, bodega_ubicacion_1.nivel, 
                         bodega_ubicacion_1.indice_x, dbo.bodega_tramo.descripcion AS Tramo, dbo.bodega_tramo.IdBodega
FROM            dbo.bodega_tramo INNER JOIN
                         dbo.bodega_ubicacion AS bodega_ubicacion_1 INNER JOIN
                         dbo.trans_ubic_hh_det ON bodega_ubicacion_1.IdUbicacion = dbo.trans_ubic_hh_det.IdUbicacionDestino ON 
                         dbo.bodega_tramo.IdTramo = bodega_ubicacion_1.IdTramo AND dbo.bodega_tramo.IdBodega = bodega_ubicacion_1.IdBodega LEFT OUTER JOIN
                         dbo.producto_estado INNER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.trans_ubic_hh_stock ON dbo.producto_bodega.IdProductoBodega = dbo.trans_ubic_hh_stock.IdProductoBodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto ON 
                         dbo.producto_estado.IdEstado = dbo.trans_ubic_hh_stock.IdProductoEstado INNER JOIN
                         dbo.unidad_medida ON dbo.trans_ubic_hh_stock.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida AND 
                         dbo.trans_ubic_hh_stock.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida INNER JOIN
                         dbo.propietarios ON dbo.producto.IdPropietario = dbo.propietarios.IdPropietario AND dbo.producto_estado.IdPropietario = dbo.propietarios.IdPropietario AND 
                         dbo.producto_estado.IdPropietario = dbo.propietarios.IdPropietario ON 
                         dbo.trans_ubic_hh_det.IdTareaUbicacionDet = dbo.trans_ubic_hh_stock.IdTareaUbicacionDet AND 
                         dbo.trans_ubic_hh_det.IdStock = dbo.trans_ubic_hh_stock.IdStock LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.trans_ubic_hh_stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion AND 
                         dbo.trans_ubic_hh_stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion LEFT OUTER JOIN
                         dbo.operador ON dbo.trans_ubic_hh_det.IdOperador = dbo.operador.IdOperador
GROUP BY dbo.trans_ubic_hh_det.IdTareaUbicacionEnc, dbo.trans_ubic_hh_det.IdTareaUbicacionDet, dbo.trans_ubic_hh_det.IdStock, dbo.producto.nombre, 
                         dbo.trans_ubic_hh_det.IdUbicacionDestino, bodega_ubicacion_1.descripcion, dbo.trans_ubic_hh_det.IdEstadoOrigen, dbo.trans_ubic_hh_det.IdEstadoDestino, 
                         dbo.trans_ubic_hh_det.IdOperador, dbo.trans_ubic_hh_det.HoraInicio, dbo.trans_ubic_hh_det.HoraFin, dbo.trans_ubic_hh_det.cantidad, dbo.operador.nombres, 
                         dbo.producto.codigo, dbo.producto_estado.IdEstado, dbo.producto_estado.nombre, dbo.trans_ubic_hh_stock.añada, dbo.trans_ubic_hh_stock.lote, 
                         CONVERT(char(10), dbo.trans_ubic_hh_stock.fecha_ingreso, 120), dbo.producto_presentacion.nombre, dbo.unidad_medida.Nombre, 
                         dbo.trans_ubic_hh_stock.fecha_vence, dbo.trans_ubic_hh_stock.serial, dbo.producto.IdPropietario, dbo.propietarios.nombre_comercial, 
                         dbo.trans_ubic_hh_det.recibido, dbo.producto.IdProducto, dbo.producto_bodega.IdProductoBodega, dbo.producto.IdUnidadMedidaBasica, 
                         dbo.trans_ubic_hh_det.estado, dbo.trans_ubic_hh_det.IdUbicacionOrigen, dbo.producto_presentacion.IdPresentacion, bodega_ubicacion_1.nivel, 
                         bodega_ubicacion_1.indice_x, dbo.bodega_tramo.descripcion, dbo.bodega_tramo.IdBodega, dbo.trans_ubic_hh_det.Realizado, dbo.trans_ubic_hh_det.activo, 
                         dbo.producto.serializado
GO

ALTER VIEW [dbo].[VW_Movimientos]
AS
SELECT        pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS [Estado Origen], pe2.nombre AS [Estado Destino], 
                         u.Nombre AS [Unidad de Medida], m.cantidad, m.peso, m.lote, u1.descripcion AS Origen, u2.descripcion AS Destino, stt.Nombre AS [Tipo Tarea], m.IdBodegaOrigen, 
                         m.fecha, p.IdProducto, p.codigo, p.codigo_barra, m.barra_pallet, m.fecha_vence, m.cantidad / pp.factor AS Cantidad_Presentacion
FROM            dbo.trans_movimientos AS m LEFT OUTER JOIN
                         dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
                         dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion AND m.IdBodegaOrigen = u1.IdBodega LEFT OUTER JOIN
                         dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion AND m.IdBodegaDestino = u2.IdBodega LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
                         dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
GROUP BY pr.nombre_comercial, p.nombre, pp.nombre, pe1.nombre, pe2.nombre, u.Nombre, m.cantidad, m.peso, m.lote, u1.descripcion, u2.descripcion, stt.Nombre, 
                         m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra, m.barra_pallet, m.fecha_vence, pp.IdPresentacion, pp.factor, m.cantidad / pp.factor
GO

ALTER VIEW [dbo].[VW_Movimientos_N]
AS
SELECT pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, pe2.nombre AS EstadoDestino, 
u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, stt.Nombre AS TipoTarea, m.IdBodegaOrigen, 
m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, m.fecha_vence, pr.IdTipoActualizacionCosto, m.IdPresentacion, 
m.IdUnidadMedida, m.IdEstadoOrigen, m.IdProductoBodega, prb.IdPropietarioBodega, prb.IdBodega, m.barra_pallet
FROM dbo.trans_movimientos AS m LEFT OUTER JOIN
dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion and m.IdBodegaOrigen=u1.IdBodega LEFT OUTER JOIN
dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion and m.IdBodegaDestino=u2.IdBodega LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
GO

ALTER VIEW [dbo].[VW_Movimientos_N1]
AS
SELECT m.idmovimiento, pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, 
pe2.nombre AS EstadoDestino, u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, 
stt.Nombre AS TipoTarea, m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, 
ISNULL(toce.No_Documento, N'') AS No_Doc_Ingreso, ISNULL(toce.Referencia, N'') AS No_Ref_Ingreso, '' AS No_Doc_Salida, '' AS No_Ref_Salida, m.fecha_vence, 
pr.IdTipoActualizacionCosto, m.IdPresentacion, m.IdUnidadMedida, m.IdEstadoOrigen, m.IdProductoBodega,m.barra_pallet
FROM dbo.trans_movimientos AS m LEFT OUTER JOIN
dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
dbo.trans_re_enc AS tre ON prb.IdPropietarioBodega = tre.IdPropietarioBodega AND m.IdRecepcion = tre.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_re_oc AS troc ON tre.IdRecepcionEnc = troc.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_oc_enc AS toce ON troc.IdOrdenCompraEnc = toce.IdOrdenCompraEnc LEFT OUTER JOIN
dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion and m.IdBodegaDestino=u2.IdBodega LEFT OUTER JOIN
dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion and m.IdBodegaOrigen=u1.IdBodega LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
WHERE M.IdTipoTarea IN (1, 2, 6, 13, 14, 15, 16)
UNION
SELECT m.idmovimiento, pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, 
pe2.nombre AS EstadoDestino, u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, 
stt.Nombre AS TipoTarea, m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, 
ISNULL(toce.No_Documento, N'') AS No_Doc_Ingreso, ISNULL(toce.Referencia, N'') AS No_Ref_Ingreso, ISNULL(CASE WHEN penc.IdPedidoEnc = '0' THEN '' END, 
N'') AS No_Doc_Salida, ISNULL(penc.Referencia, N'') AS No_Ref_Salida, m.fecha_vence, pr.IdTipoActualizacionCosto, m.IdPresentacion, m.IdUnidadMedida, 
m.IdEstadoOrigen, m.IdProductoBodega,m.barra_pallet
FROM dbo.trans_movimientos AS m LEFT OUTER JOIN
dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
(SELECT DISTINCT d .IdDespachoEnc, d .IDPEDIDOENC, d .IDPRODUCTOBODEGA, d .IdUnidadMedidaBasica, d .IdPresentacion
FROM trans_despacho_det d) Desp ON DESP.IdDespachoEnc = M.IdTransaccion AND m.IdProductoBodega = DESP.IdProductoBodega AND 
m.IdUnidadMedida = DESP.IdUnidadMedidaBasica AND ISNULL(m.IdPresentacion, 0) = DESP.IdPresentacion LEFT OUTER JOIN
trans_pe_enc penc ON penc.IdPedidoEnc = desp.IdPedidoEnc LEFT OUTER JOIN
dbo.trans_re_enc AS tre ON prb.IdPropietarioBodega = tre.IdPropietarioBodega AND m.IdRecepcion = tre.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_re_oc AS troc ON tre.IdRecepcionEnc = troc.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_oc_enc AS toce ON troc.IdOrdenCompraEnc = toce.IdOrdenCompraEnc LEFT OUTER JOIN
dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion and m.IdBodegaDestino=u2.IdBodega LEFT OUTER JOIN
dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion and m.IdBodegaOrigen=u1.IdBodega LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
WHERE M.IdTipoTarea = 5
UNION
SELECT m.idmovimiento, pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, 
pe2.nombre AS EstadoDestino, u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, 
stt.Nombre AS TipoTarea, m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, 
ISNULL(toce.No_Documento, N'') AS No_Doc_Ingreso, ISNULL(toce.Referencia, N'') AS No_Ref_Ingreso, CONVERT(NVARCHAR(50), ISNULL(aje.idajusteenc, N'')) 
AS No_Doc_Salida, CONVERT(NVARCHAR(50), ISNULL(aje.idajusteenc, N'')) AS No_Ref_Salida, m.fecha_vence, pr.IdTipoActualizacionCosto, m.IdPresentacion, 
m.IdUnidadMedida, m.IdEstadoOrigen, m.IdProductoBodega,m.barra_pallet
FROM dbo.trans_movimientos AS m LEFT OUTER JOIN
dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
dbo.trans_re_enc AS tre ON prb.IdPropietarioBodega = tre.IdPropietarioBodega AND m.IdRecepcion = tre.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_re_oc AS troc ON tre.IdRecepcionEnc = troc.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_oc_enc AS toce ON troc.IdOrdenCompraEnc = toce.IdOrdenCompraEnc LEFT OUTER JOIN
dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion and m.IdBodegaDestino=u2.IdBodega LEFT OUTER JOIN
dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion and m.IdBodegaOrigen=u1.IdBodega LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea LEFT OUTER JOIN
dbo.trans_ajuste_enc aje ON aje.idajusteenc = m.IdTransaccion
WHERE M.IdTipoTarea = 17
GO


//Alter para procesos con producto Kit. 
alter table trans_pe_det add EsPadre bit
alter table trans_pe_det add IdPedidoDetPadre integer

ALTER VIEW [dbo].[VW_Stock_Res]
AS
SELECT        dbo.producto_bodega.IdBodega, dbo.propietarios.IdPropietario, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto.IdProducto, 
                         dbo.producto_bodega.IdProductoBodega, dbo.stock.IdStock, dbo.stock.IdUbicacion_anterior, dbo.unidad_medida.IdUnidadMedida, dbo.stock.IdProductoEstado, 
                         dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.propietarios.nombre_comercial AS Propietario, dbo.producto.codigo, dbo.producto.nombre, 
                         dbo.unidad_medida.Nombre AS UnidadMedida, dbo.producto_presentacion.nombre AS Presentacion, dbo.stock.lote, dbo.stock.fecha_ingreso, 
                         dbo.stock.fecha_vence, dbo.stock.cantidad AS CantidadSF, dbo.stock.peso, dbo.stock.cantidad / dbo.producto_presentacion.factor AS Cantidad, 
                         dbo.producto_estado.nombre AS NomEstado, dbo.producto_estado.dañado, dbo.producto_presentacion.factor, dbo.producto_estado.utilizable AS EstadoUtilizable, 
                         dbo.stock.IdUbicacion, dbo.stock.lic_plate, dbo.stock.serial, dbo.stock.añada, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, 
                         dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, SUM(dbo.stock_res.cantidad) AS CantidadReservada, dbo.bodega_ubicacion.IdTramo, 
                         dbo.bodega_ubicacion.ancho AS ancho_ubicacion, dbo.bodega_ubicacion.largo AS largo_ubicacion, dbo.bodega_ubicacion.alto AS alto_ubicacion, 
                         dbo.indice_rotacion.Descripcion AS IndiceRotacion, dbo.producto.existencia_min AS existencia_min_umbas, 
                         dbo.producto.existencia_max AS existencia_max_umbas, dbo.producto.codigo_barra, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia AS existencia_min_pres, dbo.producto_presentacion.MaximoExistencia AS existencia_max_pres, 
                         dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.IdUbicacion AS IdUbicacionActual, dbo.bodega_ubicacion.nivel AS Ubicacion_Nivel, 
                         dbo.bodega_ubicacion.indice_x AS Ubicacion_Indice_X, dbo.bodega_ubicacion.descripcion AS Ubicacion_Nombre, 
                         dbo.bodega_tramo.descripcion AS Ubicacion_Tramo, CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, 
                         iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
                         bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
                         bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
                         + ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
                         ELSE bodega_tramo.descripcion END AS Nombre_Completo
FROM            dbo.stock_res RIGHT OUTER JOIN
                         dbo.indice_rotacion RIGHT OUTER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
                         dbo.bodega ON dbo.producto_bodega.IdBodega = dbo.bodega.IdBodega INNER JOIN
                         dbo.bodega_tramo INNER JOIN
                         dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo AND dbo.bodega_tramo.IdBodega = dbo.bodega_ubicacion.IdBodega AND 
                         dbo.bodega_tramo.IdSector = dbo.bodega_ubicacion.IdSector ON dbo.bodega.IdBodega = dbo.bodega_ubicacion.IdBodega RIGHT OUTER JOIN
                         dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.stock INNER JOIN
                         dbo.propietario_bodega ON dbo.stock.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega ON 
                         dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida ON 
                         dbo.bodega.IdBodega = dbo.propietario_bodega.IdBodega AND dbo.producto_bodega.IdProductoBodega = dbo.stock.IdProductoBodega AND 
                         dbo.bodega_ubicacion.IdUbicacion = dbo.stock.IdUbicacion ON dbo.indice_rotacion.IdIndiceRotacion = dbo.producto.IdIndiceRotacion ON 
                         dbo.stock_res.IdStock = dbo.stock.IdStock AND dbo.stock_res.IdPropietarioBodega = dbo.stock.IdPropietarioBodega AND 
                         dbo.stock_res.IdProductoBodega = dbo.stock.IdProductoBodega AND dbo.stock_res.IdUbicacion = dbo.stock.IdUbicacion LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.stock.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion
GROUP BY dbo.propietarios.nombre_comercial, dbo.propietarios.IdPropietario, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion, dbo.stock.IdUbicacion_anterior, 
                         dbo.propietario_bodega.IdPropietarioBodega, dbo.producto_bodega.IdProductoBodega, dbo.unidad_medida.IdUnidadMedida, dbo.unidad_medida.Nombre, 
                         dbo.producto_presentacion.nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.serial, 
                         dbo.stock.añada, dbo.producto_bodega.IdBodega, dbo.stock.fecha_vence, dbo.stock.IdProductoEstado, dbo.producto_estado.nombre, 
                         dbo.producto_estado.utilizable, dbo.producto_estado.dañado, dbo.stock.IdUbicacion, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.stock.lic_plate, 
                         dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, 
                         dbo.producto_presentacion.factor, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho, dbo.bodega_ubicacion.largo, dbo.bodega_ubicacion.alto, 
                         dbo.indice_rotacion.Descripcion, dbo.producto.existencia_min, dbo.producto.existencia_max, dbo.producto.codigo_barra, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia, dbo.producto_presentacion.MaximoExistencia, dbo.stock.cantidad, 
                         dbo.stock.cantidad / dbo.producto_presentacion.factor, dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.indice_x, 
                         dbo.bodega_ubicacion.descripcion, dbo.bodega_tramo.descripcion, dbo.bodega_tramo.descripcion, dbo.bodega_ubicacion.orientacion_pos, 
                         dbo.bodega_tramo.es_rack, dbo.bodega_tramo.descripcion, dbo.bodega_tramo.IdBodega
GO

alter table producto_estado_ubic add IdBodega integer 

ALTER VIEW [dbo].[VW_ProductoEstadoUbicacion]
AS
SELECT     dbo.producto_estado_ubic.fec_agr, dbo.producto_estado_ubic.user_agr, dbo.producto_estado_ubic.fec_mod, dbo.producto_estado_ubic.user_mod, dbo.producto_estado_ubic.activo, dbo.producto_estado.nombre AS Estado, 
                  'T[' + dbo.bodega_tramo.descripcion + '] - C[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.indice_x), ''), 2) + '] - N[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.nivel), ''), 2) 
                  + ']' + ' - P[' + dbo.bodega_ubicacion.orientacion_pos + ']' + ' - #[' + CONVERT(NVARCHAR(25), dbo.bodega_ubicacion.IdUbicacion) + ']' AS Ubicacion, dbo.producto_estado_ubic.IdEstado, dbo.producto_estado_ubic.IdProductoEstadUbic, 
                  dbo.producto_estado_ubic.IdUbicacionDefecto, dbo.bodega.IdBodega, dbo.bodega.nombre AS Bodega
FROM        dbo.producto_estado RIGHT OUTER JOIN
                  dbo.bodega_tramo INNER JOIN
                  dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo INNER JOIN
                  dbo.bodega ON dbo.bodega_tramo.IdBodega = dbo.bodega.IdBodega RIGHT OUTER JOIN
                  dbo.producto_estado_ubic ON dbo.bodega.IdBodega = dbo.producto_estado_ubic.IdBodega AND dbo.bodega_ubicacion.IdUbicacion = dbo.producto_estado_ubic.IdUbicacionDefecto ON dbo.producto_estado.IdEstado = dbo.producto_estado_ubic.IdEstado

GO

ALTER VIEW [dbo].[VW_ProductoEstadoUbic]
AS
SELECT     u.IdUbicacion, p.IdEstado, dbo.bodega.IdBodega, CASE WHEN t .es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(t .descripcion, 2, iif(CHARINDEX('-', t .descripcion, 0) < 0, 1, CHARINDEX('-', t .descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
                  u.indice_x), 2) + ' - ' + 'T' + SUBSTRING(t .descripcion, iif(CHARINDEX('-', t .descripcion, 0) < 0, 0, CHARINDEX('-', t .descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), u.nivel), 2) 
                  + ' - ' + 'Pos' + u.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), u.IdUbicacion) ELSE t .descripcion END AS NombreUbic
FROM        dbo.producto_estado_ubic AS p INNER JOIN
                  dbo.bodega_ubicacion AS u ON p.IdUbicacionDefecto = u.IdUbicacion INNER JOIN
                  dbo.bodega_tramo AS t ON t.IdTramo = u.IdTramo INNER JOIN
                  dbo.bodega ON p.IdBodega = dbo.bodega.IdBodega AND t.IdBodega = dbo.bodega.IdBodega

GO

ALTER VIEW [dbo].[VW_Producto_Estado_Ubic_Bodega]
AS
SELECT        dbo.producto_estado.IdEstado, dbo.producto_estado.IdPropietario, dbo.producto_estado.nombre, dbo.producto_estado.IdUbicacionDefecto, dbo.producto_estado.utilizable, dbo.producto_estado.activo, 
                         dbo.producto_estado.user_agr, dbo.producto_estado.fec_agr, dbo.producto_estado.user_mod, dbo.producto_estado.fec_mod, dbo.producto_estado.dañado, dbo.producto_estado.codigo_bodega_erp, 
                         dbo.producto_estado.sistema, dbo.producto_estado_ubic.IdUbicacionDefecto AS IdUbicacionBodegaDefecto, dbo.bodega.IdBodega,
						 CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, 
						iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
						bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
						bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
						+ ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
						ELSE bodega_tramo.descripcion END AS NombreUbic
FROM            dbo.bodega_ubicacion INNER JOIN
                         dbo.producto_estado_ubic ON dbo.bodega_ubicacion.IdUbicacion = dbo.producto_estado_ubic.IdUbicacionDefecto INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo INNER JOIN
                         dbo.bodega_sector ON dbo.bodega_tramo.IdSector = dbo.bodega_sector.IdSector AND dbo.bodega_tramo.IdBodega = dbo.bodega_sector.IdBodega INNER JOIN
                         dbo.bodega_area ON dbo.bodega_sector.IdArea = dbo.bodega_area.IdArea AND dbo.bodega_sector.IdBodega = dbo.bodega_area.IdBodega INNER JOIN
                         dbo.bodega ON dbo.bodega_area.IdBodega = dbo.bodega.IdBodega RIGHT OUTER JOIN
                         dbo.producto_estado ON dbo.producto_estado_ubic.IdEstado = dbo.producto_estado.IdEstado
GO

CREATE NONCLUSTERED INDEX NCL_PRODUCTO_20191104
ON [dbo].[producto] ([IdPropietario])
INCLUDE ([IdProducto],[codigo],[nombre])

CREATE NONCLUSTERED INDEX NCL_PRODUCTO_BODEGA_20191104_EJC
ON [dbo].[producto_bodega] ([IdProducto])
INCLUDE ([IdProductoBodega])

CREATE NONCLUSTERED INDEX NCL_BODEGA_UBICACION_20191104_EJC
ON [dbo].[bodega_ubicacion] ([IdBodega])
INCLUDE ([IdUbicacion],[descripcion])	


ALTER VIEW [dbo].[VW_Stock_Res_Pedido]
AS
SELECT        p.codigo, p.nombre, pp.nombre AS presentacion, pe.nombre AS NomEstado, um.Nombre AS unidadmedida, pr.nombre_comercial AS propietario, 
                         bu.descripcion AS bodegaubicacion, s.cantidad AS cantidadfisica, pp.factor, res.IdStockRes, res.IdTransaccion, res.Indicador, res.IdPedidoDet, res.IdStock, 
                         res.IdPropietarioBodega, res.IdProductoBodega, res.IdUbicacion, res.estado, res.IdPresentacion, res.IdUnidadMedida, res.lote, res.lic_plate, res.serial, res.cantidad,
                          res.peso, res.fecha_ingreso, res.fecha_vence, res.uds_lic_plate, res.ubicacion_ant, res.no_bulto, res.IdRecepcion, res.IdPicking, res.IdPedido, res.IdDespacho, 
                         res.user_agr, res.fec_agr, res.user_mod, res.fec_mod, res.host, res.añada, res.fecha_manufactura, dbo.trans_pe_enc.referencia, 
                         dbo.propietario_bodega.IdBodega
FROM            dbo.stock_res AS res INNER JOIN
                         dbo.producto_bodega AS pb ON pb.IdProductoBodega = res.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON pb.IdProducto = p.IdProducto INNER JOIN
                         dbo.bodega_ubicacion AS bu ON res.IdUbicacion = bu.IdUbicacion INNER JOIN
                         dbo.producto_estado AS pe ON res.IdProductoEstado = pe.IdEstado INNER JOIN
                         dbo.unidad_medida AS um ON res.IdUnidadMedida = um.IdUnidadMedida INNER JOIN
                         dbo.stock AS s ON res.IdStock = s.IdStock INNER JOIN
                         dbo.propietario_bodega ON s.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega AND 
                         s.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega INNER JOIN
                         dbo.propietarios AS pr ON dbo.propietario_bodega.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.trans_pe_enc ON dbo.propietario_bodega.IdPropietarioBodega = dbo.trans_pe_enc.IdPropietarioBodega AND 
                         res.IdPedido = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON res.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto
GO

ALTER VIEW [dbo].[VW_Stock_Resumen]
AS
SELECT        dbo.producto_bodega.IdBodega, dbo.propietarios.IdPropietario, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto.IdProducto, 
                         dbo.producto_bodega.IdProductoBodega, dbo.stock.IdStock, dbo.stock.IdUbicacion_anterior, dbo.unidad_medida.IdUnidadMedida, dbo.stock.IdProductoEstado, 
                         dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.propietarios.nombre_comercial AS Propietario, dbo.producto.codigo, dbo.producto.codigo_barra AS Barra, 
                         dbo.producto.nombre, dbo.unidad_medida.Nombre AS UnidadMedida, dbo.producto_presentacion.nombre AS Presentacion, dbo.stock.lote, 
                         dbo.stock.fecha_ingreso AS Ingreso, dbo.stock.fecha_vence AS Vence, dbo.stock.cantidad AS Cantidad_UMBas, SUM(ISNULL(dbo.stock_res.cantidad, 0)) 
                         AS CantidadReservadaUmBas, dbo.stock.cantidad - ISNULL(SUM(dbo.stock_res.cantidad), 0) AS Disponible_UMBas, dbo.stock.peso, 
                         ISNULL(dbo.stock.cantidad / dbo.producto_presentacion.factor, 0) AS Cantidad_Presentacion, dbo.producto_estado.nombre AS NomEstado, 
                         'T[' + dbo.bodega_tramo.descripcion + '] - C[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.indice_x), ''), 2) 
                         + '] - N[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.nivel), ''), 2) 
                         + ']' + ' - P[' + dbo.bodega_ubicacion.orientacion_pos + ']' + ' - #[' + CONVERT(NVARCHAR(25), dbo.bodega_ubicacion.IdUbicacion) + ']' AS UbicacionCompleta, 
                         dbo.producto_estado.dañado, dbo.producto_presentacion.factor, dbo.producto_estado.utilizable AS EstadoUtilizable, dbo.stock.IdUbicacion, dbo.stock.lic_plate, 
                         dbo.stock.serial, dbo.stock.añada, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, 
                         dbo.producto_presentacion.ancho, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho AS Ancho_ubicacion, 
                         dbo.bodega_ubicacion.largo AS Largo_ubicacion, dbo.bodega_ubicacion.alto AS Alto_ubicacion, dbo.indice_rotacion.Descripcion AS IndiceRotacion, 
                         dbo.producto.existencia_min AS Existencia_min_umbas, dbo.producto.existencia_max AS Existencia_max_umbas, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia AS Existencia_min_pres, dbo.producto_presentacion.MaximoExistencia AS Existencia_max_pres, 
                         dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.IdUbicacion AS IdUbicacionActual, dbo.bodega_ubicacion.nivel AS Ubicacion_Nivel, 
                         dbo.bodega_ubicacion.indice_x AS Ubicacion_Indice_X, dbo.bodega_ubicacion.descripcion AS Ubicacion_Nombre, 
                         dbo.bodega_tramo.descripcion AS Ubicacion_Tramo
FROM            dbo.stock_res RIGHT OUTER JOIN
                         dbo.indice_rotacion RIGHT OUTER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
                         dbo.bodega ON dbo.producto_bodega.IdBodega = dbo.bodega.IdBodega INNER JOIN
                         dbo.bodega_tramo INNER JOIN
                         dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo ON dbo.bodega.IdBodega = dbo.bodega_ubicacion.IdBodega AND 
                         dbo.bodega.IdBodega = dbo.bodega_tramo.IdBodega RIGHT OUTER JOIN
                         dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.stock INNER JOIN
                         dbo.propietario_bodega ON dbo.stock.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega ON 
                         dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida ON 
                         dbo.bodega.IdBodega = dbo.propietario_bodega.IdBodega AND dbo.producto_bodega.IdProductoBodega = dbo.stock.IdProductoBodega AND 
                         dbo.bodega_ubicacion.IdUbicacion = dbo.stock.IdUbicacion ON dbo.indice_rotacion.IdIndiceRotacion = dbo.producto.IdIndiceRotacion ON 
                         dbo.stock_res.IdStock = dbo.stock.IdStock LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.stock.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion
GROUP BY dbo.propietarios.nombre_comercial, dbo.propietarios.IdPropietario, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion, dbo.stock.IdUbicacion_anterior, 
                         dbo.propietario_bodega.IdPropietarioBodega, dbo.producto_bodega.IdProductoBodega, dbo.unidad_medida.IdUnidadMedida, dbo.unidad_medida.Nombre, 
                         dbo.producto_presentacion.nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.serial, 
                         dbo.stock.añada, dbo.producto_bodega.IdBodega, dbo.stock.fecha_vence, dbo.stock.IdProductoEstado, dbo.producto_estado.nombre, 
                         dbo.producto_estado.utilizable, dbo.producto_estado.dañado, dbo.stock.IdUbicacion, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.stock.lic_plate, 
                         dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, 
                         dbo.producto_presentacion.factor, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho, dbo.bodega_ubicacion.largo, dbo.bodega_ubicacion.alto, 
                         dbo.indice_rotacion.Descripcion, dbo.producto.existencia_min, dbo.producto.existencia_max, dbo.producto.codigo_barra, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia, dbo.producto_presentacion.MaximoExistencia, dbo.stock.cantidad, 
                         dbo.stock.cantidad / dbo.producto_presentacion.factor, dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.indice_x, 
                         dbo.bodega_ubicacion.descripcion, dbo.bodega_tramo.descripcion, dbo.bodega_ubicacion.orientacion_pos
GO

alter table trans_picking_enc add verifica_auto bit 

CREATE VIEW [dbo].[VW_ProximosVencimiento]
AS
SELECT        dbo.propietarios.nombre_comercial AS Propietario, dbo.producto.codigo, dbo.producto.codigo_barra AS Barra, dbo.producto.nombre, 
                         dbo.unidad_medida.Nombre AS UnidadMedida, dbo.producto_presentacion.nombre AS Presentacion, dbo.stock.lote, dbo.stock.fecha_ingreso, 
                         dbo.stock.fecha_vence, DATEADD(day, 0, GETDATE()) AS FechaProyectada, dbo.producto.tolerancia AS [CalculoVencimiento(Días)], 
                         DATEDIFF(day, DATEADD(day, ISNULL(dbo.producto.tolerancia, 0), GETDATE()), dbo.stock.fecha_vence) AS DiasCalculados, dbo.stock.cantidad AS CantidadSF, 
                         dbo.producto_estado.nombre AS NomEstado, dbo.stock.IdUbicacion, ROUND(dbo.stock.cantidad / dbo.producto_presentacion.factor, 2) AS Cantidad, 
                         dbo.producto.IdProducto, dbo.propietario_bodega.IdPropietarioBodega, dbo.propietario_bodega.IdBodega, 
                         CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, 
                         CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.indice_x), 2) 
                         + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', bodega_tramo.descripcion, 0) + 1), 1) 
                         + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
                         + ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
                         ELSE bodega_tramo.descripcion END AS UbicacionCompleta
FROM            dbo.producto_estado INNER JOIN
                         dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.propietario_bodega INNER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.stock ON dbo.producto_bodega.IdProductoBodega = dbo.stock.IdProductoBodega ON 
                         dbo.propietario_bodega.IdPropietarioBodega = dbo.stock.IdPropietarioBodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON 
                         dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida ON dbo.producto_estado.IdEstado = dbo.stock.IdProductoEstado INNER JOIN
                         dbo.bodega_ubicacion ON dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion LEFT OUTER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto
WHERE        (dbo.producto.control_vencimiento = 1)
GROUP BY dbo.propietarios.nombre_comercial, dbo.stock.IdStock, dbo.propietario_bodega.IdPropietarioBodega, dbo.unidad_medida.IdUnidadMedida, 
                         dbo.unidad_medida.Nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.cantidad, 
                         dbo.stock.fecha_vence, dbo.stock.IdProductoEstado, dbo.stock.IdPresentacion, dbo.producto.existencia_min, dbo.producto.existencia_max, 
                         dbo.producto.codigo_barra, dbo.producto.tolerancia, dbo.producto.control_vencimiento, dbo.producto_presentacion.nombre, dbo.producto_estado.IdEstado, 
                         dbo.producto_estado.nombre, dbo.stock.serial, dbo.stock.IdUbicacion, dbo.stock.cantidad / dbo.producto_presentacion.factor, dbo.propietario_bodega.IdBodega, 
                         dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.descripcion, dbo.bodega_tramo.descripcion, 
                         dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, bodega_tramo.es_rack, bodega_tramo.descripcion

GO

CREATE VIEW [dbo].[VW_Stock_Especifico]
AS
SELECT        dbo.producto_bodega.IdBodega, dbo.propietarios.IdPropietario, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto.IdProducto, 
                         dbo.producto_bodega.IdProductoBodega, dbo.stock.IdStock, dbo.stock.IdUbicacion_anterior, dbo.unidad_medida.IdUnidadMedida, dbo.stock.IdProductoEstado, 
                         dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.propietarios.nombre_comercial AS Propietario, dbo.producto.codigo, dbo.producto.codigo_barra AS Barra, 
                         dbo.producto.nombre, dbo.unidad_medida.Nombre AS UnidadMedida, dbo.producto_presentacion.nombre AS Presentacion, dbo.stock.lote, 
                         dbo.stock.fecha_ingreso AS Ingreso, dbo.stock.fecha_vence AS Vence, dbo.stock.cantidad AS Cantidad_UMBas, SUM(ISNULL(dbo.stock_res.cantidad, 0)) 
                         AS CantidadReservadaUmBas, dbo.stock.cantidad - ISNULL(SUM(dbo.stock_res.cantidad), 0) AS Disponible_UMBas, dbo.stock.peso, 
                         ISNULL(dbo.stock.cantidad / dbo.producto_presentacion.factor, 0) AS Cantidad_Presentacion, dbo.producto_estado.nombre AS NomEstado, 
                         'T[' + dbo.bodega_tramo.descripcion + '] - C[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.indice_x), ''), 2) 
                         + '] - N[' + RIGHT('00' + ISNULL(CONVERT(NVARCHAR(10), dbo.bodega_ubicacion.nivel), ''), 2) 
                         + ']' + ' - P[' + dbo.bodega_ubicacion.orientacion_pos + ']' + ' - #[' + CONVERT(NVARCHAR(25), dbo.bodega_ubicacion.IdUbicacion) + ']' AS UbicacionCompleta, 
                         dbo.producto_estado.dañado, dbo.producto_presentacion.factor, dbo.producto_estado.utilizable AS EstadoUtilizable, dbo.stock.IdUbicacion, dbo.stock.lic_plate, 
                         dbo.stock.serial, dbo.stock.añada, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, 
                         dbo.producto_presentacion.ancho, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho AS Ancho_ubicacion, 
                         dbo.bodega_ubicacion.largo AS Largo_ubicacion, dbo.bodega_ubicacion.alto AS Alto_ubicacion, dbo.indice_rotacion.Descripcion AS IndiceRotacion, 
                         dbo.producto.existencia_min AS Existencia_min_umbas, dbo.producto.existencia_max AS Existencia_max_umbas, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia AS Existencia_min_pres, dbo.producto_presentacion.MaximoExistencia AS Existencia_max_pres, 
                         dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.IdUbicacion AS IdUbicacionActual, dbo.bodega_ubicacion.nivel AS Ubicacion_Nivel, 
                         dbo.bodega_ubicacion.indice_x AS Ubicacion_Indice_X, dbo.bodega_ubicacion.descripcion AS Ubicacion_Nombre, 
                         dbo.bodega_tramo.descripcion AS Ubicacion_Tramo, ISNULL(dbo.motivo_devolucion.Nombre, 'N/A') AS MotivoDevolucion, ISNULL(dbo.trans_oc_pol.NoPoliza, 'N/D') 
                         AS NoPoliza, dbo.producto_clasificacion.IdClasificacion, dbo.producto_familia.IdFamilia, dbo.cliente_tiempos.Dias_Local, dbo.cliente_tiempos.Dias_Exterior, 
                         dbo.cliente_tiempos.IdCliente, CASE WHEN DATEDIFF(DAY, GETDATE(), dbo.stock.fecha_vence) >= dbo.cliente_tiempos.Dias_Local OR
                         DATEDIFF(DAY, GETDATE(), dbo.stock.fecha_vence) >= dbo.cliente_tiempos.Dias_Exterior THEN 'Si' ELSE 'No' END AS Aplica
FROM            dbo.trans_oc_pol RIGHT OUTER JOIN
                         dbo.trans_re_oc INNER JOIN
                         dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc LEFT OUTER JOIN
                         dbo.motivo_devolucion ON dbo.trans_oc_enc.IdMotivoDevolucion = dbo.motivo_devolucion.IdMotivoDevolucion ON 
                         dbo.trans_oc_pol.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc RIGHT OUTER JOIN
                         dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.stock INNER JOIN
                         dbo.propietario_bodega ON dbo.stock.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega ON 
                         dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida LEFT OUTER JOIN
                         dbo.producto_familia INNER JOIN
                         dbo.cliente_tiempos INNER JOIN
                         dbo.producto_clasificacion ON dbo.cliente_tiempos.IdClasificacion = dbo.producto_clasificacion.IdClasificacion ON 
                         dbo.producto_familia.IdFamilia = dbo.cliente_tiempos.IdFamilia RIGHT OUTER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto ON dbo.producto_familia.IdFamilia = dbo.producto.IdFamilia AND 
                         dbo.producto_clasificacion.IdClasificacion = dbo.producto.IdClasificacion ON dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega ON 
                         dbo.trans_re_oc.IdRecepcionEnc = dbo.stock.IdRecepcionEnc LEFT OUTER JOIN
                         dbo.bodega_tramo INNER JOIN
                         dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo ON 
                         dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion LEFT OUTER JOIN
                         dbo.indice_rotacion ON dbo.producto.IdIndiceRotacion = dbo.indice_rotacion.IdIndiceRotacion LEFT OUTER JOIN
                         dbo.stock_res ON dbo.stock.IdStock = dbo.stock_res.IdStock LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.stock.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion
WHERE        (dbo.stock.IdUbicacion NOT IN
                             (SELECT        IdUbicacion
                               FROM            dbo.bodega_ubicacion AS bodega_ubicacion_1
                               WHERE        (ubicacion_despacho = 1)))
GROUP BY dbo.propietarios.nombre_comercial, dbo.propietarios.IdPropietario, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion, dbo.stock.IdUbicacion_anterior, 
                         dbo.propietario_bodega.IdPropietarioBodega, dbo.producto_bodega.IdProductoBodega, dbo.unidad_medida.IdUnidadMedida, dbo.unidad_medida.Nombre, 
                         dbo.producto_presentacion.nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.serial, 
                         dbo.stock.añada, dbo.producto_bodega.IdBodega, dbo.stock.fecha_vence, dbo.stock.IdProductoEstado, dbo.producto_estado.nombre, 
                         dbo.producto_estado.utilizable, dbo.producto_estado.dañado, dbo.stock.IdUbicacion, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.stock.lic_plate, 
                         dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, 
                         dbo.producto_presentacion.factor, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho, dbo.bodega_ubicacion.largo, dbo.bodega_ubicacion.alto, 
                         dbo.indice_rotacion.Descripcion, dbo.producto.existencia_min, dbo.producto.existencia_max, dbo.producto.codigo_barra, dbo.producto.costo, 
                         dbo.producto_presentacion.MinimoExistencia, dbo.producto_presentacion.MaximoExistencia, dbo.stock.cantidad, 
                         dbo.stock.cantidad / dbo.producto_presentacion.factor, dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.indice_x, 
                         dbo.bodega_ubicacion.descripcion, dbo.bodega_tramo.descripcion, dbo.bodega_ubicacion.orientacion_pos, dbo.motivo_devolucion.Nombre, 
                         dbo.trans_oc_pol.NoPoliza, dbo.producto_clasificacion.IdClasificacion, dbo.producto_familia.IdFamilia, dbo.cliente_tiempos.Dias_Local, 
                         dbo.cliente_tiempos.Dias_Exterior, dbo.cliente_tiempos.IdCliente
GO

ALTER VIEW [dbo].[VW_UbicacionPicking]
AS
SELECT        c.IdCliente, c.nombre_comercial AS NombreCliente, penc.IdPedidoEnc, d.IdPickingEnc, penc.Fecha_Pedido AS FechaPedido, enc.fecha_picking AS FechaPicking, 
                         p.codigo AS CodigoProducto, p.nombre AS NombreProducto, u.fecha_vence AS Vence, pe.nombre AS Estado, b.descripcion AS Ubicacion, pp.nombre AS Presentación,
                          ISNULL(pd.nombres, '') + ' ' + ISNULL(pd.apellidos, '') AS Operador, u.lote, u.cantidad_solicitada AS Solicitado, u.cantidad_recibida AS Picking, 
                         u.cantidad_verificada AS Verificado
FROM            dbo.trans_picking_op INNER JOIN
                         dbo.trans_picking_ubic AS u INNER JOIN
                         dbo.trans_picking_det AS d ON u.IdPickingDet = d.IdPickingDet INNER JOIN
                         dbo.bodega_ubicacion AS b ON u.IdUbicacion = b.IdUbicacion INNER JOIN
                         dbo.trans_picking_enc AS enc ON d.IdPickingEnc = enc.IdPickingEnc AND b.IdBodega = enc.IdBodega INNER JOIN
                         dbo.propietario_bodega AS prb ON enc.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario INNER JOIN
                         dbo.trans_pe_det AS pdet ON d.IdPedidoDet = pdet.IdPedidoDet INNER JOIN
                         dbo.trans_pe_enc AS penc ON pdet.IdPedidoEnc = penc.IdPedidoEnc INNER JOIN
                         dbo.cliente AS c ON penc.IdCliente = c.IdCliente INNER JOIN
                         dbo.producto_bodega AS pb ON pdet.IdProductoBodega = pb.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON pdet.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
                         dbo.producto_estado AS pe ON pdet.IdEstado = pe.IdEstado ON dbo.trans_picking_op.IdPickingEnc = enc.IdPickingEnc INNER JOIN
                         dbo.operador AS pd INNER JOIN
                         dbo.operador_bodega AS op ON pd.IdOperador = op.IdOperador ON dbo.trans_picking_op.IdOperadorBodega = op.IdOperadorBodega
WHERE        (u.dañado_picking = 0) AND (u.dañado_verificacion = 0)
GO

CREATE NONCLUSTERED INDEX NCLI_PRODUCTO_BODEGA_20191118_EJC
ON [dbo].[producto_bodega] ([IdBodega])
INCLUDE ([IdProducto])

alter table impresion_productos_barras add IdImpresora int 

CREATE TABLE [dbo].[TempComparacionInventario](
	[IdInventario] [int] NULL,
	[IdProductoBodega] [int] NULL,
	[IdProducto] [int] NULL,
	[IdUnidadMedida] [int] NULL,
	[Codigo] [nvarchar](150) NULL,
	[Producto] [nvarchar](250) NULL,
	[Cantidad_Stock] [float] NULL,
	[Cantidad] [float] NULL,
	[Peso_Stock] [float] NULL,
	[Peso] [float] NULL,
	[Entradas_Salidas] [float] NULL,
	[Entradas] [float] NULL,
	[Salidas] [float] NULL,
	[Lote] [nvarchar](50) NULL,
	[FechaVence] [date] NULL
) ON [PRIMARY]
GO


ALTER VIEW [dbo].[VW_Picking]
AS
SELECT        enc.IdPickingEnc AS Código, b.nombre AS Bodega, p.nombre_comercial AS Propietario, bu.descripcion AS [Ubicación Picking], enc.estado, enc.detalle_operador AS [Detalle Operador], CONVERT(char(5), enc.hora_ini, 108) 
                         AS [Hora Inicial], CONVERT(char(5), enc.hora_fin, 108) AS [Hora Final], enc.fecha_picking AS [Fecha Picking], enc.activo, enc.IdBodega
FROM            dbo.trans_picking_enc AS enc INNER JOIN
                         dbo.propietario_bodega AS pb ON enc.IdPropietarioBodega = pb.IdPropietarioBodega INNER JOIN
                         dbo.propietarios AS p ON pb.IdPropietario = p.IdPropietario INNER JOIN
                         dbo.bodega AS b ON enc.IdBodega = b.IdBodega INNER JOIN
                         dbo.bodega_ubicacion AS bu ON enc.IdUbicacionPicking = bu.IdUbicacion AND enc.IdBodega = bu.IdBodega
GO


ALTER VIEW [dbo].[VW_Tareas_Picking_HH]
AS
SELECT        p.IdPickingEnc, p.IdBodega, p.IdPropietarioBodega, p.IdUbicacionPicking, p.fecha_picking, p.hora_ini, p.hora_fin, p.estado, p.user_agr, p.fec_agr, p.user_mod, p.fec_mod, p.detalle_operador, p.activo, 
                         b.nombre AS NombreBodega, pp.nombre_comercial, CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, 
                         CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', 
                         bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
                         + ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) ELSE bodega_tramo.descripcion END AS NombreUbicacion, o.IdOperadorBodega
FROM            trans_picking_enc AS p INNER JOIN
                         trans_picking_op AS o ON p.IdPickingEnc = o.IdPickingEnc INNER JOIN
                         bodega AS b ON p.IdBodega = b.IdBodega INNER JOIN
                         propietario_bodega AS pb ON pb.IdPropietarioBodega = p.IdPropietarioBodega INNER JOIN
                         propietarios AS pp ON pp.IdPropietario = pb.IdPropietario INNER JOIN
                         bodega_area ON b.IdBodega = bodega_area.IdBodega INNER JOIN
                         bodega_sector ON bodega_area.IdArea = bodega_sector.IdArea INNER JOIN
                         bodega_tramo ON bodega_sector.IdSector = bodega_tramo.IdSector INNER JOIN
                         bodega_ubicacion ON p.IdUbicacionPicking = bodega_ubicacion.IdUbicacion AND bodega_tramo.IdTramo = bodega_ubicacion.IdTramo
AND bodega_tramo.IdBodega = bodega_ubicacion.IdBodega

GO

ALTER VIEW [dbo].[VW_Despacho_Rep_Res]
AS
SELECT        dbo.trans_picking_ubic.IdPropietarioBodega, dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, 
                         dbo.trans_picking_ubic.IdPresentacion, dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_despacho_det.IdDespachoEnc, dbo.trans_despacho_det.IdPedidoEnc, 
                         pr.nombre_comercial AS Propietario, p.codigo AS Codigo_Producto, p.nombre AS Nombre_Producto, um.Nombre AS UM, pp.nombre AS Presentacion, pp.factor, 
                         pe.nombre AS Estado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence AS Vence, SUM(ISNULL(dbo.trans_picking_ubic.cantidad_recibida, 0)) 
                         AS cantidad_pickeada, SUM(ISNULL(dbo.trans_picking_ubic.cantidad_verificada, 0)) AS cantidad_verificada, SUM(ISNULL(dbo.trans_picking_ubic.peso_recibido, 0)) 
                         AS Peso_Pickeado, SUM(ISNULL(dbo.trans_picking_ubic.peso_verificado, 0)) AS Peso_Verificado, SUM(dbo.trans_despacho_det.CantidadDespachada) 
                         AS CantidadDespachada, SUM(dbo.trans_despacho_det.PesoDespachado) AS PesoDespachado, ISNULL(dbo.trans_picking_ubic.encontrado, 0) AS Encontrado, 
                         ISNULL(dbo.trans_picking_ubic.acepto, 0) AS Acepto, dbo.trans_pe_enc.no_documento AS No_Documento_WMS, dbo.trans_pe_enc.referencia AS No_Referencia, 
                         dbo.cliente.codigo AS Codigo_Cliente, dbo.cliente.nombre_comercial AS Nombre_Cliente, dbo.cliente.idubicacionvirtual, dbo.cliente.es_bodega_recepcion, 
                         dbo.cliente.es_bodega_traslado, dbo.trans_despacho_enc.no_pase, dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, 
                         dbo.trans_despacho_enc.marchamo, dbo.road_ruta.CODIGO AS Codigo_Ruta, dbo.road_ruta.NOMBRE AS Nombre_Ruta, 
                         dbo.empresa_transporte_vehiculos.placa AS Placa_Vehiculo, dbo.empresa_transporte_vehiculos.placa_comercial, 
                         dbo.empresa_transporte_vehiculos.marca AS Marca_Vehiculo, dbo.empresa_transporte_vehiculos.modelo AS Modelo_Vehiculo, 
                         dbo.empresa_transporte_pilotos.nombres AS Nombre_Piloto, dbo.empresa_transporte_pilotos.apellidos AS Apellido_Piloto, 
                         dbo.empresa_transporte_pilotos.no_carnet AS No_Carnet_Piloto, dbo.empresa_transporte_pilotos.no_licencia AS No_Licencia_Piloto, 
                         dbo.trans_despacho_enc.fecha AS Fecha_Despacho
FROM            dbo.trans_despacho_det INNER JOIN
                         dbo.bodega_ubicacion AS bu INNER JOIN
                         dbo.producto AS p INNER JOIN
                         dbo.producto_bodega AS pb ON p.IdProducto = pb.IdProducto INNER JOIN
                         dbo.propietario_bodega AS prb ON p.IdPropietario = prb.IdPropietario INNER JOIN
                         dbo.producto_estado AS pe ON prb.IdPropietario = pe.IdPropietario INNER JOIN
                         dbo.unidad_medida AS um ON prb.IdPropietario = um.IdPropietario INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario INNER JOIN
                         dbo.trans_picking_det INNER JOIN
                         dbo.trans_picking_ubic ON dbo.trans_picking_det.IdPickingDet = dbo.trans_picking_ubic.IdPickingDet AND 
                         dbo.trans_picking_det.IdPedidoDet = dbo.trans_picking_ubic.IdPedidoDet ON prb.IdPropietarioBodega = dbo.trans_picking_ubic.IdPropietarioBodega AND 
                         pb.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND pe.IdEstado = dbo.trans_picking_ubic.IdProductoEstado AND 
                         um.IdUnidadMedida = dbo.trans_picking_ubic.IdUnidadMedida ON bu.IdUbicacion = dbo.trans_picking_ubic.IdUbicacion ON 
                         dbo.trans_despacho_det.IdPickingUbic = dbo.trans_picking_ubic.IdPickingUbic AND 
                         dbo.trans_despacho_det.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND 
                         dbo.trans_despacho_det.IdUnidadMedidaBasica = dbo.trans_picking_ubic.IdUnidadMedida INNER JOIN
                         dbo.trans_pe_enc ON prb.IdPropietarioBodega = dbo.trans_pe_enc.IdPropietarioBodega AND 
                         dbo.trans_despacho_det.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc INNER JOIN
                         dbo.cliente ON pr.IdPropietario = dbo.cliente.IdPropietario AND dbo.trans_pe_enc.IdCliente = dbo.cliente.IdCliente INNER JOIN
                         dbo.trans_despacho_enc ON dbo.trans_despacho_det.IdDespachoEnc = dbo.trans_despacho_enc.IdDespachoEnc AND 
                         prb.IdPropietarioBodega = dbo.trans_despacho_enc.IdPropietarioBodega INNER JOIN
                         dbo.bodega ON pb.IdBodega = dbo.bodega.IdBodega AND prb.IdBodega = dbo.bodega.IdBodega AND dbo.trans_pe_enc.IdBodega = dbo.bodega.IdBodega AND 
                         dbo.trans_despacho_enc.IdBodega = dbo.bodega.IdBodega AND bu.IdBodega = dbo.bodega.IdBodega LEFT OUTER JOIN
                         dbo.empresa_transporte_vehiculos ON dbo.trans_despacho_enc.IdVehiculo = dbo.empresa_transporte_vehiculos.IdVehiculo LEFT OUTER JOIN
                         dbo.road_ruta ON dbo.trans_despacho_enc.IdRuta = dbo.road_ruta.IdRuta LEFT OUTER JOIN
                         dbo.empresa_transporte_pilotos ON dbo.trans_despacho_enc.IdPiloto = dbo.empresa_transporte_pilotos.IdPiloto LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON dbo.trans_picking_ubic.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto
GROUP BY p.codigo, p.nombre, pp.nombre, pe.nombre, um.Nombre, pr.nombre_comercial, pp.factor, dbo.trans_picking_ubic.peso_recibido, 
                         dbo.trans_picking_ubic.peso_verificado, dbo.trans_picking_ubic.acepto, dbo.trans_picking_ubic.encontrado, dbo.trans_picking_ubic.IdPropietarioBodega, 
                         dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, dbo.trans_picking_ubic.IdPresentacion, 
                         dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_despacho_det.IdDespachoEnc, dbo.trans_pe_enc.no_documento, dbo.trans_pe_enc.referencia, 
                         dbo.cliente.codigo, dbo.cliente.nombre_comercial, dbo.cliente.idubicacionvirtual, dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, 
                         dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence, dbo.trans_despacho_det.IdPedidoEnc, dbo.trans_despacho_enc.no_pase, 
                         dbo.trans_despacho_enc.observacion, dbo.trans_despacho_enc.numero, dbo.trans_despacho_enc.marchamo, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, 
                         dbo.empresa_transporte_vehiculos.placa, dbo.empresa_transporte_vehiculos.marca, dbo.empresa_transporte_vehiculos.modelo, 
                         dbo.empresa_transporte_vehiculos.placa_comercial, dbo.empresa_transporte_pilotos.nombres, dbo.empresa_transporte_pilotos.apellidos, 
                         dbo.empresa_transporte_pilotos.no_carnet, dbo.empresa_transporte_pilotos.no_licencia, dbo.trans_despacho_enc.fecha
GO

CREATE NONCLUSTERED INDEX NCL_Producto_20191122_EJC
ON [dbo].[producto] ([IdPropietario])
INCLUDE ([codigo],[nombre])

alter table regla_ubicacion add IdBodega integer default 0

alter table trans_inv_tramo add IdBodega integer


ALTER VIEW [dbo].[VW_ProximosVencimiento]
AS
SELECT  dbo.propietarios.nombre_comercial AS Propietario, dbo.producto.codigo, dbo.producto.codigo_barra AS Barra, dbo.producto.nombre, dbo.unidad_medida.Nombre AS UnidadMedida, 
        dbo.producto_presentacion.nombre AS Presentacion, dbo.stock.lote, dbo.stock.lic_plate, dbo.stock.fecha_ingreso, 
		dbo.stock.fecha_vence, DATEADD(day, 0, GETDATE()) AS FechaProyectada, 
        DATEDIFF(DAY,GETDATE(), dbo.stock.fecha_vence) as Tolerancia_Dias, dbo.stock.cantidad AS CantidadSF, dbo.producto_estado.nombre AS NomEstado, 
        dbo.stock.IdUbicacion, ROUND(dbo.stock.cantidad / dbo.producto_presentacion.factor, 2) AS Cantidad, dbo.producto.IdProducto, dbo.propietario_bodega.IdPropietarioBodega, dbo.propietario_bodega.IdBodega, 
        CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) 
        + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
        bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) + ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), 
        bodega_ubicacion.IdUbicacion) ELSE bodega_tramo.descripcion END AS UbicacionCompleta
FROM            dbo.producto_estado INNER JOIN
        dbo.unidad_medida INNER JOIN
        dbo.propietarios INNER JOIN
        dbo.propietario_bodega INNER JOIN
        dbo.producto_bodega 
		INNER JOIN dbo.stock 
		ON dbo.producto_bodega.IdProductoBodega = dbo.stock.IdProductoBodega 		
		ON dbo.propietario_bodega.IdPropietarioBodega = dbo.stock.IdPropietarioBodega 
		ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario 
		ON dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida 
		ON dbo.producto_estado.IdEstado = dbo.stock.IdProductoEstado 		
		INNER JOIN dbo.bodega_ubicacion 
		ON dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion 
		AND dbo.producto_bodega.IdBodega = dbo.bodega_ubicacion.IdBodega
		AND dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion 
		INNER JOIN dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo 
		AND dbo.bodega_ubicacion.IdBodega = dbo.bodega_tramo.IdBodega
		LEFT OUTER JOIN
        dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion LEFT OUTER JOIN
        dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto
WHERE        (dbo.producto.control_vencimiento = 1)
GROUP BY dbo.propietarios.nombre_comercial, dbo.stock.IdStock, dbo.propietario_bodega.IdPropietarioBodega, dbo.unidad_medida.IdUnidadMedida, dbo.unidad_medida.Nombre, dbo.producto.IdProducto, dbo.producto.codigo, 
        dbo.producto.nombre, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.cantidad, dbo.stock.fecha_vence, dbo.stock.IdProductoEstado, dbo.stock.IdPresentacion, dbo.producto.existencia_min, dbo.producto.existencia_max, 
        dbo.producto.codigo_barra, dbo.producto.tolerancia, dbo.producto.control_vencimiento, dbo.producto_presentacion.nombre, dbo.producto_estado.IdEstado, dbo.producto_estado.nombre, dbo.stock.serial, dbo.stock.IdUbicacion, 
        dbo.stock.cantidad, dbo.producto_presentacion.factor, dbo.propietario_bodega.IdBodega, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.descripcion, dbo.bodega_tramo.descripcion, 
        dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, bodega_tramo.es_rack, bodega_tramo.descripcion, dbo.stock.lic_plate

GO

CREATE NONCLUSTERED INDEX NCLI_STOCK_20191205_EJC
ON [dbo].[stock] ([IdPropietarioBodega])
INCLUDE ([IdProductoBodega],[IdProductoEstado],[IdPresentacion],[IdUnidadMedida],[IdUbicacion],[lote],[lic_plate],[cantidad],[fecha_ingreso],[fecha_vence])

ALTER VIEW [dbo].[VW_Movimientos_N1]
AS
SELECT m.idmovimiento, pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, 
pe2.nombre AS EstadoDestino, u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, 
stt.Nombre AS TipoTarea, m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, 
ISNULL(toce.No_Documento, N'') AS No_Doc_Ingreso, ISNULL(toce.Referencia, N'') AS No_Ref_Ingreso, '' AS No_Doc_Salida, '' AS No_Ref_Salida, m.fecha_vence, 
pr.IdTipoActualizacionCosto, m.IdPresentacion, m.IdUnidadMedida, m.IdEstadoOrigen, m.IdProductoBodega,m.barra_pallet
FROM dbo.trans_movimientos AS m LEFT OUTER JOIN
dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
dbo.trans_re_enc AS tre ON prb.IdPropietarioBodega = tre.IdPropietarioBodega AND m.IdRecepcion = tre.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_re_oc AS troc ON tre.IdRecepcionEnc = troc.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_oc_enc AS toce ON troc.IdOrdenCompraEnc = toce.IdOrdenCompraEnc LEFT OUTER JOIN
dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion 
AND u2.IdBodega = m.IdBodegaDestino
LEFT OUTER JOIN
dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion 
AND u1.IdBodega = m.IdBodegaOrigen
LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
WHERE M.IdTipoTarea IN (1, 2, 6, 13, 14, 15, 16)
UNION
SELECT m.idmovimiento, pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, 
pe2.nombre AS EstadoDestino, u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, 
stt.Nombre AS TipoTarea, m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, 
ISNULL(toce.No_Documento, N'') AS No_Doc_Ingreso, ISNULL(toce.Referencia, N'') AS No_Ref_Ingreso, ISNULL(CASE WHEN penc.IdPedidoEnc = '0' THEN '' END, 
N'') AS No_Doc_Salida, ISNULL(penc.Referencia, N'') AS No_Ref_Salida, m.fecha_vence, pr.IdTipoActualizacionCosto, m.IdPresentacion, m.IdUnidadMedida, 
m.IdEstadoOrigen, m.IdProductoBodega,m.barra_pallet
FROM dbo.trans_movimientos AS m LEFT OUTER JOIN
dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
(SELECT DISTINCT d .IdDespachoEnc, d .IDPEDIDOENC, d .IDPRODUCTOBODEGA, d .IdUnidadMedidaBasica, d .IdPresentacion
FROM trans_despacho_det d) Desp ON DESP.IdDespachoEnc = M.IdTransaccion AND m.IdProductoBodega = DESP.IdProductoBodega AND 
m.IdUnidadMedida = DESP.IdUnidadMedidaBasica AND ISNULL(m.IdPresentacion, 0) = DESP.IdPresentacion LEFT OUTER JOIN
trans_pe_enc penc ON penc.IdPedidoEnc = desp.IdPedidoEnc LEFT OUTER JOIN
dbo.trans_re_enc AS tre ON prb.IdPropietarioBodega = tre.IdPropietarioBodega AND m.IdRecepcion = tre.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_re_oc AS troc ON tre.IdRecepcionEnc = troc.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_oc_enc AS toce ON troc.IdOrdenCompraEnc = toce.IdOrdenCompraEnc LEFT OUTER JOIN
dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion 
AND u2.IdBodega = m.IdBodegaDestino
LEFT OUTER JOIN
dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion 
AND u1.IdBodega = m.IdBodegaOrigen
LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
WHERE M.IdTipoTarea = 5
UNION
SELECT m.idmovimiento, pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, 
pe2.nombre AS EstadoDestino, u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, 
stt.Nombre AS TipoTarea, m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, 
ISNULL(toce.No_Documento, N'') AS No_Doc_Ingreso, ISNULL(toce.Referencia, N'') AS No_Ref_Ingreso, CONVERT(NVARCHAR(50), ISNULL(aje.idajusteenc, N'')) 
AS No_Doc_Salida, CONVERT(NVARCHAR(50), ISNULL(aje.idajusteenc, N'')) AS No_Ref_Salida, m.fecha_vence, pr.IdTipoActualizacionCosto, m.IdPresentacion, 
m.IdUnidadMedida, m.IdEstadoOrigen, m.IdProductoBodega,m.barra_pallet
FROM dbo.trans_movimientos AS m LEFT OUTER JOIN
dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
dbo.trans_re_enc AS tre ON prb.IdPropietarioBodega = tre.IdPropietarioBodega AND m.IdRecepcion = tre.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_re_oc AS troc ON tre.IdRecepcionEnc = troc.IdRecepcionEnc LEFT OUTER JOIN
dbo.trans_oc_enc AS toce ON troc.IdOrdenCompraEnc = toce.IdOrdenCompraEnc LEFT OUTER JOIN
dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion 
AND u2.IdBodega = m.IdBodegaDestino
LEFT OUTER JOIN
dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion 
AND u1.IdBodega = m.IdBodegaOrigen
LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea LEFT OUTER JOIN
dbo.trans_ajuste_enc aje ON aje.idajusteenc = m.IdTransaccion
WHERE M.IdTipoTarea = 17
GO


CREATE NONCLUSTERED INDEX NCLI_Producto_20191210_EJC
ON [dbo].[producto] ([IdClasificacion])
INCLUDE ([IdFamilia],[codigo],[nombre],[codigo_barra])
GO

CREATE NONCLUSTERED INDEX NCLI_Producto_Bodega_20191210_EJC
ON [dbo].[producto_bodega] ([IdProducto])
GO

ALTER VIEW [dbo].[VW_Movimientos_N]
AS
SELECT        pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, pe2.nombre AS EstadoDestino, u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, 
                         u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, stt.Nombre AS TipoTarea, m.IdBodegaOrigen, m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, m.fecha_vence, 
                         pr.IdTipoActualizacionCosto, m.IdPresentacion, m.IdUnidadMedida, m.IdEstadoOrigen, m.IdProductoBodega, prb.IdPropietarioBodega, prb.IdBodega, m.barra_pallet, dbo.producto_clasificacion.nombre AS Clasificacion, 
                         dbo.producto_familia.nombre AS Familia
FROM            dbo.trans_movimientos AS m LEFT OUTER JOIN
                         dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON pb.IdProducto = p.IdProducto INNER JOIN
                         dbo.producto_clasificacion ON pr.IdPropietario = dbo.producto_clasificacion.IdPropietario AND p.IdClasificacion = dbo.producto_clasificacion.IdClasificacion INNER JOIN
                         dbo.producto_familia ON pr.IdPropietario = dbo.producto_familia.IdPropietario AND p.IdFamilia = dbo.producto_familia.IdFamilia LEFT OUTER JOIN
                         dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion 
						AND u2.IdBodega = m.IdBodegaDestino
						LEFT OUTER JOIN
						dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion 
						AND u1.IdBodega = m.IdBodegaOrigen
						LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
                         dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
GO


CREATE NONCLUSTERED INDEX NCLI_Bodega_Ubicacion_20191210_EJC
ON [dbo].[bodega_ubicacion] ([IdBodega],[IdSector])
INCLUDE ([IdUbicacion],[IdTramo],[IdArea])

CREATE NONCLUSTERED INDEX NCLI_Stock_20191210_EJC
ON [dbo].[stock] ([IdUbicacion])

CREATE VIEW [dbo].[VW_OcupacionBodega]
AS
SELECT        dbo.bodega_ubicacion.IdUbicacion, dbo.bodega_ubicacion.IdBodega, ISNULL(dbo.stock.IdStock, 0) AS IdStock
FROM            dbo.stock INNER JOIN
                         dbo.producto_bodega ON dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega AND dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega RIGHT OUTER JOIN
                         dbo.bodega INNER JOIN
                         dbo.bodega_area ON dbo.bodega.IdBodega = dbo.bodega_area.IdBodega INNER JOIN
                         dbo.bodega_sector ON dbo.bodega_area.IdArea = dbo.bodega_sector.IdArea AND dbo.bodega_area.IdBodega = dbo.bodega_sector.IdBodega INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_sector.IdSector = dbo.bodega_tramo.IdSector AND dbo.bodega_sector.IdBodega = dbo.bodega_tramo.IdBodega INNER JOIN
                         dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo AND dbo.bodega_tramo.IdSector = dbo.bodega_ubicacion.IdSector AND dbo.bodega_tramo.IdArea = dbo.bodega_ubicacion.IdArea AND 
                         dbo.bodega_tramo.IdBodega = dbo.bodega_ubicacion.IdBodega ON dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.producto_bodega.IdBodega = dbo.bodega.IdBodega AND 
                         dbo.producto_bodega.IdBodega = dbo.bodega_ubicacion.IdBodega
GO

CREATE NONCLUSTERED INDEX NCLI_Producto_20191210A_EJC
ON [dbo].[producto] ([IdPropietario])
INCLUDE ([IdProducto],[codigo],[nombre])

CREATE NONCLUSTERED INDEX NCLI_TransMovimientos_20191211_EJC
ON [dbo].[trans_movimientos] ([IdProductoBodega],[IdBodegaDestino])
INCLUDE ([IdBodegaOrigen],[IdPropietarioBodega],[IdUbicacionOrigen],[IdUbicacionDestino],[IdPresentacion],[IdEstadoOrigen],[IdEstadoDestino],[IdUnidadMedida],[IdTipoTarea],[cantidad],[peso],[lote],[fecha_vence],[fecha],[barra_pallet])

insert into menu_sistema values('3.8','Generador de Tableros', 'grpRepTablero',2,3,0)
insert into menu_sistema values('3.8.1','Diseñador de Tablero', 'mnuDashBoardDesigner',3,3.8,0)

CREATE TABLE [dbo].[trans_movimiento_pallet](
	[idmovimientopallet] [int] NOT NULL,
	[idbodega] [int] NULL,
	[lp_origen] [nvarchar](50) NULL,
	[lp_destino] [nvarchar](50) NULL,
	[orientacion] [nvarchar](50) NULL,
	[fecha] [date] NULL,
	[idusuario] [int] NULL,
 CONSTRAINT [PK_trans_movimiento_pallet] PRIMARY KEY CLUSTERED 
(
	[idmovimientopallet] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

alter table stock add idbodega int
alter table stock_rec add idbodega int

UPDATE s
SET s.idbodega = pb.IdBodega
FROM stock s
INNER JOIN producto_bodega pb
    ON s.IdProductoBodega = pb.IdProductoBodega
    
ALTER TABLE stock alter column IdBodega int NOT NULL; 

ALTER VIEW [dbo].[VW_Stock_Res]
AS
SELECT        dbo.producto_bodega.IdBodega, dbo.propietarios.IdPropietario, dbo.propietario_bodega.IdPropietarioBodega, dbo.producto.IdProducto, dbo.producto_bodega.IdProductoBodega, dbo.stock.IdStock, 
                         dbo.stock.IdUbicacion_anterior, dbo.unidad_medida.IdUnidadMedida, dbo.stock.IdProductoEstado, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.propietarios.nombre_comercial AS Propietario, dbo.producto.codigo, 
                         dbo.producto.nombre, dbo.unidad_medida.Nombre AS UnidadMedida, dbo.producto_presentacion.nombre AS Presentacion, dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.fecha_vence, dbo.stock.cantidad AS CantidadSF, 
                         dbo.stock.peso, dbo.stock.cantidad / dbo.producto_presentacion.factor AS Cantidad, dbo.producto_estado.nombre AS NomEstado, dbo.producto_estado.dañado, dbo.producto_presentacion.factor, 
                         dbo.producto_estado.utilizable AS EstadoUtilizable, dbo.stock.IdUbicacion, dbo.stock.lic_plate, dbo.stock.serial, dbo.stock.añada, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, 
                         dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, SUM(dbo.stock_res.cantidad) AS CantidadReservada, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho AS ancho_ubicacion, 
                         dbo.bodega_ubicacion.largo AS largo_ubicacion, dbo.bodega_ubicacion.alto AS alto_ubicacion, dbo.indice_rotacion.Descripcion AS IndiceRotacion, dbo.producto.existencia_min AS existencia_min_umbas, 
                         dbo.producto.existencia_max AS existencia_max_umbas, dbo.producto.codigo_barra, dbo.producto.costo, dbo.producto_presentacion.MinimoExistencia AS existencia_min_pres, 
                         dbo.producto_presentacion.MaximoExistencia AS existencia_max_pres, dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.IdUbicacion AS IdUbicacionActual, dbo.bodega_ubicacion.nivel AS Ubicacion_Nivel, 
                         dbo.bodega_ubicacion.indice_x AS Ubicacion_Indice_X, dbo.bodega_ubicacion.descripcion AS Ubicacion_Nombre, dbo.bodega_tramo.descripcion AS Ubicacion_Tramo, CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, 
                         iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
                         bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
                         bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
                         + ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
                         ELSE bodega_tramo.descripcion END AS Nombre_Completo
FROM            dbo.stock_res RIGHT OUTER JOIN
                         dbo.indice_rotacion RIGHT OUTER JOIN
                         dbo.bodega_tramo INNER JOIN
                         dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo AND dbo.bodega_tramo.IdBodega = dbo.bodega_ubicacion.IdBodega AND 
                         dbo.bodega_tramo.IdSector = dbo.bodega_ubicacion.IdSector RIGHT OUTER JOIN
                         dbo.unidad_medida INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.stock INNER JOIN
                         dbo.propietario_bodega ON dbo.stock.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON 
                         dbo.unidad_medida.IdUnidadMedida = dbo.stock.IdUnidadMedida ON dbo.bodega_ubicacion.IdBodega = dbo.stock.IdBodega AND dbo.bodega_ubicacion.IdUbicacion = dbo.stock.IdUbicacion LEFT OUTER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
                         dbo.bodega ON dbo.producto_bodega.IdBodega = dbo.bodega.IdBodega ON dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega ON dbo.indice_rotacion.IdIndiceRotacion = dbo.producto.IdIndiceRotacion ON 
                         dbo.stock_res.IdStock = dbo.stock.IdStock AND dbo.stock_res.IdPropietarioBodega = dbo.stock.IdPropietarioBodega AND dbo.stock_res.IdProductoBodega = dbo.stock.IdProductoBodega AND 
                         dbo.stock_res.IdUbicacion = dbo.stock.IdUbicacion LEFT OUTER JOIN
                         dbo.producto_estado ON dbo.stock.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.stock.IdPresentacion = dbo.producto_presentacion.IdPresentacion
GROUP BY dbo.propietarios.nombre_comercial, dbo.propietarios.IdPropietario, dbo.stock.IdStock, dbo.bodega_ubicacion.IdUbicacion, dbo.stock.IdUbicacion_anterior, dbo.propietario_bodega.IdPropietarioBodega, 
                         dbo.producto_bodega.IdProductoBodega, dbo.unidad_medida.IdUnidadMedida, dbo.unidad_medida.Nombre, dbo.producto_presentacion.nombre, dbo.producto.IdProducto, dbo.producto.codigo, dbo.producto.nombre, 
                         dbo.stock.lote, dbo.stock.fecha_ingreso, dbo.stock.serial, dbo.stock.añada, dbo.producto_bodega.IdBodega, dbo.stock.fecha_vence, dbo.stock.IdProductoEstado, dbo.producto_estado.nombre, dbo.producto_estado.utilizable, 
                         dbo.producto_estado.dañado, dbo.stock.IdUbicacion, dbo.stock.IdPresentacion, dbo.stock.IdRecepcionEnc, dbo.stock.lic_plate, dbo.stock.peso, dbo.producto.IdIndiceRotacion, dbo.producto_presentacion.alto, 
                         dbo.producto_presentacion.largo, dbo.producto_presentacion.ancho, dbo.producto_presentacion.factor, dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.ancho, dbo.bodega_ubicacion.largo, dbo.bodega_ubicacion.alto, 
                         dbo.indice_rotacion.Descripcion, dbo.producto.existencia_min, dbo.producto.existencia_max, dbo.producto.codigo_barra, dbo.producto.costo, dbo.producto_presentacion.MinimoExistencia, 
                         dbo.producto_presentacion.MaximoExistencia, dbo.stock.cantidad, dbo.stock.cantidad / dbo.producto_presentacion.factor, dbo.stock.atributo_variante_1, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.indice_x, 
                         dbo.bodega_ubicacion.descripcion, dbo.bodega_tramo.descripcion, dbo.bodega_tramo.descripcion, dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_tramo.es_rack, dbo.bodega_tramo.descripcion, 
                         dbo.bodega_tramo.IdBodega

ALTER VIEW [dbo].[VW_Cambios_Ubicacion]
AS
SELECT        dbo.trans_movimientos.IdBodegaOrigen, dbo.sis_tipo_tarea.Nombre AS TipoTarea, dbo.producto.codigo AS Código, dbo.producto.nombre AS Producto, dbo.trans_movimientos.cantidad AS Cantidad, 
                         dbo.unidad_medida.Nombre AS UMBas, dbo.trans_movimientos.peso AS Peso, dbo.trans_movimientos.lote AS Lote, dbo.trans_movimientos.barra_pallet AS LP, dbo.trans_movimientos.fecha_vence AS Vence, 
                         dbo.producto_estado.nombre AS Estado, dbo.motivo_ubicacion.Nombre AS Motivo, dbo.propietarios.nombre_comercial AS Propietario, dbo.trans_movimientos.fecha AS Fecha, dbo.trans_movimientos.IdPresentacion, 
                         dbo.producto_presentacion.nombre AS Presentacion, dbo.producto_presentacion.factor AS Factor, dbo.trans_movimientos.IdProductoBodega, dbo.trans_movimientos.IdPropietarioBodega,
						 CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) 
                         + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
                         bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) + ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), 
                         bodega_ubicacion.IdUbicacion) ELSE bodega_tramo.descripcion END AS Ubicacion_Origen, CASE WHEN bodega_tramo_1.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo_1.descripcion, 2, iif(CHARINDEX('-', 
                         bodega_tramo_1.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo_1.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion_1.indice_x), 2) 
                         + ' - ' + 'T' + SUBSTRING(bodega_tramo_1.descripcion, iif(CHARINDEX('-', bodega_tramo_1.descripcion, 0) < 0, 0, CHARINDEX('-', bodega_tramo_1.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), 
                         bodega_ubicacion_1.nivel), 2) + ' - ' + 'Pos' + bodega_ubicacion_1.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion_1.IdUbicacion) ELSE bodega_tramo_1.descripcion END AS Ubicacion_Destino
FROM            dbo.propietarios INNER JOIN
                         dbo.trans_movimientos INNER JOIN
                         dbo.sis_tipo_tarea ON dbo.trans_movimientos.IdTipoTarea = dbo.sis_tipo_tarea.IdTipoTarea INNER JOIN
                         dbo.producto_bodega ON dbo.trans_movimientos.IdProductoBodega = dbo.producto_bodega.IdProductoBodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
                         dbo.producto_estado ON dbo.trans_movimientos.IdEstadoOrigen = dbo.producto_estado.IdEstado AND dbo.trans_movimientos.IdEstadoDestino = dbo.producto_estado.IdEstado INNER JOIN
                         dbo.bodega_ubicacion ON dbo.trans_movimientos.IdUbicacionOrigen = dbo.bodega_ubicacion.IdUbicacion AND dbo.trans_movimientos.IdBodegaOrigen = dbo.bodega_ubicacion.IdBodega INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo AND dbo.bodega_ubicacion.IdBodega = dbo.bodega_tramo.IdBodega AND dbo.bodega_ubicacion.IdArea = dbo.bodega_tramo.IdArea AND 
                         dbo.bodega_ubicacion.IdSector = dbo.bodega_tramo.IdSector INNER JOIN
                         dbo.bodega_ubicacion AS bodega_ubicacion_1 ON dbo.trans_movimientos.IdUbicacionDestino = bodega_ubicacion_1.IdUbicacion AND dbo.trans_movimientos.IdBodegaDestino = bodega_ubicacion_1.IdBodega INNER JOIN
                         dbo.bodega_tramo AS bodega_tramo_1 ON bodega_ubicacion_1.IdTramo = bodega_tramo_1.IdTramo AND bodega_ubicacion_1.IdSector = bodega_tramo_1.IdSector AND 
                         bodega_ubicacion_1.IdArea = bodega_tramo_1.IdArea AND bodega_ubicacion_1.IdBodega = bodega_tramo_1.IdBodega ON dbo.propietarios.IdPropietario = dbo.producto_estado.IdPropietario AND 
                         dbo.propietarios.IdPropietario = dbo.producto_estado.IdPropietario INNER JOIN
                         dbo.propietario_bodega ON dbo.trans_movimientos.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega AND dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario INNER JOIN
                         dbo.unidad_medida ON dbo.propietarios.IdPropietario = dbo.unidad_medida.IdPropietario AND dbo.trans_movimientos.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida AND 
                         dbo.producto.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.trans_movimientos.IdPresentacion = dbo.producto_presentacion.IdPresentacion AND dbo.producto.IdProducto = dbo.producto_presentacion.IdProducto LEFT OUTER JOIN
                         dbo.motivo_ubicacion INNER JOIN
                         dbo.trans_ubic_hh_enc ON dbo.motivo_ubicacion.IdMotivoUbicacion = dbo.trans_ubic_hh_enc.IdMotivoUbicacion ON dbo.trans_movimientos.IdTransaccion = dbo.trans_ubic_hh_enc.IdTareaUbicacionEnc
WHERE        (dbo.sis_tipo_tarea.Nombre = 'UBIC') OR
                         (dbo.sis_tipo_tarea.Nombre = 'CEST')
GO

alter table trans_inv_ciclico_ubic add IdBodega int not null

ALTER VIEW [dbo].[vw_ubicaciones_por_regla]
AS
SELECT        dbo.regla_ubic_enc.IdReglaUbicacionEnc, dbo.bodega_ubicacion.IdUbicacion, dbo.bodega_ubicacion.descripcion, dbo.bodega_ubicacion.ancho, dbo.bodega_ubicacion.largo, dbo.bodega_ubicacion.alto, 
dbo.bodega_ubicacion.IdTramo, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.IdIndiceRotacion, dbo.bodega_ubicacion.IdTipoRotacion, dbo.bodega_ubicacion.dañado, 
dbo.bodega_ubicacion.activo, dbo.bodega_ubicacion.bloqueada, dbo.bodega_ubicacion.acepta_pallet, dbo.bodega_area.IdBodega, dbo.regla_ubic_det_prop.IdPropietarioBodega, 
dbo.regla_ubic_det_prop.Activo AS regla_ubic_det_prop_Activo, dbo.propietario_bodega.IdPropietario, dbo.regla_ubic_det_ir.IdIndiceRotacion AS IdIndiceRotacionRegla, 
dbo.regla_ubic_det_tr.IdTipoRotacion AS IdTipoRotacionRegla, dbo.regla_ubic_det_tp.IdTipoProducto, dbo.regla_ubic_det_tp.Activo AS regla_ubic_det_tp_Activo, dbo.regla_ubic_det_pe.IdEstado, 
dbo.regla_ubic_det_pe.Activo AS regla_ubic_det_pe_Activo, dbo.regla_ubic_det_pp.IdPresentacion
FROM            dbo.regla_ubic_det_tp INNER JOIN
dbo.bodega_ubicacion INNER JOIN
dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo AND dbo.bodega_ubicacion.IdSector = dbo.bodega_tramo.IdSector AND 
dbo.bodega_ubicacion.IdBodega = dbo.bodega_tramo.IdBodega INNER JOIN
dbo.bodega_sector ON dbo.bodega_tramo.IdSector = dbo.bodega_sector.IdSector AND dbo.bodega_tramo.IdArea = dbo.bodega_sector.IdArea AND dbo.bodega_tramo.IdBodega = dbo.bodega_sector.IdBodega INNER JOIN
dbo.bodega_area ON dbo.bodega_sector.IdArea = dbo.bodega_area.IdArea AND dbo.bodega_sector.IdBodega = dbo.bodega_area.IdBodega INNER JOIN
dbo.regla_ubicacion ON dbo.bodega_ubicacion.IdUbicacion = dbo.regla_ubicacion.IdUbicacion AND dbo.bodega_ubicacion.IdBodega = dbo.regla_ubicacion.IdBodega INNER JOIN
dbo.regla_ubic_enc ON dbo.regla_ubicacion.IdReglaUbicacionEnc = dbo.regla_ubic_enc.IdReglaUbicacionEnc ON dbo.regla_ubic_det_tp.IdReglaUbicacionEnc = dbo.regla_ubic_enc.IdReglaUbicacionEnc LEFT OUTER JOIN
dbo.regla_ubic_det_pp ON dbo.regla_ubic_enc.IdReglaUbicacionEnc = dbo.regla_ubic_det_pp.IdReglaUbicacionEnc LEFT OUTER JOIN
dbo.regla_ubic_det_pe ON dbo.regla_ubic_enc.IdReglaUbicacionEnc = dbo.regla_ubic_det_pe.IdReglaUbicacionEnc LEFT OUTER JOIN
dbo.propietario_bodega INNER JOIN
dbo.regla_ubic_det_prop ON dbo.propietario_bodega.IdPropietarioBodega = dbo.regla_ubic_det_prop.IdPropietarioBodega ON 
dbo.regla_ubic_enc.IdReglaUbicacionEnc = dbo.regla_ubic_det_prop.IdReglaUbicacionEnc LEFT OUTER JOIN
dbo.regla_ubic_det_tr ON dbo.regla_ubic_enc.IdReglaUbicacionEnc = dbo.regla_ubic_det_tr.IdReglaUbicacionEnc AND dbo.bodega_ubicacion.IdTipoRotacion = dbo.regla_ubic_det_tr.IdTipoRotacion LEFT OUTER JOIN
dbo.regla_ubic_det_ir ON dbo.regla_ubic_enc.IdReglaUbicacionEnc = dbo.regla_ubic_det_ir.IdReglaUbicacionEnc AND dbo.bodega_ubicacion.IdIndiceRotacion = dbo.regla_ubic_det_ir.IdIndiceRotacion
GO


------------------------ #EJC20200113#-----------------------------------------------------
ALTER VIEW [dbo].[VW_Tareas_Picking_HH]
AS

SELECT     p.IdPickingEnc, p.IdBodega, p.IdPropietarioBodega, p.IdUbicacionPicking, p.fecha_picking, p.hora_ini, p.hora_fin, p.estado, p.user_agr, p.fec_agr, p.user_mod, p.fec_mod, p.detalle_operador, p.activo, b.nombre AS NombreBodega, pp.nombre_comercial, 
CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) 
                  + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', bodega_tramo.descripcion, 0) + 1), 1) 
                  + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) + ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) ELSE bodega_tramo.descripcion END AS NombreUbicacion,
                  o.IdOperadorBodega
FROM        dbo.trans_picking_enc AS p INNER JOIN
                  dbo.trans_picking_op AS o ON p.IdPickingEnc = o.IdPickingEnc INNER JOIN
                  dbo.bodega AS b ON p.IdBodega = b.IdBodega INNER JOIN
                  dbo.propietario_bodega AS pb ON pb.IdPropietarioBodega = p.IdPropietarioBodega AND b.IdBodega = pb.IdBodega INNER JOIN
                  dbo.propietarios AS pp ON pp.IdPropietario = pb.IdPropietario INNER JOIN
                  dbo.bodega_area ON b.IdBodega = dbo.bodega_area.IdBodega INNER JOIN
                  dbo.bodega_sector ON dbo.bodega_area.IdArea = dbo.bodega_sector.IdArea AND dbo.bodega_area.IdBodega = dbo.bodega_sector.IdBodega INNER JOIN
                  dbo.bodega_tramo ON dbo.bodega_sector.IdSector = dbo.bodega_tramo.IdSector INNER JOIN
                  dbo.bodega_ubicacion ON p.IdUbicacionPicking = dbo.bodega_ubicacion.IdUbicacion AND dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo AND dbo.bodega_tramo.IdBodega = dbo.bodega_ubicacion.IdBodega AND 
                  p.IdBodega = dbo.bodega_ubicacion.IdBodega

GO


alter table trans_picking_ubic add IdBodega int 

UPDATE s
SET s.idbodega = pb.IdBodega
FROM trans_picking_ubic s
INNER JOIN producto_bodega pb
    ON s.IdProductoBodega = pb.IdProductoBodega
    

ALTER VIEW [dbo].[VW_Despacho_Rep_Det_I]
AS
SELECT        dbo.trans_despacho_enc.IdBodega, dbo.trans_picking_ubic.IdPickingUbic, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdPedidoDet, dbo.trans_picking_ubic.IdPropietarioBodega, 
                         dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdProductoEstado, dbo.trans_picking_ubic.IdPresentacion, dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.IdRecepcion, 
                         dbo.trans_despacho_enc.IdDespachoEnc, dbo.trans_despacho_det.IdDespachoDet, dbo.trans_despacho_det.IdPedidoEnc, dbo.producto.IdProducto, dbo.propietarios.nombre_comercial AS Propietario, 
                         dbo.trans_despacho_det.Codigo AS Codigo_Producto, dbo.producto.nombre AS Nombre_Producto, dbo.unidad_medida.Nombre AS UM, dbo.producto_presentacion.nombre AS Presentacion, dbo.trans_despacho_det.Fecha, 
                         dbo.trans_despacho_det.NombreEstado, dbo.producto_presentacion.factor, dbo.producto_estado.nombre AS Estado, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence AS Vence, 
                         ISNULL(dbo.trans_picking_ubic.cantidad_recibida, 0) AS cantidad_pickeada, ISNULL(dbo.trans_picking_ubic.cantidad_verificada, 0) AS cantidad_verificada, ISNULL(dbo.trans_picking_ubic.peso_recibido, 0) AS Peso_Pickeado, 
                         ISNULL(dbo.trans_picking_ubic.peso_verificado, 0) AS Peso_Verificado, dbo.trans_despacho_det.CantidadDespachada, dbo.trans_despacho_det.PesoDespachado, ISNULL(dbo.trans_picking_ubic.encontrado, 0) AS Encontrado, 
                         ISNULL(dbo.trans_picking_ubic.acepto, 0) AS Acepto, dbo.trans_pe_enc.no_documento AS No_Documento_WMS, dbo.trans_pe_enc.referencia AS No_Referencia, dbo.cliente.codigo AS Codigo_Cliente, 
                         dbo.cliente.nombre_comercial AS Nombre_Cliente, dbo.cliente.idubicacionvirtual, dbo.trans_despacho_enc.no_pase, dbo.cliente.es_bodega_recepcion, dbo.cliente.es_bodega_traslado, dbo.trans_despacho_enc.numero, 
                         dbo.trans_despacho_enc.marchamo, dbo.trans_despacho_enc.observacion, dbo.trans_picking_ubic.IdUbicacion AS Ubicacion_Origen, dbo.road_ruta.CODIGO AS Codigo_Ruta, dbo.road_ruta.NOMBRE AS Nombre_Ruta, 
                         dbo.empresa_transporte_vehiculos.placa AS Placa_Vehiculo, dbo.empresa_transporte_vehiculos.placa_comercial, dbo.empresa_transporte_vehiculos.marca AS Marca_Vehiculo, 
                         dbo.empresa_transporte_vehiculos.modelo AS Modelo_Vehiculo, dbo.empresa_transporte_pilotos.nombres AS Nombre_Piloto, dbo.empresa_transporte_pilotos.apellidos AS Apellido_Piloto, 
                         dbo.empresa_transporte_pilotos.no_carnet AS No_Carnet_Piloto, dbo.empresa_transporte_pilotos.no_licencia AS No_Licencia_Piloto
FROM            dbo.empresa_transporte_vehiculos RIGHT OUTER JOIN
                         dbo.trans_pe_enc INNER JOIN
                         dbo.trans_despacho_enc INNER JOIN
                         dbo.trans_despacho_det ON dbo.trans_despacho_enc.IdDespachoEnc = dbo.trans_despacho_det.IdDespachoEnc INNER JOIN
                         dbo.producto_bodega ON dbo.trans_despacho_det.IdProductoBodega = dbo.producto_bodega.IdProductoBodega AND dbo.trans_despacho_enc.IdBodega = dbo.producto_bodega.IdBodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
                         dbo.propietario_bodega ON dbo.trans_despacho_enc.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega AND dbo.producto_bodega.IdBodega = dbo.propietario_bodega.IdBodega AND 
                         dbo.trans_despacho_enc.IdBodega = dbo.propietario_bodega.IdBodega INNER JOIN
                         dbo.propietarios ON dbo.producto.IdPropietario = dbo.propietarios.IdPropietario AND dbo.propietario_bodega.IdPropietario = dbo.propietarios.IdPropietario ON 
                         dbo.trans_pe_enc.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega AND dbo.trans_pe_enc.IdBodega = dbo.propietario_bodega.IdBodega AND 
                         dbo.trans_pe_enc.IdBodega = dbo.trans_despacho_enc.IdBodega AND dbo.trans_pe_enc.IdPedidoEnc = dbo.trans_despacho_det.IdPedidoEnc INNER JOIN
                         dbo.cliente ON dbo.trans_pe_enc.IdCliente = dbo.cliente.IdCliente AND dbo.propietarios.IdPropietario = dbo.cliente.IdPropietario ON 
                         dbo.empresa_transporte_vehiculos.IdVehiculo = dbo.trans_despacho_enc.IdVehiculo LEFT OUTER JOIN
                         dbo.empresa_transporte_pilotos INNER JOIN
                         dbo.empresa_transporte ON dbo.empresa_transporte_pilotos.IdEmpresaTransporte = dbo.empresa_transporte.IdEmpresaTransporte ON 
                         dbo.empresa_transporte_vehiculos.IdEmpresaTransporte = dbo.empresa_transporte.IdEmpresaTransporte AND dbo.trans_despacho_enc.IdPiloto = dbo.empresa_transporte_pilotos.IdPiloto LEFT OUTER JOIN
                         dbo.road_ruta ON dbo.trans_despacho_enc.IdRuta = dbo.road_ruta.IdRuta LEFT OUTER JOIN
                         dbo.bodega_tramo INNER JOIN
                         dbo.producto_estado INNER JOIN
                         dbo.trans_picking_ubic ON dbo.producto_estado.IdEstado = dbo.trans_picking_ubic.IdProductoEstado INNER JOIN
                         dbo.bodega_ubicacion ON dbo.trans_picking_ubic.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.trans_picking_ubic.IdBodega = dbo.bodega_ubicacion.IdBodega ON 
                         dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo AND dbo.bodega_tramo.IdBodega = dbo.bodega_ubicacion.IdBodega INNER JOIN
                         dbo.bodega_sector INNER JOIN
                         dbo.bodega_area ON dbo.bodega_sector.IdArea = dbo.bodega_area.IdArea AND dbo.bodega_sector.IdBodega = dbo.bodega_area.IdBodega ON dbo.bodega_tramo.IdSector = dbo.bodega_sector.IdSector AND 
                         dbo.bodega_tramo.IdBodega = dbo.bodega_sector.IdBodega ON dbo.propietario_bodega.IdPropietarioBodega = dbo.trans_picking_ubic.IdPropietarioBodega AND 
                         dbo.trans_despacho_det.IdUnidadMedidaBasica = dbo.trans_picking_ubic.IdUnidadMedida AND dbo.trans_despacho_det.IdPickingUbic = dbo.trans_picking_ubic.IdPickingUbic AND 
                         dbo.producto_bodega.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND dbo.trans_despacho_enc.IdPropietarioBodega = dbo.trans_picking_ubic.IdPropietarioBodega AND 
                         dbo.trans_despacho_det.IdPresentacion = dbo.trans_picking_ubic.IdPresentacion LEFT OUTER JOIN
                         dbo.unidad_medida ON dbo.trans_despacho_det.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida AND dbo.propietarios.IdPropietario = dbo.unidad_medida.IdPropietario LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.producto.IdProducto = dbo.producto_presentacion.IdProducto AND dbo.trans_despacho_det.IdPresentacion = dbo.producto_presentacion.IdPresentacion
GO

------------------------ #EJC20200113#-----------------------------------------------------


/****** Object:  View [dbo].[VW_Movimientos_N]    Script Date: 14/01/2020 12:41:31 ******/

ALTER VIEW [dbo].[VW_Movimientos_N]
AS
SELECT        pr.nombre_comercial AS Propietario, p.nombre AS Producto, pp.nombre AS Presentación, pe1.nombre AS EstadoOrigen, pe2.nombre AS EstadoDestino, u.Nombre AS UMBas, m.cantidad, m.peso, m.lote, 
                         u1.descripcion AS UbicOrigen, u2.descripcion AS UbicDestino, stt.Nombre AS TipoTarea, m.fecha, p.IdProducto, p.codigo, p.codigo_barra AS CodigoBarra, stt.IdTipoTarea, stt.Contabilizar, m.fecha_vence, 
                         pr.IdTipoActualizacionCosto, m.IdPresentacion, m.IdUnidadMedida, m.IdEstadoOrigen, m.IdProductoBodega, prb.IdPropietarioBodega, prb.IdBodega, m.barra_pallet, dbo.producto_clasificacion.nombre AS Clasificacion, 
                         dbo.producto_familia.nombre AS Familia, m.IdBodegaOrigen, m.IdBodegaDestino, bodega_1.codigo AS Codigo_Bodega_Destino, bodega_1.nombre AS Nombre_Bodega_Destino, m.IdMovimiento, 
                         dbo.bodega.codigo AS Codigo_Bodega_Origen, dbo.bodega.nombre AS Nombre_Bodega_Origen
FROM            dbo.trans_movimientos AS m LEFT OUTER JOIN
                         dbo.propietario_bodega AS prb ON m.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.producto_bodega AS pb ON m.IdProductoBodega = pb.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON pb.IdProducto = p.IdProducto INNER JOIN
                         dbo.producto_clasificacion ON pr.IdPropietario = dbo.producto_clasificacion.IdPropietario AND p.IdClasificacion = dbo.producto_clasificacion.IdClasificacion INNER JOIN
                         dbo.producto_familia ON pr.IdPropietario = dbo.producto_familia.IdPropietario AND p.IdFamilia = dbo.producto_familia.IdFamilia LEFT OUTER JOIN
                         dbo.bodega ON m.IdBodegaOrigen = dbo.bodega.IdBodega AND m.IdEmpresa = dbo.bodega.IdEmpresa LEFT OUTER JOIN
                         dbo.bodega AS bodega_1 ON m.IdEmpresa = bodega_1.IdEmpresa AND m.IdBodegaDestino = bodega_1.IdBodega LEFT OUTER JOIN
                         dbo.bodega_ubicacion AS u2 ON m.IdUbicacionDestino = u2.IdUbicacion AND u2.IdBodega = m.IdBodegaDestino LEFT OUTER JOIN
                         dbo.bodega_ubicacion AS u1 ON m.IdUbicacionOrigen = u1.IdUbicacion AND u1.IdBodega = m.IdBodegaOrigen LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON m.IdPresentacion = pp.IdPresentacion AND p.IdProducto = pp.IdProducto LEFT OUTER JOIN
                         dbo.producto_estado AS pe1 ON m.IdEstadoOrigen = pe1.IdEstado AND pe1.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.producto_estado AS pe2 ON m.IdEstadoDestino = pe2.IdEstado AND pe2.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.unidad_medida AS u ON m.IdUnidadMedida = u.IdUnidadMedida AND u.IdPropietario = pr.IdPropietario LEFT OUTER JOIN
                         dbo.sis_tipo_tarea AS stt ON m.IdTipoTarea = stt.IdTipoTarea
GO


/****** Object:  View [dbo].[NCL_Trans_re_Det_20200115_EJC]    Script Date: 15/01/2020 09:09:31 ******/

CREATE NONCLUSTERED INDEX NCL_Trans_re_Det_20200115_EJC
ON [dbo].[trans_re_det] ([IdProductoBodega])
INCLUDE ([IdPresentacion],[IdUnidadMedida],[IdProductoEstado],[cantidad_recibida],[lic_plate])


CREATE NONCLUSTERED INDEX NCL_trans_re_det_rep_20200115_ejc
ON [dbo].[trans_re_det] ([IdRecepcionEnc])
INCLUDE ([No_Linea],[nombre_producto],[nombre_presentacion],[nombre_unidad_medida],[nombre_producto_estado],[lote],[fecha_vence],[fec_agr],[observacion],[codigo_producto],[lic_plate])
GO

CREATE NONCLUSTERED INDEX NCL_Proveedor_Bodega_20200115_EJC
ON [dbo].[proveedor_bodega] ([IdBodega])
INCLUDE ([IdProveedor])
GO

ALTER VIEW [dbo].[VW_Recepcion_Det]
AS
SELECT        TOP (100) PERCENT dbo.trans_re_enc.IdRecepcionEnc, dbo.trans_re_enc.IdPropietarioBodega, dbo.propietarios.nombre_comercial AS Propietario, dbo.proveedor.nombre AS Proveedor, dbo.bodega.codigo AS Bodega, 
                         dbo.trans_re_oc.IdOrdenCompraEnc, dbo.trans_oc_enc.No_Documento AS No_DocumentoOC, dbo.trans_oc_enc.Referencia, dbo.trans_re_enc.fecha_recepcion AS Fecha, dbo.trans_re_enc.estado AS Estado, 
                         dbo.trans_re_tr.TipoTrans, dbo.trans_re_tr.Descripcion, dbo.trans_re_enc.activo AS Activo, dbo.usuario.nombres AS Usuario_Agrego, dbo.trans_re_enc.fec_agr AS Fecha_Agrego, dbo.trans_re_det.IdRecepcionDet, 
                         dbo.trans_re_det.No_Linea, dbo.trans_re_det.codigo_producto AS Código, dbo.trans_re_det.nombre_producto AS Nombre, dbo.trans_re_det.nombre_unidad_medida AS UM, 
                         dbo.trans_re_det.nombre_presentacion AS Presentación, dbo.trans_re_det.nombre_producto_estado AS Estado_Producto, dbo.trans_re_det.lote AS Lote, dbo.trans_re_det.fecha_vence AS Vence, 
                         dbo.trans_re_det.lic_plate AS Lic_Plate, dbo.trans_re_det.observacion AS Obs, dbo.trans_re_det.fec_agr AS Fec_Agr, dbo.trans_re_det.cantidad_recibida AS Recibido
FROM            dbo.proveedor_bodega INNER JOIN
                         dbo.trans_oc_enc INNER JOIN
                         dbo.trans_re_oc ON dbo.trans_oc_enc.IdOrdenCompraEnc = dbo.trans_re_oc.IdOrdenCompraEnc ON dbo.proveedor_bodega.IdAsignacion = dbo.trans_oc_enc.IdProveedorBodega INNER JOIN
                         dbo.proveedor ON dbo.proveedor_bodega.IdProveedor = dbo.proveedor.IdProveedor RIGHT OUTER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.propietario_bodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario INNER JOIN
                         dbo.bodega ON dbo.propietario_bodega.IdBodega = dbo.bodega.IdBodega RIGHT OUTER JOIN
                         dbo.trans_re_tr INNER JOIN
                         dbo.trans_re_enc INNER JOIN
                         dbo.trans_re_det ON dbo.trans_re_enc.IdRecepcionEnc = dbo.trans_re_det.IdRecepcionEnc ON dbo.trans_re_enc.IdTipoTransaccion = dbo.trans_re_tr.IdTipoTransaccion INNER JOIN
                         dbo.usuario ON dbo.usuario.IdUsuario = dbo.trans_re_enc.user_agr ON dbo.propietario_bodega.IdPropietarioBodega = dbo.trans_re_enc.IdPropietarioBodega ON 
                         dbo.trans_re_oc.IdRecepcionEnc = dbo.trans_re_enc.IdRecepcionEnc
GROUP BY dbo.trans_re_enc.IdRecepcionEnc, dbo.propietarios.nombre_comercial, dbo.proveedor.nombre, dbo.bodega.codigo, dbo.trans_re_oc.IdOrdenCompraEnc, dbo.trans_oc_enc.No_Documento, dbo.trans_oc_enc.Referencia, 
                         dbo.trans_re_enc.fecha_recepcion, dbo.trans_re_enc.estado, dbo.trans_re_tr.TipoTrans, dbo.trans_re_tr.Descripcion, dbo.trans_re_enc.activo, dbo.usuario.nombres, dbo.trans_re_enc.IdPropietarioBodega, 
                         dbo.trans_re_enc.fec_agr, dbo.trans_re_det.IdRecepcionDet, dbo.trans_re_det.No_Linea, dbo.trans_re_det.codigo_producto, dbo.trans_re_det.nombre_producto, dbo.trans_re_det.nombre_unidad_medida, 
                         dbo.trans_re_det.nombre_presentacion, dbo.trans_re_det.nombre_producto_estado, dbo.trans_re_det.lote, dbo.trans_re_det.fecha_vence, dbo.trans_re_det.lic_plate, dbo.trans_re_det.observacion, dbo.trans_re_det.fec_agr, 
                         dbo.trans_re_det.cantidad_recibida
GO

ALTER VIEW [dbo].[VW_ExistenciasPorNoDocumento]
AS
SELECT        dbo.trans_re_enc.IdRecepcionEnc, dbo.propietarios.nombre_comercial AS Propietario, dbo.proveedor.nombre AS Proveedor, dbo.bodega.nombre AS Bodega, dbo.trans_re_oc.IdOrdenCompraEnc, 
                         dbo.trans_oc_enc.No_Documento AS No_DocumentoOC, dbo.trans_re_oc.no_docto AS No_DocumentoRec, dbo.trans_oc_enc.Referencia AS ReferenciaOC, dbo.trans_re_enc.fecha_recepcion AS Fecha, dbo.trans_re_enc.estado, 
                         dbo.trans_re_tr.TipoTrans, dbo.trans_re_tr.Descripcion, dbo.bodega_muelles.nombre AS Muelle, dbo.trans_re_enc.activo, dbo.usuario.nombres AS Usuario_Agrego, dbo.trans_re_enc.fec_agr AS Fecha_Agrego, 
                         dbo.producto.codigo AS CodigoProd, dbo.producto.codigo_barra AS BarraProd, dbo.producto.nombre AS NombreProd, dbo.trans_re_det.cantidad_recibida AS Recibido, dbo.stock.cantidad AS Existencia_Actual_UMBas, 
                         CASE WHEN dbo.stock.IdPresentacion <> 0 THEN dbo.stock.cantidad / dbo.producto_presentacion.factor ELSE dbo.stock.cantidad END AS Existencia_Actual_Pres, dbo.unidad_medida.Nombre AS UM, 
                         dbo.producto_estado.nombre AS EstadoProd, dbo.producto_presentacion.nombre AS PresProd, dbo.trans_re_det.lic_plate, dbo.producto_presentacion.factor, dbo.stock.lote AS Lote, dbo.stock.fecha_vence AS Vence, 
                         dbo.stock.IdStock,
						  CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) 
                         + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
                         bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) + ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), 
                         bodega_ubicacion.IdUbicacion) ELSE bodega_tramo.descripcion END AS Ubicacion_Origen
FROM            dbo.bodega_tramo INNER JOIN
                         dbo.trans_re_det INNER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.bodega_muelles INNER JOIN
                         dbo.bodega ON dbo.bodega_muelles.IdBodega = dbo.bodega.IdBodega ON dbo.producto_bodega.IdBodega = dbo.bodega.IdBodega ON dbo.trans_re_det.IdProductoBodega = dbo.producto_bodega.IdProductoBodega INNER JOIN
                         dbo.producto ON dbo.producto_bodega.IdProducto = dbo.producto.IdProducto INNER JOIN
                         dbo.unidad_medida ON dbo.trans_re_det.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida AND dbo.producto.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida INNER JOIN
                         dbo.producto_estado ON dbo.trans_re_det.IdProductoEstado = dbo.producto_estado.IdEstado INNER JOIN
                         dbo.trans_re_tr INNER JOIN
                         dbo.usuario INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.propietario_bodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario INNER JOIN
                         dbo.trans_re_enc ON dbo.propietario_bodega.IdPropietarioBodega = dbo.trans_re_enc.IdPropietarioBodega ON dbo.usuario.IdUsuario = dbo.trans_re_enc.user_agr ON 
                         dbo.trans_re_tr.IdTipoTransaccion = dbo.trans_re_enc.IdTipoTransaccion ON dbo.trans_re_det.IdRecepcionEnc = dbo.trans_re_enc.IdRecepcionEnc AND dbo.bodega_muelles.IdMuelle = dbo.trans_re_enc.IdMuelle INNER JOIN
                         dbo.trans_re_oc INNER JOIN
                         dbo.trans_oc_enc ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc INNER JOIN
                         dbo.proveedor_bodega ON dbo.trans_oc_enc.IdProveedorBodega = dbo.proveedor_bodega.IdAsignacion INNER JOIN
                         dbo.proveedor ON dbo.proveedor_bodega.IdProveedor = dbo.proveedor.IdProveedor ON dbo.trans_re_enc.IdRecepcionEnc = dbo.trans_re_oc.IdRecepcionEnc INNER JOIN
                         dbo.stock ON dbo.trans_re_det.IdProductoBodega = dbo.stock.IdProductoBodega AND dbo.trans_re_det.IdRecepcionEnc = dbo.stock.IdRecepcionEnc AND 
                         dbo.trans_re_det.IdRecepcionDet = dbo.stock.IdRecepcionDet INNER JOIN
                         dbo.bodega_ubicacion ON dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.stock.IdBodega = dbo.bodega_ubicacion.IdBodega ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo AND 
                         dbo.bodega_tramo.IdBodega = dbo.bodega_ubicacion.IdBodega AND dbo.bodega_tramo.IdArea = dbo.bodega_ubicacion.IdArea INNER JOIN
                         dbo.bodega_sector INNER JOIN
                         dbo.bodega_area ON dbo.bodega_sector.IdArea = dbo.bodega_area.IdArea AND dbo.bodega_sector.IdBodega = dbo.bodega_area.IdBodega ON dbo.bodega_tramo.IdSector = dbo.bodega_sector.IdSector AND 
                         dbo.bodega_tramo.IdBodega = dbo.bodega_sector.IdBodega AND dbo.bodega_tramo.IdArea = dbo.bodega_sector.IdArea LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.trans_re_det.IdPresentacion = dbo.producto_presentacion.IdPresentacion AND dbo.producto.IdProducto = dbo.producto_presentacion.IdProducto
GO


CREATE NONCLUSTERED INDEX NCLI_Stock_20200115_EJC
ON [dbo].[stock] ([IdProductoBodega])
INCLUDE ([IdBodega],[IdPresentacion],[IdRecepcionEnc],[IdRecepcionDet],[lote],[cantidad],[fecha_vence])

CREATE NONCLUSTERED INDEX NCL_Producto_20200115_ejc
ON [dbo].[producto] ([IdUnidadMedidaBasica])
INCLUDE ([codigo],[nombre],[codigo_barra])

alter table stock
  add constraint Stock_NonNegative_20200115_EJC
      check (Cantidad > 0)
      
CREATE NONCLUSTERED INDEX NCLI_Proveedor_20200120_EJC
ON [dbo].[proveedor] ([IdPropietario])
INCLUDE ([nombre])

/****** Object:  View [dbo].[VW_Recepcion_Det]    Script Date: 20/01/2020 11:04:53 ******/

ALTER VIEW [dbo].[VW_Recepcion_Det]
AS
SELECT dbo.producto_bodega.IdBodega, dbo.trans_re_det.IdRecepcionEnc, dbo.propietarios.nombre_comercial AS Propietario, dbo.bodega.codigo AS Codigo_Bodega,
                         dbo.trans_oc_enc.IdOrdenCompraEnc, dbo.proveedor.codigo AS Codigo_Proveedor, dbo.proveedor.nombre AS Nombre_Proveedor, dbo.trans_oc_enc.No_Documento AS No_DocumentoOC, 
                         dbo.trans_oc_enc.Referencia AS ReferenciaOC, dbo.trans_re_enc.fecha_recepcion AS Fecha, dbo.trans_re_enc.estado, dbo.trans_re_tr.TipoTrans, dbo.trans_re_tr.Descripcion, dbo.trans_re_enc.activo AS Activo, 
                         dbo.usuario.nombres AS Usuario_Agrego, dbo.trans_re_enc.fec_agr AS Fecha_Agrego, dbo.producto.codigo AS CodigoProd, dbo.producto.codigo_barra AS BarraProd, dbo.producto.nombre AS NombreProd, 
                         dbo.trans_re_det.cantidad_recibida AS Recibido, dbo.unidad_medida.Nombre AS UM, dbo.producto_estado.nombre AS EstadoProd, dbo.producto_presentacion.nombre AS PresProd, dbo.trans_re_det.lic_plate
FROM            dbo.producto INNER JOIN
                         dbo.trans_re_det INNER JOIN
                         dbo.producto_bodega INNER JOIN
                         dbo.bodega ON dbo.producto_bodega.IdBodega = dbo.bodega.IdBodega INNER JOIN
                         dbo.propietarios INNER JOIN
                         dbo.propietario_bodega ON dbo.propietarios.IdPropietario = dbo.propietario_bodega.IdPropietario ON dbo.bodega.IdBodega = dbo.propietario_bodega.IdBodega ON 
                         dbo.trans_re_det.IdProductoBodega = dbo.producto_bodega.IdProductoBodega ON dbo.producto.IdProducto = dbo.producto_bodega.IdProducto INNER JOIN
                         dbo.unidad_medida ON dbo.trans_re_det.IdUnidadMedida = dbo.unidad_medida.IdUnidadMedida INNER JOIN
                         dbo.producto_estado ON dbo.trans_re_det.IdProductoEstado = dbo.producto_estado.IdEstado LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.trans_re_det.IdPresentacion = dbo.producto_presentacion.IdPresentacion LEFT OUTER JOIN
                         dbo.trans_re_enc INNER JOIN
                         dbo.trans_re_oc ON dbo.trans_re_enc.IdRecepcionEnc = dbo.trans_re_oc.IdRecepcionEnc INNER JOIN
                         dbo.proveedor_bodega INNER JOIN
                         dbo.trans_oc_enc ON dbo.proveedor_bodega.IdAsignacion = dbo.trans_oc_enc.IdProveedorBodega INNER JOIN
                         dbo.proveedor ON dbo.proveedor_bodega.IdProveedor = dbo.proveedor.IdProveedor ON dbo.trans_re_oc.IdOrdenCompraEnc = dbo.trans_oc_enc.IdOrdenCompraEnc INNER JOIN
                         dbo.trans_re_tr ON dbo.trans_re_enc.IdTipoTransaccion = dbo.trans_re_tr.IdTipoTransaccion INNER JOIN
                         dbo.usuario ON dbo.trans_re_enc.user_agr = dbo.usuario.IdUsuario ON dbo.trans_re_det.IdRecepcionEnc = dbo.trans_re_enc.IdRecepcionEnc AND dbo.trans_re_det.IdRecepcionEnc = dbo.trans_re_oc.IdRecepcionEnc
GO


/****** Object:  View [dbo].[VW_OcupacionBodega]    Script Date: 22/01/2020 03:11:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[VW_OcupacionBodega]
AS
SELECT        dbo.bodega_ubicacion.IdUbicacion, dbo.bodega_ubicacion.IdBodega, ISNULL(dbo.stock.IdStock, 0) AS IdStock
FROM            dbo.stock INNER JOIN
                         dbo.producto_bodega ON dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega AND dbo.stock.IdProductoBodega = dbo.producto_bodega.IdProductoBodega RIGHT OUTER JOIN
                         dbo.bodega INNER JOIN
                         dbo.bodega_area ON dbo.bodega.IdBodega = dbo.bodega_area.IdBodega INNER JOIN
                         dbo.bodega_sector ON dbo.bodega_area.IdArea = dbo.bodega_sector.IdArea AND dbo.bodega_area.IdBodega = dbo.bodega_sector.IdBodega INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_sector.IdSector = dbo.bodega_tramo.IdSector AND dbo.bodega_sector.IdBodega = dbo.bodega_tramo.IdBodega INNER JOIN
                         dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo AND dbo.bodega_tramo.IdSector = dbo.bodega_ubicacion.IdSector AND dbo.bodega_tramo.IdArea = dbo.bodega_ubicacion.IdArea AND 
                         dbo.bodega_tramo.IdBodega = dbo.bodega_ubicacion.IdBodega ON dbo.stock.IdBodega = dbo.bodega_ubicacion.IdBodega AND dbo.stock.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND 
                         dbo.producto_bodega.IdBodega = dbo.bodega.IdBodega
GO


//Delete para opciones no utilizadas.
delete from menu_sistema where Titulo in('Turno Laboral','Jornada Laboral','Horario Laboral','Letra',
'Serie documentos','Control Montacarga','Falla Montacarga','Vendedor Road','Vendedor Ruta','Tipo Tarima',
'Tipo Contenedor','Tarima','Tipo Etiqueta','Tareas de pre ingreso principal','Tareas de pre ingreso','Minimos y Maximos','Pendientes de Requisicion','Generador de Tableros')

Delete from menu_rol  where idmenu in(select IdMenu from menu_sistema where Titulo in('Turno Laboral','Jornada Laboral','Horario Laboral','Letra',
'Serie documentos','Control Montacarga','Falla Montacarga','Vendedor Road','Vendedor Ruta','Tipo Tarima',
'Tipo Contenedor','Tarima','Tipo Etiqueta','Tareas de pre ingreso principal','Tareas de pre ingreso','Minimos y Maximos','Pendientes de Requisicion','Generador de Tableros')) 

ALTER TABLE TRANS_PICKING_ENC ADD procesado_bof BIT DEFAULT 0

UPDATE trans_picking_enc SET procesado_bof = 1 WHERE DATEDIFF(MINUTE,hora_ini,HORA_FIN) <=1
UPDATE trans_picking_enc SET procesado_bof = 0 where procesado_bof IS NULL

ALTER VIEW [dbo].[VW_Picking]
AS
SELECT        enc.IdPickingEnc AS Código, b.nombre AS Bodega, p.nombre_comercial AS Propietario, bu.descripcion AS [Ubicación Picking], enc.estado, enc.detalle_operador AS [Detalle Operador], CONVERT(char(5), enc.hora_ini, 108) 
                         AS [Hora Inicial], CONVERT(char(5), enc.hora_fin, 108) AS [Hora Final], 
						 case when procesado_bof = 1
						then 
						'00:00'
						else
						CONVERT(char(5), hora_fin - hora_ini, 108)
						end as Duracion_Minutos ,
						 enc.fecha_picking AS [Fecha Picking], enc.activo, enc.IdBodega, enc.procesado_bof as Procesado_Bof
FROM            dbo.trans_picking_enc AS enc INNER JOIN
                         dbo.propietario_bodega AS pb ON enc.IdPropietarioBodega = pb.IdPropietarioBodega INNER JOIN
                         dbo.propietarios AS p ON pb.IdPropietario = p.IdPropietario INNER JOIN
                         dbo.bodega AS b ON enc.IdBodega = b.IdBodega INNER JOIN
                         dbo.bodega_ubicacion AS bu ON enc.IdUbicacionPicking = bu.IdUbicacion AND enc.IdBodega = bu.IdBodega
GO


ALTER TABLE TRANS_PICKING_UBIC ADD idpickingenc int DEFAULT 0

UPDATE s
SET s.IdPickingEnc = pd.IdPickingEnc
FROM trans_picking_ubic s
INNER JOIN trans_picking_det pd
ON s.IdPickingdet = pd.IdPickingdet

ALTER TABLE Trans_Picking_Ubic ADD IdOperadorBodega int null

ALTER VIEW [dbo].[VW_PickingUbicacion]
AS
SELECT        penc.IdPedidoEnc AS Pedido, d.IdPickingEnc AS [ID Picking], p.codigo AS Código, p.nombre AS Producto, pp.nombre AS Presentación, pe.nombre AS Estado, um.Nombre AS [Unidad Medida], b.descripcion AS Ubicación, 
                         pdet.Cantidad AS Solicitado, d.cantidad_recibida AS Picking, u.cantidad_verificada AS Verificado, penc.Fecha_Pedido AS [Fecha Pedido], enc.fecha_picking AS [Fecha Picking], u.fecha_vence AS Vence, u.activo, u.IdPickingUbic, 
                         enc.IdPropietarioBodega, pdet.IdProductoBodega, pdet.IdEstado, pdet.IdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdPedidoDet
FROM            dbo.trans_picking_ubic AS u INNER JOIN
                         dbo.trans_picking_det AS d ON u.IdPickingDet = d.IdPickingDet INNER JOIN
                         dbo.bodega_ubicacion AS b ON u.IdUbicacion = b.IdUbicacion AND u.IdBodega = b.IdBodega INNER JOIN
                         dbo.trans_picking_enc AS enc ON d.IdPickingEnc = enc.IdPickingEnc INNER JOIN
                         dbo.propietario_bodega AS prb ON enc.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario INNER JOIN
                         dbo.trans_pe_det AS pdet ON d.IdPedidoDet = pdet.IdPedidoDet INNER JOIN
                         dbo.trans_pe_enc AS penc ON pdet.IdPedidoEnc = penc.IdPedidoEnc INNER JOIN
                         dbo.producto_bodega AS pb ON pdet.IdProductoBodega = pb.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON pb.IdProducto = p.IdProducto LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON pdet.IdPresentacion = pp.IdPresentacion LEFT OUTER JOIN
                         dbo.producto_estado AS pe ON pdet.IdEstado = pe.IdEstado INNER JOIN
                         dbo.unidad_medida AS um ON pdet.IdUnidadMedidaBasica = um.IdUnidadMedida
GO

/****** Object:  View [dbo].[VW_PickingUbic_Despachado_By_IdPedidoDet]    Script Date: 25/01/2020 09:20:02 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[VW_PickingUbic_Despachado_By_IdPedidoDet]
AS
SELECT        dbo.trans_despacho_det.IdDespachoEnc, dbo.trans_pe_det.IdPedidoEnc, dbo.trans_picking_ubic.IdPedidoDet, dbo.trans_picking_ubic.IdPickingEnc, dbo.trans_picking_ubic.IdPickingUbic, dbo.producto.codigo, 
                         dbo.producto.nombre, dbo.producto_presentacion.nombre AS Presentacion, dbo.producto_estado.nombre AS NomEstado, dbo.unidad_medida.Nombre AS UnidadMedida, dbo.propietarios.nombre_comercial AS Propietario, 
                         dbo.trans_picking_ubic.cantidad_solicitada, dbo.trans_picking_ubic.IdStock, dbo.trans_picking_ubic.IdProductoBodega, dbo.trans_picking_ubic.IdUbicacion, dbo.trans_picking_ubic.IdProductoEstado, 
                         dbo.trans_picking_ubic.IdPresentacion, dbo.trans_picking_ubic.IdUnidadMedida, dbo.trans_picking_ubic.lote, dbo.trans_picking_ubic.fecha_vence, dbo.trans_picking_ubic.lic_plate, dbo.trans_picking_ubic.serial, 
                         dbo.trans_picking_ubic.peso_solicitado, dbo.trans_picking_ubic.cantidad_recibida, dbo.trans_picking_ubic.cantidad_verificada, dbo.trans_picking_ubic.cantidad_despachada, dbo.trans_picking_ubic.peso_recibido, 
                         dbo.trans_picking_ubic.peso_verificado, dbo.trans_picking_ubic.peso_despachado, dbo.trans_picking_ubic.acepto, dbo.trans_picking_ubic.encontrado, dbo.trans_picking_ubic.dañado_verificacion, 
                         dbo.trans_picking_ubic.IdPickingDet, dbo.trans_picking_ubic.IdPropietarioBodega, dbo.trans_picking_ubic.IdUbicacionAnterior, dbo.trans_picking_ubic.IdRecepcion, dbo.trans_picking_ubic.fecha_minima, 
                         dbo.trans_picking_ubic.fecha_real_vence, dbo.trans_picking_ubic.no_packing, dbo.trans_picking_ubic.fecha_picking, dbo.trans_picking_ubic.fecha_verificado, dbo.trans_picking_ubic.fecha_packing, 
                         dbo.trans_picking_ubic.fecha_despachado, dbo.trans_picking_ubic.user_agr, dbo.trans_picking_ubic.fec_agr, dbo.trans_picking_ubic.user_mod, dbo.trans_picking_ubic.fec_mod, dbo.trans_picking_ubic.activo, 
                         dbo.trans_picking_ubic.dañado_picking,
						 CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) 
                         + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
                         bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) + ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), 
                         bodega_ubicacion.IdUbicacion) ELSE bodega_tramo.descripcion + ' - ' + '#' + CONVERT(NVARCHAR(10), 
                         bodega_ubicacion.IdUbicacion) END AS Nombre_Ubicacion
FROM            dbo.trans_pe_det INNER JOIN
                         dbo.producto INNER JOIN
                         dbo.producto_bodega ON dbo.producto.IdProducto = dbo.producto_bodega.IdProducto ON dbo.trans_pe_det.IdProductoBodega = dbo.producto_bodega.IdProductoBodega INNER JOIN
                         dbo.producto_estado INNER JOIN
                         dbo.trans_picking_ubic ON dbo.producto_estado.IdEstado = dbo.trans_picking_ubic.IdProductoEstado INNER JOIN
                         dbo.propietario_bodega ON dbo.trans_picking_ubic.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega INNER JOIN
                         dbo.propietarios ON dbo.propietario_bodega.IdPropietario = dbo.propietarios.IdPropietario INNER JOIN
                         dbo.trans_despacho_det ON dbo.trans_picking_ubic.IdPickingUbic = dbo.trans_despacho_det.IdPickingUbic AND dbo.trans_picking_ubic.IdPedidoDet = dbo.trans_despacho_det.IdPedidoDet AND 
                         dbo.trans_picking_ubic.IdProductoBodega = dbo.trans_despacho_det.IdProductoBodega AND dbo.trans_picking_ubic.IdUnidadMedida = dbo.trans_despacho_det.IdUnidadMedidaBasica AND 
                         dbo.trans_picking_ubic.IdPresentacion = dbo.trans_despacho_det.IdPresentacion ON dbo.trans_pe_det.IdPedidoDet = dbo.trans_picking_ubic.IdPedidoDet AND 
                         dbo.trans_pe_det.IdProductoBodega = dbo.trans_picking_ubic.IdProductoBodega AND dbo.trans_pe_det.IdUnidadMedidaBasica = dbo.trans_picking_ubic.IdUnidadMedida AND 
                         dbo.trans_pe_det.IdEstado = dbo.trans_picking_ubic.IdProductoEstado INNER JOIN
                         dbo.unidad_medida ON dbo.trans_pe_det.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida INNER JOIN
                         dbo.bodega_ubicacion ON dbo.trans_picking_ubic.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.trans_picking_ubic.IdBodega = dbo.bodega_ubicacion.IdBodega INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo AND dbo.bodega_ubicacion.IdBodega = dbo.bodega_tramo.IdBodega INNER JOIN
                         dbo.bodega_sector ON dbo.bodega_tramo.IdSector = dbo.bodega_sector.IdSector AND dbo.bodega_tramo.IdBodega = dbo.bodega_sector.IdBodega INNER JOIN
                         dbo.bodega_area ON dbo.bodega_sector.IdArea = dbo.bodega_area.IdArea AND dbo.bodega_sector.IdBodega = dbo.bodega_area.IdBodega LEFT OUTER JOIN
                         dbo.producto_presentacion ON dbo.trans_pe_det.IdPresentacion = dbo.producto_presentacion.IdPresentacion
GO


ALTER VIEW [dbo].[VW_Picking_Det_By_IdPickingEnc]
AS
SELECT        b.nombre AS Bodega, c.nombre_comercial AS Cliente, pr.nombre_comercial AS Propietario, penc.Fecha_Pedido, pcdet.IdPickingDet, pcdet.IdPickingEnc, pcdet.IdPedidoDet, pcdet.IdOperadorBodega, pcdet.cantidad, 
                         pcdet.cliente_dias, pcdet.cantidad_recibida, pcdet.user_agr, pcdet.fec_agr, pcdet.user_mod, pcdet.fec_mod, pcdet.activo, pcdet.IdPedidoEnc, p.IdProducto, pdet.IdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdEstado, 
                         dbo.producto_estado.nombre AS Nombre_Estado, dbo.producto_presentacion.nombre AS Nombre_Presentacion, dbo.unidad_medida.Nombre AS Nombre_Unidad_Medida
FROM            dbo.trans_picking_det AS pcdet INNER JOIN
                         dbo.trans_pe_det AS pdet ON pcdet.IdPedidoDet = pdet.IdPedidoDet INNER JOIN
                         dbo.trans_pe_enc AS penc ON pdet.IdPedidoEnc = penc.IdPedidoEnc INNER JOIN
                         dbo.propietario_bodega AS prb ON penc.IdPropietarioBodega = prb.IdPropietarioBodega INNER JOIN
                         dbo.propietarios AS pr ON prb.IdPropietario = pr.IdPropietario INNER JOIN
                         dbo.bodega AS b ON penc.IdBodega = b.IdBodega INNER JOIN
                         dbo.cliente AS c ON penc.IdCliente = c.IdCliente INNER JOIN
                         dbo.producto_bodega AS pb ON pdet.IdProductoBodega = pb.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON pb.IdProducto = p.IdProducto INNER JOIN
                         dbo.producto_estado ON pdet.IdEstado = dbo.producto_estado.IdEstado INNER JOIN
                         dbo.unidad_medida ON pdet.IdUnidadMedidaBasica = dbo.unidad_medida.IdUnidadMedida LEFT OUTER JOIN
                         dbo.producto_presentacion ON pdet.IdPresentacion = dbo.producto_presentacion.IdPresentacion
GO

alter table trans_picking_ubic add IdOperadorBodega_Pickeo int null
alter table trans_picking_ubic add IdOperadorBodega_Verifico int null

USE [IMS4MB_IDEALSA_PRD_07012020]
GO


/****** Object:  View [dbo].[VW_PickingUbic_By_IdPickingEnc]    Script Date: 25/01/2020 10:57:05 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[VW_PickingUbic_By_IdPickingEnc]
AS
SELECT        pu.IdPickingEnc, pu.IdPickingUbic, pu.IdPickingDet, pu.IdUbicacion, pu.IdStock, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdUbicacionAnterior, 
                         pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, pu.serial, pu.lic_plate, pu.acepto, pu.peso_solicitado, pu.peso_recibido, pu.peso_verificado, pu.peso_despachado, pu.cantidad_solicitada, pu.cantidad_recibida, 
                         pu.cantidad_verificada, pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, 
                         pu.fec_agr, pu.user_mod, pu.fec_mod, pu.activo, pu.IdPedidoDet, pu.dañado_picking, pu.IdStockRes, pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, pdet.IdPedidoEnc, pdet.IdPedidoDet AS Expr1, 
                         pdet.IdPresentacion AS Expr2, pdet.IdUnidadMedidaBasica, pdet.IdProductoBodega AS Expr3, pdet.codigo_producto, pdet.nombre_producto, pdet.nom_presentacion, pdet.nom_unid_med, pdet.nom_estado, pdet.IdEstado, 
                         pdet.Peso, pdet.Precio, sr.IdStockRes AS Sr_IdStockRes, sr.IdStock AS Sr_IdStock, pu.IdBodega,
						 pu.IdOperadorBodega_Pickeo, pu.IdOperadorBodega_Verifico
						 ,
                                    CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, 
                                    iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
                                    bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
                                    bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
                                    + ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
                                    ELSE bodega_tramo.descripcion + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) END AS NombreUbicacion
FROM            dbo.bodega_sector INNER JOIN
                         dbo.bodega_area ON dbo.bodega_sector.IdArea = dbo.bodega_area.IdArea AND dbo.bodega_sector.IdBodega = dbo.bodega_area.IdBodega INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_sector.IdSector = dbo.bodega_tramo.IdSector AND dbo.bodega_sector.IdBodega = dbo.bodega_tramo.IdBodega INNER JOIN
                         dbo.bodega_ubicacion ON dbo.bodega_tramo.IdTramo = dbo.bodega_ubicacion.IdTramo AND dbo.bodega_tramo.IdBodega = dbo.bodega_ubicacion.IdBodega INNER JOIN
                         dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND pu.IdBodega = dbo.bodega_ubicacion.IdBodega INNER JOIN
                         dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet AND pkdet.IdPickingEnc = pu.IdPickingEnc INNER JOIN
                         dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
                         dbo.stock_res AS sr ON pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes AND pu.IdPropietarioBodega = sr.IdPropietarioBodega AND pu.IdProductoBodega = sr.IdProductoBodega AND 
                         pu.IdPedidoDet = sr.IdPedidoDet INNER JOIN
                         dbo.bodega ON dbo.bodega_area.IdBodega = dbo.bodega.IdBodega INNER JOIN
                         dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc
GO



CREATE VIEW [dbo].[VW_Get_Single_Pedido]
AS
SELECT        dbo.trans_pe_enc.IdPedidoEnc, dbo.trans_pe_enc.IdBodega, dbo.trans_pe_enc.IdCliente, dbo.trans_pe_enc.IdMuelle, dbo.trans_pe_enc.IdPropietarioBodega, dbo.trans_pe_enc.IdTipoPedido, dbo.trans_pe_enc.IdPickingEnc, 
                         dbo.trans_pe_enc.Fecha_Pedido, dbo.trans_pe_enc.hora_ini, dbo.trans_pe_enc.hora_fin, dbo.trans_pe_enc.ubicacion, dbo.trans_pe_enc.estado, dbo.trans_pe_enc.no_despacho, dbo.trans_pe_enc.activo, 
                         dbo.trans_pe_enc.user_agr, dbo.trans_pe_enc.fec_agr, dbo.trans_pe_enc.user_mod, dbo.trans_pe_enc.fec_mod, dbo.trans_pe_enc.no_documento, dbo.trans_pe_enc.local, dbo.trans_pe_enc.pallet_primero, 
                         dbo.trans_pe_enc.dias_cliente, dbo.trans_pe_enc.anulado, dbo.trans_pe_enc.RoadKilometraje, dbo.trans_pe_enc.RoadFechaEntr, dbo.trans_pe_enc.RoadDirEntrega, dbo.trans_pe_enc.RoadTotal, 
                         dbo.trans_pe_enc.RoadDesMonto, dbo.trans_pe_enc.RoadImpMonto, dbo.trans_pe_enc.RoadPeso, dbo.trans_pe_enc.RoadBandera, dbo.trans_pe_enc.RoadStatCom, dbo.trans_pe_enc.RoadCalcoBJ, 
                         dbo.trans_pe_enc.RoadImpres, dbo.trans_pe_enc.RoadADD1, dbo.trans_pe_enc.RoadADD2, dbo.trans_pe_enc.RoadADD3, dbo.trans_pe_enc.RoadStatProc, dbo.trans_pe_enc.RoadRechazado, 
                         dbo.trans_pe_enc.RoadRazon_Rechazado, dbo.trans_pe_enc.RoadInformado, dbo.trans_pe_enc.RoadSucursal, dbo.trans_pe_enc.RoadIdDespacho, dbo.trans_pe_enc.RoadIdFacturacion, dbo.trans_pe_enc.RoadIdRuta, 
                         dbo.trans_pe_enc.RoadIdVendedor, dbo.trans_pe_enc.RoadIdRutaDespacho, dbo.trans_pe_enc.RoadIdVendedorDespacho, dbo.trans_pe_enc.Observacion, dbo.trans_pe_enc.PedidoRoad, dbo.trans_pe_enc.HoraEntregaDesde, 
                         dbo.trans_pe_enc.HoraEntregaHasta, dbo.trans_pe_enc.referencia, dbo.trans_pe_enc.IdMotivoAnulacionBodega, dbo.trans_pe_enc.Enviado_A_ERP, dbo.trans_pe_enc.control_ultimo_lote, dbo.trans_pe_enc.serie, 
                         dbo.trans_pe_enc.correlativo, dbo.trans_pe_enc.Referencia_Documento_Ingreso_Bodega_Destino, dbo.trans_pe_enc.sync_mi3, dbo.trans_pe_tipo.Nombre AS Nombre_Tipo_Pedido, 
                         dbo.cliente.nombre_comercial AS Nombre_Cliente, dbo.propietarios.nombre_comercial AS Nombre_Propietario, dbo.propietario_bodega.IdPropietario
FROM            dbo.trans_pe_enc INNER JOIN
                         dbo.cliente ON dbo.trans_pe_enc.IdCliente = dbo.cliente.IdCliente INNER JOIN
                         dbo.propietario_bodega ON dbo.trans_pe_enc.IdPropietarioBodega = dbo.propietario_bodega.IdPropietarioBodega INNER JOIN
                         dbo.trans_pe_tipo ON dbo.trans_pe_enc.IdTipoPedido = dbo.trans_pe_tipo.IdTipoPedido INNER JOIN
                         dbo.propietarios ON dbo.propietario_bodega.IdPropietario = dbo.propietarios.IdPropietario
GO

ALTER VIEW [dbo].[VW_PickingUbic_By_IdPickingDet]
AS
SELECT        bu.descripcion AS Ubicacion, u.IdPickingUbic, u.IdPickingDet, u.IdUbicacion, u.IdStock, u.IdPropietarioBodega, u.IdProductoBodega, u.IdProductoEstado, u.IdPresentacion, u.IdUnidadMedida, u.IdUbicacionAnterior, 
                         u.IdRecepcion, u.lote, u.fecha_vence, u.fecha_minima, u.serial, u.lic_plate, u.acepto, u.peso_solicitado, u.peso_recibido, u.peso_verificado, u.peso_despachado, u.cantidad_solicitada, u.cantidad_recibida, 
                         u.cantidad_verificada, u.encontrado, u.dañado_verificacion, u.fecha_real_vence, u.no_packing, u.fecha_picking, u.fecha_verificado, u.fecha_packing, u.fecha_despachado, u.cantidad_despachada, u.user_agr, u.fec_agr, 
                         u.user_mod, u.fec_mod, u.activo, u.IdPedidoDet, u.dañado_picking, u.IdStockRes, u.lic_plate_reemplazo, u.IdUbicacion_reemplazo, u.IdStock_reemplazo, u.IdBodega, u.IdPickingEnc, u.IdOperadorBodega_Pickeo, 
                         u.IdOperadorBodega_Verifico, dbo.operador.nombres AS Nombre_Operador_Pickeo, operador_1.nombres AS Nombre_Operador_Verifico
FROM            dbo.operador_bodega AS operador_bodega_1 INNER JOIN
                         dbo.operador AS operador_1 ON operador_bodega_1.IdOperador = operador_1.IdOperador RIGHT OUTER JOIN
                         dbo.operador INNER JOIN
                         dbo.operador_bodega ON dbo.operador.IdOperador = dbo.operador_bodega.IdOperador RIGHT OUTER JOIN
                         dbo.trans_picking_ubic AS u INNER JOIN
                         dbo.bodega_ubicacion AS bu ON u.IdUbicacion = bu.IdUbicacion AND u.IdBodega = bu.IdBodega INNER JOIN
                         dbo.bodega ON bu.IdBodega = dbo.bodega.IdBodega INNER JOIN
                         dbo.trans_picking_enc ON dbo.bodega.IdBodega = dbo.trans_picking_enc.IdBodega INNER JOIN
                         dbo.trans_picking_det ON u.IdPickingDet = dbo.trans_picking_det.IdPickingDet AND dbo.trans_picking_det.IdPickingEnc = u.IdPickingEnc AND dbo.trans_picking_enc.IdPickingEnc = dbo.trans_picking_det.IdPickingEnc ON 
                         dbo.operador_bodega.IdOperadorBodega = u.IdOperadorBodega_Pickeo ON operador_bodega_1.IdOperadorBodega = u.IdOperadorBodega_Verifico
GO

ALTER VIEW [dbo].[VW_PickingUbic_By_IdPedidoDet]
AS
SELECT        pu.IdPickingEnc, pu.IdStock, pu.IdPickingUbic, pu.IdPropietarioBodega, pu.IdUbicacion, pu.IdPickingDet, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdUbicacionAnterior, pu.IdRecepcion, 
                         pu.peso_solicitado, pu.peso_recibido, pu.peso_verificado, pu.cantidad_solicitada, pu.cantidad_recibida, pu.cantidad_verificada, pu.cantidad_despachada, pu.fecha_real_vence, pu.no_packing, pu.fecha_verificado, 
                         pu.fecha_despachado, pu.IdPedidoDet, pdet.IdPedidoEnc, pdet.IdPresentacion AS PDetIdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdProductoBodega AS PDetIdProductoBodega, pdet.codigo_producto, 
                         pdet.nombre_producto, pdet.nom_presentacion, pdet.nom_unid_med, pdet.nom_estado, pdet.IdEstado, pdet.Peso, pdet.Precio, sr.IdStockRes, sr.IdStock AS StockResIdStock, pu.peso_despachado, pu.lote, pu.fecha_vence, 
                         pu.fecha_picking, pu.fecha_packing, pu.fecha_minima, pu.serial, pu.lic_plate, pu.acepto, pu.encontrado, pu.dañado_verificacion, pu.activo, pu.fec_mod, pu.user_mod, pu.fec_agr, pu.user_agr, pu.dañado_picking,
						 pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.idstock_reemplazo, pu.IdBodega, pu.IdOperadorBodega_Pickeo, pu.IdOperadorBodega_Verifico
						  ,
                                    CASE WHEN bodega_tramo.es_rack = 1 THEN 'R' + RIGHT('00' + SUBSTRING(bodega_tramo.descripcion, 2, 
                                    iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 1, CHARINDEX('-', bodega_tramo.descripcion, 0) - 2)), 2) + ' - ' + 'C' + RIGHT('00' + CONVERT(NVARCHAR(10), 
                                    bodega_ubicacion.indice_x), 2) + ' - ' + 'T' + SUBSTRING(bodega_tramo.descripcion, iif(CHARINDEX('-', bodega_tramo.descripcion, 0) < 0, 0, CHARINDEX('-', 
                                    bodega_tramo.descripcion, 0) + 1), 1) + ' - ' + 'N' + RIGHT('00' + CONVERT(NVARCHAR(10), bodega_ubicacion.nivel), 2) 
                                    + ' - ' + 'Pos' + bodega_ubicacion.orientacion_pos + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) 
                                    ELSE bodega_tramo.descripcion + ' - ' + '#' + CONVERT(NVARCHAR(10), bodega_ubicacion.IdUbicacion) END AS Nombre_Ubicacion

FROM            dbo.trans_picking_ubic AS pu INNER JOIN
                         dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
                         dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
                         dbo.bodega_ubicacion ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND pu.IdBodega = dbo.bodega_ubicacion.IdBodega INNER JOIN
                         dbo.bodega_tramo ON dbo.bodega_ubicacion.IdTramo = dbo.bodega_tramo.IdTramo AND dbo.bodega_ubicacion.IdBodega = dbo.bodega_tramo.IdBodega INNER JOIN
                         dbo.bodega_sector ON dbo.bodega_tramo.IdSector = dbo.bodega_sector.IdSector AND dbo.bodega_tramo.IdBodega = dbo.bodega_sector.IdBodega INNER JOIN
                         dbo.bodega_area ON dbo.bodega_sector.IdArea = dbo.bodega_area.IdArea AND dbo.bodega_sector.IdBodega = dbo.bodega_area.IdBodega LEFT OUTER JOIN
                         dbo.stock_res AS sr ON pu.IdPropietarioBodega = sr.IdPropietarioBodega AND pu.IdStock = sr.IdStock AND pu.IdPedidoDet = sr.IdPedidoDet AND pu.IdProductoBodega = sr.IdProductoBodega AND 
                         pu.IdProductoEstado = sr.IdProductoEstado AND pu.IdUnidadMedida = sr.IdUnidadMedida AND pu.IdStockRes = sr.IdStockRes
GO

/****** Object:  View [dbo].[VW_PickingUbic_By_IdPickingEnc]    Script Date: 27/01/2020 10:57:05 ******/
ALTER TABLE BODEGA ADD Existencia_En_Unidades_Mixtas bit default 0

CREATE NONCLUSTERED INDEX NCLI_bodega_ubicacion_20200204_EJC
ON [dbo].[bodega_ubicacion] ([IdTramo],[IdBodega],[IdSector])
INCLUDE ([IdUbicacion],[descripcion],[ancho],[largo],[alto],[nivel],[indice_x],[orientacion_pos])

Script Date: 07/02/2020 14:37:05 ******/
ALTER TABLE TRANS_INV_STOCK ADD IdBodega int default 0 not null

Script Date: 14/02/2020 14:37:05 ******/
alter table stock_res add IdBodega int not null default 0

UPDATE s
SET s.idbodega = pb.IdBodega
FROM stock_res s
INNER JOIN producto_bodega pb
ON s.IdProductoBodega = pb.IdProductoBodega

Script Date: 26/03/2020 12:40:05 ******/
ALTER TABLE EMPRESA ADD cantidad_decimales_despliegue int default 2
ALTER TABLE EMPRESA ADD cantidad_decimales_calculo int default 6

UPDATE EMPRESA SET CANTIDAD_DECIMALES_CALCULO = 6
UPDATE EMPRESA SET CANTIDAD_DECIMALES_DESPLIEGUE = 2

