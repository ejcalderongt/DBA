USE [IMS4MB_BYB_PRD2]
GO

/****** Object:  StoredProcedure [dbo].[sp_eliminar_by_IdPedidoEnc]    Script Date: 11/12/2023 19:45:57 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[sp_eliminar_by_IdPedidoEnc]
    @IdPedidoEnc INT,
    @IdPickingEnc INT OUTPUT
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Obtener IdPickingEnc asociado con IdPedidoEnc
        SELECT @IdPickingEnc = IdPickingEnc FROM trans_pe_enc WHERE IdPedidoEnc = @IdPedidoEnc;

        -- Verificar si se encontr贸 IdPickingEnc
        IF @IdPickingEnc > 0  BEGIN
            -- Eliminar registros de las tablas relacionadas con IdPickingEnc
            DELETE FROM trans_picking_ubic WHERE IdPickingEnc = @IdPickingEnc;
            DELETE FROM trans_picking_det WHERE IdPickingEnc = @IdPickingEnc;
            DELETE FROM trans_picking_op WHERE IdPickingEnc = @IdPickingEnc;
            DELETE FROM trans_picking_enc WHERE IdPickingEnc = @IdPickingEnc;
        END

        -- Eliminar registros de la tabla trans_pe_det
        DELETE FROM stock_res WHERE IdPedido = @IdPedidoEnc;

        -- Eliminar registros de la tabla trans_pe_det
        DELETE FROM trans_pe_det WHERE IdPedidoEnc = @IdPedidoEnc;

        -- Eliminar registros de la tabla trans_pe_enc
        DELETE FROM trans_pe_enc WHERE IdPedidoEnc = @IdPedidoEnc;

        -- Si todo sale bien, confirmar la transacci贸n
        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        -- Si ocurre un error, hacer rollback de la transacci贸n
        ROLLBACK TRANSACTION;

        -- Opcionalmente, devolver informaci贸n del error
        DECLARE @ErrMsg NVARCHAR(4000), @ErrSeverity INT;
        SELECT @ErrMsg = ERROR_MESSAGE(), @ErrSeverity = ERROR_SEVERITY();
        RAISERROR(@ErrMsg, @ErrSeverity, 1);
    END CATCH
END
GO
