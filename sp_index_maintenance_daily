/****** Object:  StoredProcedure [dbo].[sp_index_maintenance_daily] EJC, Mejorado con IA Script Date: 02/12/2023 06:26:26 ******/

ALTER PROCEDURE [dbo].[sp_index_maintenance_daily]
AS
BEGIN
    DECLARE @DatabaseName NVARCHAR(150) = DB_NAME();
    DECLARE @DynamicSQL NVARCHAR(MAX);
    DECLARE @TableName VARCHAR(255);
    DECLARE @ViewName VARCHAR(255);
    DECLARE @IndexCount INT;
    DECLARE @IndexFregQuery NVARCHAR(MAX);
    DECLARE @IndexRebuildQuery NVARCHAR(MAX);
    DECLARE @IndexName VARCHAR(500);
    DECLARE @SchemaName VARCHAR(500);

    -- Actualizar estadísticas
    EXEC sp_updatestats;

    -- Reconstruir índices para todas las tablas
    DECLARE TableCursor CURSOR FOR 
    SELECT table_name FROM information_schema.tables 
    WHERE table_type = 'base table';

    OPEN TableCursor;
    FETCH NEXT FROM TableCursor INTO @TableName;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        SET @DynamicSQL = N'ALTER INDEX ALL ON dbo.[' + @TableName + '] REBUILD';
        EXEC sp_executesql @DynamicSQL;
        FETCH NEXT FROM TableCursor INTO @TableName;
    END;

    CLOSE TableCursor;
    DEALLOCATE TableCursor;

    -- Limpiar espacio no utilizado
    SET @DynamicSQL = N'DBCC SHRINKDATABASE(N''' + @DatabaseName + ''')';
    EXEC sp_executesql @DynamicSQL;

    -- Regenerar todas las vistas
    DECLARE ViewCursor CURSOR FOR 
    SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS;

    OPEN ViewCursor;
    FETCH NEXT FROM ViewCursor INTO @ViewName;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        SET @DynamicSQL = N'EXEC sp_refreshview ''' + @ViewName + '''';
        EXEC sp_executesql @DynamicSQL;
        FETCH NEXT FROM ViewCursor INTO @ViewName;
    END;

    CLOSE ViewCursor;
    DEALLOCATE ViewCursor;

    -- Mantenimiento específico de índices
    CREATE TABLE #Fregmentedindex(Index_name VARCHAR(MAX), table_name VARCHAR(MAX), schema_name VARCHAR(MAX));

    SET @IndexFregQuery = 'SELECT i.[name], o.name, sch.name FROM sys.dm_db_index_physical_stats (DB_ID(), NULL, NULL, NULL, NULL) AS s INNER JOIN sys.indexes AS i ON s.object_id = i.object_id AND s.index_id = i.index_id INNER JOIN sys.objects AS o ON i.object_id = o.object_id INNER JOIN sys.schemas AS sch ON o.schema_id = sch.schema_id WHERE (s.avg_fragmentation_in_percent > 30 ) AND i.name IS NOT NULL';
    INSERT INTO #Fregmentedindex(Index_name, table_name, schema_name) EXEC sp_executesql @IndexFregQuery;

    SET @IndexCount = (SELECT COUNT(1) FROM #Fregmentedindex);

    WHILE (@IndexCount > 0)
    BEGIN 
        SELECT TOP 1 @TableName = table_name, @IndexName = Index_name, @SchemaName = schema_name FROM #Fregmentedindex;
        SET @IndexRebuildQuery = 'ALTER INDEX [' + @IndexName + '] ON dbo.[' + @TableName + '] REBUILD';
        EXEC sp_executesql @IndexRebuildQuery;
        DELETE FROM #Fregmentedindex WHERE Index_name = @IndexName AND table_name = @TableName;
        SET @IndexCount = @IndexCount - 1;
    END;

    DROP TABLE #Fregmentedindex;
END;
GO



/****** Object:  StoredProcedure [dbo].[sp_index_maintenance_daily] EJC Script Date: 18/11/2023 06:26:26 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER procedure [dbo].[sp_index_maintenance_daily]
AS
begin
declare @i int=0
declare @IndexCount int
declare @IndexFregQuery nvarchar(max)
declare @IndexRebuildQuery nvarchar(max)
declare @IndexName varchar(500)
declare @TableName varchar(500)
declare @SchemaName varchar(500)
DECLARE @DatabaseName NVARCHAR(150); 

SELECT @DatabaseName = DB_NAME();

create table #Fregmentedindex(Index_name varchar(max),table_name varchar(max),schema_name varchar(max))
set @IndexFregQuery='SELECT i.[name],o.name,sch.name
	FROM   [' + @DatabaseName + '].sys.dm_db_index_physical_stats (DB_ID('''+ @DatabaseName +'''), NULL, NULL, NULL, NULL) AS s
	INNER JOIN [' + @DatabaseName + '].sys.indexes AS i ON s.object_id = i.object_id AND s.index_id = i.index_id
	INNER JOIN [' + @DatabaseName + '].sys.objects AS o ON i.object_id = o.object_id
	INNER JOIN [' + @DatabaseName + '].sys.schemas AS sch ON o.schema_id=sch.schema_id
	WHERE (s.avg_fragmentation_in_percent > 30 ) and i.name is not null'
insert into #Fregmentedindex(Index_name,table_name,schema_name) exec sp_executesql @IndexFregQuery
set @IndexCount=(select count(1) from #Fregmentedindex)
While (@IndexCount>@i)
begin 
(select top 1 @TableName=table_name, @IndexName=Index_name,@SchemaName= schema_name from #Fregmentedindex)
Set @IndexRebuildQuery ='Alter index [' + @IndexName +'] on ['+@DatabaseName +'].['+@SchemaName+'].[' + @TableName +'] rebuild'
exec sp_executesql @IndexRebuildQuery 
set @i=@i+1
delete from #Fregmentedindex where Index_name=@IndexName and table_name=@TableName
End
End
GO




/****** Object:  StoredProcedure [dbo].[sp_index_maintenance_daily]    Script Date: 4/08/2023 19:17:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER procedure [dbo].[sp_index_maintenance_daily]
@DatabaseName varchar(50)
as
begin
declare @i int=0
declare @IndexCount int
declare @IndexFregQuery nvarchar(max)
declare @IndexRebuildQuery nvarchar(max)
declare @IndexName varchar(500)
declare @TableName varchar(500)
declare @SchemaName varchar(500)
create table #Fregmentedindex(Index_name varchar(max),table_name varchar(max),schema_name varchar(max))
set @IndexFregQuery='SELECT i.[name],o.name,sch.name
	FROM   [' + @DatabaseName + '].sys.dm_db_index_physical_stats (DB_ID('''+ @DatabaseName +'''), NULL, NULL, NULL, NULL) AS s
	INNER JOIN [' + @DatabaseName + '].sys.indexes AS i ON s.object_id = i.object_id AND s.index_id = i.index_id
	INNER JOIN [' + @DatabaseName + '].sys.objects AS o ON i.object_id = o.object_id
	INNER JOIN [' + @DatabaseName + '].sys.schemas AS sch ON o.schema_id=sch.schema_id
	WHERE (s.avg_fragmentation_in_percent > 0 ) and i.name is not null'
insert into #Fregmentedindex(Index_name,table_name,schema_name) exec sp_executesql @IndexFregQuery
set @IndexCount=(select count(1) from #Fregmentedindex)
While (@IndexCount>@i)
begin 
(select top 1 @TableName=table_name, @IndexName=Index_name,@SchemaName= schema_name from #Fregmentedindex)
Set @IndexRebuildQuery ='Alter index [' + @IndexName +'] on ['+@DatabaseName +'].['+@SchemaName+'].[' + @TableName +'] rebuild'
exec sp_executesql @IndexRebuildQuery 
set @i=@i+1

delete from #Fregmentedindex where Index_name=@IndexName and table_name=@TableName
End

SET @i =0
create table #Fregmentedindex1(Index_name varchar(max),table_name varchar(max),schema_name varchar(max))
set @IndexFregQuery='SELECT i.[name],o.name,sch.name
	FROM   [' + @DatabaseName + '].sys.dm_db_index_physical_stats (DB_ID('''+ @DatabaseName +'''), NULL, NULL, NULL, NULL) AS s
	INNER JOIN [' + @DatabaseName + '].sys.indexes AS i ON s.object_id = i.object_id AND s.index_id = i.index_id
	INNER JOIN [' + @DatabaseName + '].sys.objects AS o ON i.object_id = o.object_id
	INNER JOIN [' + @DatabaseName + '].sys.schemas AS sch ON o.schema_id=sch.schema_id
	WHERE (s.avg_fragmentation_in_percent > 0 ) and i.name is not null'
insert into #Fregmentedindex1(Index_name,table_name,schema_name) exec sp_executesql @IndexFregQuery
set @IndexCount=(select count(1) from #Fregmentedindex1)
While (@IndexCount>@i)
begin 
(select top 1 @TableName=table_name, @IndexName=Index_name,@SchemaName= schema_name from #Fregmentedindex1)
Set @IndexRebuildQuery ='Alter index [' + @IndexName +'] on ['+@DatabaseName +'].['+@SchemaName+'].[' + @TableName +'] reorganize'
exec sp_executesql @IndexRebuildQuery 
set @i=@i+1

delete from #Fregmentedindex1 where Index_name=@IndexName and table_name=@TableName
End
End

Create procedure sp_index_maintenance_daily
@DatabaseName varchar(50)
as
begin
declare @i int=0
declare @IndexCount int
declare @IndexFregQuery nvarchar(max)
declare @IndexRebuildQuery nvarchar(max)
declare @IndexName varchar(500)
declare @TableName varchar(500)
declare @SchemaName varchar(500)
create table #Fregmentedindex(Index_name varchar(max),table_name varchar(max),schema_name varchar(max))
set @IndexFregQuery='SELECT i.[name],o.name,sch.name
	FROM   [' + @DatabaseName + '].sys.dm_db_index_physical_stats (DB_ID('''+ @DatabaseName +'''), NULL, NULL, NULL, NULL) AS s
	INNER JOIN [' + @DatabaseName + '].sys.indexes AS i ON s.object_id = i.object_id AND s.index_id = i.index_id
	INNER JOIN [' + @DatabaseName + '].sys.objects AS o ON i.object_id = o.object_id
	INNER JOIN [' + @DatabaseName + '].sys.schemas AS sch ON o.schema_id=sch.schema_id
	WHERE (s.avg_fragmentation_in_percent > 30 ) and i.name is not null'
insert into #Fregmentedindex(Index_name,table_name,schema_name) exec sp_executesql @IndexFregQuery
set @IndexCount=(select count(1) from #Fregmentedindex)
While (@IndexCount>@i)
begin 
(select top 1 @TableName=table_name, @IndexName=Index_name,@SchemaName= schema_name from #Fregmentedindex)
Set @IndexRebuildQuery ='Alter index [' + @IndexName +'] on ['+@DatabaseName +'].['+@SchemaName+'].[' + @TableName +'] rebuild'
exec sp_executesql @IndexRebuildQuery 
set @i=@i+1
delete from #Fregmentedindex where Index_name=@IndexName and table_name=@TableName
End
End
