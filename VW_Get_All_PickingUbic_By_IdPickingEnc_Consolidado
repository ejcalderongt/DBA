--#CKFK20250909 Modifiqué el campo para obtenere el nombre del producto, ahora se obtiene del catálogo
ALTER VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT 0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, pu.IdUbicacion, 0 AS IdStock, 
      pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, 
	  pu.IdUnidadMedida, 0 AS IdUbicacionAnterior, MAX(pu.IdRecepcion) IdRecepcion, pu.lote, pu.fecha_vence, 
	  MAX(pu.fecha_minima) fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, 
	  SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado) AS peso_verificado, 
	  SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, 
	  SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada,
      pu.encontrado, pu.dañado_verificacion, MAX(pu.fecha_real_vence) fecha_real_vence, MAX(pu.no_packing) no_packing, 
	  MIN(pu.fecha_picking) fecha_picking, MIN(pu.fecha_verificado) fecha_verificado, pu.fecha_packing, 
	  pu.fecha_despachado, pu.cantidad_despachada, '' user_agr, 
	  CAST(CONVERT(NVARCHAR,MAX(pu.fec_agr), 112) AS DATETIME) AS fec_agr, '' user_mod, 
	  CAST(CONVERT(NVARCHAR, MAX(pu.fec_mod), 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, 
	  pu.dañado_picking, 0 AS IdStockRes, '' lic_plate_reemplazo, 0 IdUbicacion_reemplazo, 
	  0 IdStock_reemplazo, pu.IdBodega, 0 IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico,
	  0 AS IdPedidoEnc, pdet.IdUnidadMedidaBasica, pdet.codigo_producto, p.nombre nombre_producto, 
	  pp.nombre AS nom_presentacion, pdet.nom_unid_med, pdet.nom_estado, pdet.IdEstado, 
	  SUM(pdet.Peso) Peso, MAX(pdet.Precio) Precio, 
	  dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, 
	  CASE WHEN (CASE WHEN pdet.IdPresentacion IS NOT NULL AND pdet.IdPresentacion <> 0 AND 
	  ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN 
	  ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) 
	  ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pdet.IdPresentacion IS NOT NULL
	  AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND 
	  ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / 
	  (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2)
	  ELSE 0 END) END AS Tarima, pu.no_encontrado, 
	  dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, 
	  pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal,
	  dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho,
	  dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal,
	  bodega_ubicacion.nivel, pu.IdOperadorBodega_Asignado,bodega_ubicacion.IdTramo
FROM dbo.bodega_ubicacion INNER JOIN
     dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND 
	 dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
	 dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
	 dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
	 dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND 
	 pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
	 dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
	 dbo.producto_presentacion AS pp ON pp.IdPresentacion = pdet.IdPresentacion INNER JOIN
	 dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
	 dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
	 dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
	 dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
	 dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado,
         pu.IdPresentacion, pu.IdUnidadMedida, pu.lote, pu.fecha_vence,
		 pu.lic_plate,pu.encontrado, pu.dañado_verificacion,  
		 pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.activo, pu.dañado_picking, 
		 pu.IdBodega, pdet.IdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdProductoBodega, 
		 pdet.codigo_producto, p.nombre, pp.nombre, pdet.nom_unid_med, pdet.nom_estado,
		 pdet.IdEstado, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, 
		 dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama,
		 pp.CamasPorTarima,pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre,pu.IdUbicacionTemporal, 
		 dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, pu.IdOperadorBodega_Asignado, bodega_ubicacion.IdTramo
GO

--#CKFK20250508 Quité otros campos que no permitían la agrupación
ALTER VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT 0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, pu.IdUbicacion, 0 AS IdStock, 
      pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, 
	  pu.IdUnidadMedida, 0 AS IdUbicacionAnterior, MAX(pu.IdRecepcion) IdRecepcion, pu.lote, pu.fecha_vence, 
	  MAX(pu.fecha_minima) fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, 
	  SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado) AS peso_verificado, 
	  SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, 
	  SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada,
      pu.encontrado, pu.dañado_verificacion, MAX(pu.fecha_real_vence) fecha_real_vence, MAX(pu.no_packing) no_packing, 
	  MIN(pu.fecha_picking) fecha_picking, MIN(pu.fecha_verificado) fecha_verificado, pu.fecha_packing, 
	  pu.fecha_despachado, pu.cantidad_despachada, '' user_agr, 
	  CAST(CONVERT(NVARCHAR,MAX(pu.fec_agr), 112) AS DATETIME) AS fec_agr, '' user_mod, 
	  CAST(CONVERT(NVARCHAR, MAX(pu.fec_mod), 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, 
	  pu.dañado_picking, 0 AS IdStockRes, '' lic_plate_reemplazo, 0 IdUbicacion_reemplazo, 
	  0 IdStock_reemplazo, pu.IdBodega, 0 IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico,
	  0 AS IdPedidoEnc, pdet.IdUnidadMedidaBasica, pdet.codigo_producto, pdet.nombre_producto, 
	  pp.nombre AS nom_presentacion, pdet.nom_unid_med, pdet.nom_estado, pdet.IdEstado, 
	  SUM(pdet.Peso) Peso, MAX(pdet.Precio) Precio, 
	  dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, 
	  CASE WHEN (CASE WHEN pdet.IdPresentacion IS NOT NULL AND pdet.IdPresentacion <> 0 AND 
	  ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN 
	  ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) 
	  ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pdet.IdPresentacion IS NOT NULL
	  AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND 
	  ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / 
	  (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2)
	  ELSE 0 END) END AS Tarima, pu.no_encontrado, 
	  dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, 
	  pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal,
	  dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho,
	  dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal,
	  bodega_ubicacion.nivel, pu.IdOperadorBodega_Asignado,bodega_ubicacion.IdTramo
FROM dbo.bodega_ubicacion INNER JOIN
     dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND 
	 dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
	 dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
	 dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
	 dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND 
	 pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
	 dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
	 dbo.producto_presentacion AS pp ON pp.IdPresentacion = pdet.IdPresentacion INNER JOIN
	 dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
	 dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
	 dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
	 dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
	 dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado,
         pu.IdPresentacion, pu.IdUnidadMedida, pu.lote, pu.fecha_vence,
		 pu.lic_plate,pu.encontrado, pu.dañado_verificacion,  
		 pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.activo, pu.dañado_picking, 
		 pu.IdBodega, pdet.IdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdProductoBodega, 
		 pdet.codigo_producto, pdet.nombre_producto, pp.nombre, pdet.nom_unid_med, pdet.nom_estado,
		 pdet.IdEstado, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, 
		 dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama,
		 pp.CamasPorTarima,pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre,pu.IdUbicacionTemporal, 
		 dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, pu.IdOperadorBodega_Asignado, bodega_ubicacion.IdTramo
GO




***** CKFK20250311 Quite del group by el peso y el precio que no permitían la agrupacion ******/
ALTER VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT 0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, pu.IdUbicacion, 0 AS IdStock, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, 0 AS IdUbicacionAnterior,
pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado)
AS peso_verificado, SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, MIN(pu.fecha_picking) fecha_picking, 
MIN(pu.fecha_verificado) fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, '' user_agr, 
CAST(CONVERT(NVARCHAR,MAX(pu.fec_agr), 112) AS DATETIME) AS fec_agr, '' user_mod, 
CAST(CONVERT(NVARCHAR, MAX(pu.fec_mod), 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, pu.dañado_picking, 0 AS IdStockRes, pu.lic_plate_reemplazo,
pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, pu.IdBodega, 0 IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico,
0 AS IdPedidoEnc, pdet.IdUnidadMedidaBasica, pdet.codigo_producto, pdet.nombre_producto, pp.nombre AS nom_presentacion, pdet.nom_unid_med, pdet.nom_estado, pdet.IdEstado, SUM(pdet.Peso) Peso, MAX(pdet.Precio) Precio,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, CASE WHEN (CASE WHEN pdet.IdPresentacion IS NOT NULL AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND
ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pdet.IdPresentacion IS NOT NULL
AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2)
ELSE 0 END) END AS Tarima, pu.no_encontrado, dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal,
dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal, bodega_ubicacion.nivel, pu.IdOperadorBodega_Asignado,bodega_ubicacion.IdTramo
FROM dbo.bodega_ubicacion INNER JOIN
dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON pp.IdPresentacion = pdet.IdPresentacion INNER JOIN
dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, pu.lic_plate,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.activo, pu.dañado_picking, pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo,
pu.IdBodega, pdet.IdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdProductoBodega, pdet.codigo_producto, pdet.nombre_producto, pp.nombre, pdet.nom_unid_med, pdet.nom_estado,
pdet.IdEstado, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama, pp.CamasPorTarima,
pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre, pu.IdUbicacionTemporal, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, pu.IdOperadorBodega_Asignado, bodega_ubicacion.IdTramo
GO

/****** CKFK20250107 Quite el group by por varios campos que no permitían la agrupacion ******/

ALTER VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT 0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, pu.IdUbicacion, 0 AS IdStock, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, 0 AS IdUbicacionAnterior,
pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado)
AS peso_verificado, SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, MIN(pu.fecha_picking) fecha_picking, 
MIN(pu.fecha_verificado) fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, '' user_agr, 
CAST(CONVERT(NVARCHAR,MAX(pu.fec_agr), 112) AS DATETIME) AS fec_agr, '' user_mod, 
CAST(CONVERT(NVARCHAR, MAX(pu.fec_mod), 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, pu.dañado_picking, 0 AS IdStockRes, pu.lic_plate_reemplazo,
pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, pu.IdBodega, 0 IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico,
0 AS IdPedidoEnc, pdet.IdUnidadMedidaBasica, pdet.codigo_producto, pdet.nombre_producto, pp.nombre AS nom_presentacion, pdet.nom_unid_med, pdet.nom_estado, pdet.IdEstado, pdet.Peso, pdet.Precio,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, CASE WHEN (CASE WHEN pdet.IdPresentacion IS NOT NULL AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND
ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pdet.IdPresentacion IS NOT NULL
AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2)
ELSE 0 END) END AS Tarima, pu.no_encontrado, dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal,
dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal, bodega_ubicacion.nivel, pu.IdOperadorBodega_Asignado,bodega_ubicacion.IdTramo
FROM dbo.bodega_ubicacion INNER JOIN
dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON pp.IdPresentacion = pdet.IdPresentacion INNER JOIN
dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, pu.lic_plate,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.activo, pu.dañado_picking, pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo,
pu.IdBodega, pdet.IdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdProductoBodega, pdet.codigo_producto, pdet.nombre_producto, pp.nombre, pdet.nom_unid_med, pdet.nom_estado,
pdet.IdEstado, pdet.Peso, pdet.Precio, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama, pp.CamasPorTarima,
pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre, pu.IdUbicacionTemporal, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, pu.IdOperadorBodega_Asignado, bodega_ubicacion.IdTramo
GO

/****** Object:  View [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]  EJC  Script Date: 3/04/2022 22:41:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT        0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, pu.IdUbicacion, 0 AS IdStock, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, 0 AS IdUbicacionAnterior, 
                         pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado) 
                         AS peso_verificado, SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada, 
                         pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR, 
                         pu.fec_agr, 112) AS DATETIME) AS fec_agr, pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, pu.dañado_picking, 0 AS IdStockRes, pu.lic_plate_reemplazo, 
                         pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, pu.IdBodega, pu.IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico, 
						 0 AS IdPedidoEnc, pdet.IdUnidadMedidaBasica, pdet.codigo_producto, pdet.nombre_producto, pp.nombre AS nom_presentacion, pdet.nom_unid_med, pdet.nom_estado, pdet.IdEstado, pdet.Peso, pdet.Precio, 
                         dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, CASE WHEN (CASE WHEN pdet.IdPresentacion IS NOT NULL AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND 
                         ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pdet.IdPresentacion IS NOT NULL
                          AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) 
                         ELSE 0 END) END AS Tarima, pu.no_encontrado, dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal, 
                         dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho, 
						 dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal
FROM            dbo.bodega_ubicacion INNER JOIN
                         dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
                         dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
                         dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
                         dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
                         dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
                         dbo.producto_presentacion AS pp ON pp.IdPresentacion = pdet.IdPresentacion INNER JOIN
                         dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
                         dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
                         dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
                         dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
                         dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, pu.lic_plate, 
                         pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR, 
                         pu.fec_agr, 112) AS DATETIME), pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME), pu.activo, pu.dañado_picking, pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, 
                         pu.IdBodega, pu.IdOperadorBodega_Pickeo, pdet.IdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdProductoBodega, pdet.codigo_producto, pdet.nombre_producto, pp.nombre, pdet.nom_unid_med, pdet.nom_estado, 
                         pdet.IdEstado, pdet.Peso, pdet.Precio, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama, pp.CamasPorTarima, 
                         pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre, pu.IdUbicacionTemporal, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE
GO


/****** Object:  View [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]    Script Date: 4/04/2022 17:06:07 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT 0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, pu.IdUbicacion, 0 AS IdStock, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, 0 AS IdUbicacionAnterior,
pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado)
AS peso_verificado, SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME) AS fec_agr, pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, pu.dañado_picking, 0 AS IdStockRes, pu.lic_plate_reemplazo,
pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, pu.IdBodega, pu.IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico,
0 AS IdPedidoEnc, pdet.IdUnidadMedidaBasica, pdet.codigo_producto, pdet.nombre_producto, pp.nombre AS nom_presentacion, pdet.nom_unid_med, pdet.nom_estado, pdet.IdEstado, pdet.Peso, pdet.Precio,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, CASE WHEN (CASE WHEN pdet.IdPresentacion IS NOT NULL AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND
ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pdet.IdPresentacion IS NOT NULL
AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2)
ELSE 0 END) END AS Tarima, pu.no_encontrado, dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal,
dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal
FROM dbo.bodega_ubicacion INNER JOIN
dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON pp.IdPresentacion = pu.IdPresentacion INNER JOIN
dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, pu.lic_plate,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME), pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME), pu.activo, pu.dañado_picking, pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo,
pu.IdBodega, pu.IdOperadorBodega_Pickeo, pdet.IdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdProductoBodega, pdet.codigo_producto, pdet.nombre_producto, pp.nombre, pdet.nom_unid_med, pdet.nom_estado,
pdet.IdEstado, pdet.Peso, pdet.Precio, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama, pp.CamasPorTarima,
pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre, pu.IdUbicacionTemporal, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE
GO


ALTER VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT 0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, pu.IdUbicacion, 0 AS IdStock, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, 0 AS IdUbicacionAnterior,
pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado)
AS peso_verificado, SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME) AS fec_agr, pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, pu.dañado_picking, 0 AS IdStockRes, pu.lic_plate_reemplazo,
pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, pu.IdBodega, pu.IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico,
0 AS IdPedidoEnc, pdet.IdUnidadMedidaBasica, pdet.codigo_producto, pdet.nombre_producto, pp.nombre AS nom_presentacion, pdet.nom_unid_med, pdet.nom_estado, pdet.IdEstado, pdet.Peso, pdet.Precio,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, CASE WHEN (CASE WHEN pdet.IdPresentacion IS NOT NULL AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND
ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pdet.IdPresentacion IS NOT NULL
AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2)
ELSE 0 END) END AS Tarima, pu.no_encontrado, dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal,
dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal, bodega_ubicacion.nivel
FROM dbo.bodega_ubicacion INNER JOIN
dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON pp.IdPresentacion = pdet.IdPresentacion INNER JOIN
dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, pu.lic_plate,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME), pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME), pu.activo, pu.dañado_picking, pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo,
pu.IdBodega, pu.IdOperadorBodega_Pickeo, pdet.IdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdProductoBodega, pdet.codigo_producto, pdet.nombre_producto, pp.nombre, pdet.nom_unid_med, pdet.nom_estado,
pdet.IdEstado, pdet.Peso, pdet.Precio, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama, pp.CamasPorTarima,
pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre, pu.IdUbicacionTemporal, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE
GO



--#AT20220629 Se agregó el campo IdOperadorBodega_Asignado
/****** Object:  View [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]    Script Date: 29/06/2022 15:41:59 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT 0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, pu.IdUbicacion, 0 AS IdStock, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, 0 AS IdUbicacionAnterior,
pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado)
AS peso_verificado, SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME) AS fec_agr, pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, pu.dañado_picking, 0 AS IdStockRes, pu.lic_plate_reemplazo,
pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, pu.IdBodega, pu.IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico,
0 AS IdPedidoEnc, pdet.IdUnidadMedidaBasica, pdet.codigo_producto, pdet.nombre_producto, pp.nombre AS nom_presentacion, pdet.nom_unid_med, pdet.nom_estado, pdet.IdEstado, pdet.Peso, pdet.Precio,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, CASE WHEN (CASE WHEN pdet.IdPresentacion IS NOT NULL AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND
ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pdet.IdPresentacion IS NOT NULL
AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2)
ELSE 0 END) END AS Tarima, pu.no_encontrado, dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal,
dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal, bodega_ubicacion.nivel, pu.IdOperadorBodega_Asignado
FROM dbo.bodega_ubicacion INNER JOIN
dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON pp.IdPresentacion = pdet.IdPresentacion INNER JOIN
dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, pu.lic_plate,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME), pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME), pu.activo, pu.dañado_picking, pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo,
pu.IdBodega, pu.IdOperadorBodega_Pickeo, pdet.IdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdProductoBodega, pdet.codigo_producto, pdet.nombre_producto, pp.nombre, pdet.nom_unid_med, pdet.nom_estado,
pdet.IdEstado, pdet.Peso, pdet.Precio, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama, pp.CamasPorTarima,
pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre, pu.IdUbicacionTemporal, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, pu.IdOperadorBodega_Asignado
GO



/****** #AT20221116 Se agrego IdTramo Object:  View [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]    Script Date: 16/11/2022 10:38:27 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT 0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, pu.IdUbicacion, 0 AS IdStock, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, 0 AS IdUbicacionAnterior,
pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado)
AS peso_verificado, SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME) AS fec_agr, pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, pu.dañado_picking, 0 AS IdStockRes, pu.lic_plate_reemplazo,
pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, pu.IdBodega, pu.IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico,
0 AS IdPedidoEnc, pdet.IdUnidadMedidaBasica, pdet.codigo_producto, pdet.nombre_producto, pp.nombre AS nom_presentacion, pdet.nom_unid_med, pdet.nom_estado, pdet.IdEstado, pdet.Peso, pdet.Precio,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, CASE WHEN (CASE WHEN pdet.IdPresentacion IS NOT NULL AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND
ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pdet.IdPresentacion IS NOT NULL
AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2)
ELSE 0 END) END AS Tarima, pu.no_encontrado, dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal,
dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal, bodega_ubicacion.nivel, pu.IdOperadorBodega_Asignado,bodega_ubicacion.IdTramo
FROM dbo.bodega_ubicacion INNER JOIN
dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON pp.IdPresentacion = pdet.IdPresentacion INNER JOIN
dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, pu.lic_plate,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME), pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME), pu.activo, pu.dañado_picking, pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo,
pu.IdBodega, pu.IdOperadorBodega_Pickeo, pdet.IdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdProductoBodega, pdet.codigo_producto, pdet.nombre_producto, pp.nombre, pdet.nom_unid_med, pdet.nom_estado,
pdet.IdEstado, pdet.Peso, pdet.Precio, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama, pp.CamasPorTarima,
pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre, pu.IdUbicacionTemporal, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, pu.IdOperadorBodega_Asignado, bodega_ubicacion.IdTramo
GO


/****** #AT20230210 Left con IdPresentacion de picking ubic Object:  View [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]   ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT 0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, pu.IdUbicacion, 0 AS IdStock, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, 0 AS IdUbicacionAnterior,
pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado)
AS peso_verificado, SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME) AS fec_agr, pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, pu.dañado_picking, 0 AS IdStockRes, pu.lic_plate_reemplazo,
pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, pu.IdBodega, pu.IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico,
0 AS IdPedidoEnc, pdet.IdUnidadMedidaBasica, pdet.codigo_producto, pdet.nombre_producto, pp.nombre AS nom_presentacion, pdet.nom_unid_med, pdet.nom_estado, pdet.IdEstado, pdet.Peso, pdet.Precio,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, CASE WHEN (CASE WHEN pdet.IdPresentacion IS NOT NULL AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND
ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pdet.IdPresentacion IS NOT NULL
AND pdet.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2)
ELSE 0 END) END AS Tarima, pu.no_encontrado, dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal,
dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal, bodega_ubicacion.nivel, pu.IdOperadorBodega_Asignado,bodega_ubicacion.IdTramo
FROM dbo.bodega_ubicacion INNER JOIN
dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON pp.IdPresentacion = pu.IdPresentacion INNER JOIN
dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, pu.lic_plate,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME), pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME), pu.activo, pu.dañado_picking, pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo,
pu.IdBodega, pu.IdOperadorBodega_Pickeo, pdet.IdPresentacion, pdet.IdUnidadMedidaBasica, pdet.IdProductoBodega, pdet.codigo_producto, pdet.nombre_producto, pp.nombre, pdet.nom_unid_med, pdet.nom_estado,
pdet.IdEstado, pdet.Peso, pdet.Precio, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama, pp.CamasPorTarima,
pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre, pu.IdUbicacionTemporal, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, pu.IdOperadorBodega_Asignado, bodega_ubicacion.IdTramo
GO

/****** #CKFK20230116 Modifiqué algunos campos para no obtenerlos del pedido sino del picking   ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT 0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, 
pu.IdUbicacion, 0 AS IdStock, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, 
0 AS IdUbicacionAnterior,
pu.IdRecepcion, pu.lote, 
pu.fecha_vence, 
pu.fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado)
AS peso_verificado, SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, 
SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada,
pu.encontrado, pu.dañado_verificacion, 
pu.fecha_real_vence, pu.no_packing, 
pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME) AS fec_agr, pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, pu.dañado_picking, 0 AS IdStockRes, pu.lic_plate_reemplazo,
pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, pu.IdBodega, pu.IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico,
0 AS IdPedidoEnc, pu.IdUnidadMedida IdUnidadMedidaBasica, p.codigo codigo_producto, p.nombre nombre_producto, pp.nombre AS nom_presentacion, 
um.Nombre nom_unid_med, pdet.nom_estado, pdet.IdEstado, SUM(pu.peso_solicitado) as Peso, Max(pdet.Precio) Precio,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, 
CASE WHEN (CASE WHEN pu.IdPresentacion IS NOT NULL AND pu.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND
ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pu.IdPresentacion IS NOT NULL
AND pu.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2)
ELSE 0 END) END AS Tarima, pu.no_encontrado, dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal,
dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal, bodega_ubicacion.nivel, pu.IdOperadorBodega_Asignado,bodega_ubicacion.IdTramo
FROM dbo.bodega_ubicacion INNER JOIN
dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON pp.IdPresentacion = pu.IdPresentacion INNER JOIN
dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
dbo.unidad_medida um ON um.IdUnidadMedida = pu.IdUnidadMedida INNER JOIN
dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, pu.lic_plate,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.no_packing, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME), pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME), pu.activo, pu.dañado_picking, pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo,
pu.IdBodega, pu.IdOperadorBodega_Pickeo, pu.IdPresentacion, um.IdUnidadMedida, pdet.IdProductoBodega, p.codigo, p.nombre, pp.nombre, um.Nombre, pdet.nom_estado,
pdet.IdEstado, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama, pp.CamasPorTarima,
pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre, pu.IdUbicacionTemporal, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, pu.IdOperadorBodega_Asignado, bodega_ubicacion.IdTramo
GO


/******#CKFK20230217 Le pusimos valor por defecto el campo Packing del Select y lo quitamos del Group By             *******/
/****** Object:  View [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]    Script Date: 17/02/2023 13:26:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT 0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, 
pu.IdUbicacion, 0 AS IdStock, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, 
0 AS IdUbicacionAnterior,
pu.IdRecepcion, pu.lote, 
pu.fecha_vence, 
pu.fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado)
AS peso_verificado, SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, 
SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada,
pu.encontrado, pu.dañado_verificacion, 
pu.fecha_real_vence, 0 no_packing, 
pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME) AS fec_agr, pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, pu.dañado_picking, 0 AS IdStockRes, pu.lic_plate_reemplazo,
pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, pu.IdBodega, pu.IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico,
0 AS IdPedidoEnc, pu.IdUnidadMedida IdUnidadMedidaBasica, p.codigo codigo_producto, p.nombre nombre_producto, pp.nombre AS nom_presentacion, 
um.Nombre nom_unid_med, pdet.nom_estado, pdet.IdEstado, SUM(pu.peso_solicitado) as Peso, Max(pdet.Precio) Precio,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, 
CASE WHEN (CASE WHEN pu.IdPresentacion IS NOT NULL AND pu.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND
ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pu.IdPresentacion IS NOT NULL
AND pu.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2)
ELSE 0 END) END AS Tarima, pu.no_encontrado, dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal,
dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal, bodega_ubicacion.nivel, pu.IdOperadorBodega_Asignado,bodega_ubicacion.IdTramo
FROM dbo.bodega_ubicacion INNER JOIN
dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON pp.IdPresentacion = pu.IdPresentacion INNER JOIN
dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
dbo.unidad_medida um ON um.IdUnidadMedida = pu.IdUnidadMedida INNER JOIN
dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, pu.lic_plate,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME), pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME), pu.activo, pu.dañado_picking, pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo,
pu.IdBodega, pu.IdOperadorBodega_Pickeo, pu.IdPresentacion, um.IdUnidadMedida, pdet.IdProductoBodega, p.codigo, p.nombre, pp.nombre, um.Nombre, pdet.nom_estado,
pdet.IdEstado, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama, pp.CamasPorTarima,
pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre, pu.IdUbicacionTemporal, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, pu.IdOperadorBodega_Asignado, bodega_ubicacion.IdTramo
GO


/******#CKFK20230219 Hice inner join con la tabla producto_estado para tomar los datos de picking ubic             *******/
/****** Object:  View [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]    Script Date: 19/02/2023 14:07:26 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[VW_Get_All_PickingUbic_By_IdPickingEnc_Consolidado]
AS
SELECT 0 AS IdPickingUbic, pu.IdPickingEnc, 0 AS IdPickingDet, 
pu.IdUbicacion, 0 AS IdStock, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, 
0 AS IdUbicacionAnterior, pu.IdProductoEstado IdEstado,
pu.IdRecepcion, pu.lote, 
pu.fecha_vence, 
pu.fecha_minima, '' AS serial, pu.lic_plate, 0 AS acepto, SUM(pu.peso_solicitado) AS peso_solicitado, SUM(pu.peso_recibido) AS peso_recibido, SUM(pu.peso_verificado)
AS peso_verificado, SUM(pu.peso_despachado) AS peso_despachado, SUM(pu.cantidad_solicitada) AS cantidad_solicitada, 
SUM(pu.cantidad_recibida) AS cantidad_recibida, SUM(pu.cantidad_verificada) AS cantidad_verificada,
pu.encontrado, pu.dañado_verificacion, 
pu.fecha_real_vence, 0 no_packing, 
pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME) AS fec_agr, pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME) AS fec_mod, pu.activo, 0 AS IdPedidoDet, pu.dañado_picking, 0 AS IdStockRes, pu.lic_plate_reemplazo,
pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo, pu.IdBodega, pu.IdOperadorBodega_Pickeo, 0 AS IdOperadorBodega_Verifico,
0 AS IdPedidoEnc, pu.IdUnidadMedida IdUnidadMedidaBasica, p.codigo codigo_producto, p.nombre nombre_producto, pp.nombre AS nom_presentacion, 
um.Nombre nom_unid_med, pe.nombre nom_estado, SUM(pu.peso_solicitado) as Peso, Max(pdet.Precio) Precio,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacion, pu.IdBodega) AS NombreUbicacion, 
CASE WHEN (CASE WHEN pu.IdPresentacion IS NOT NULL AND pu.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND
ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2) ELSE 0 END) < 1 THEN 0 ELSE (CASE WHEN pu.IdPresentacion IS NOT NULL
AND pu.IdPresentacion <> 0 AND ISNULL(pp.CajasPorCama, 0) > 0 AND ISNULL(pp.CamasPorTarima, 0) > 0 THEN ROUND(SUM(pu.cantidad_solicitada) / (ISNULL(pp.CajasPorCama, 0) * ISNULL(pp.CamasPorTarima, 0)), 2)
ELSE 0 END) END AS Tarima, pu.no_encontrado, dbo.Nombre_Area(dbo.bodega_ubicacion.IdArea, pu.IdBodega) AS NombreArea, pc.nombre AS NombreClasificacion, pu.IdUbicacionTemporal,
dbo.road_ruta.CODIGO + ' ' + dbo.road_ruta.NOMBRE AS RutaDespacho,
dbo.Nombre_Completo_Ubicacion(pu.IdUbicacionTemporal, pu.IdBodega) NombreUbicacionTemporal, bodega_ubicacion.nivel, pu.IdOperadorBodega_Asignado,bodega_ubicacion.IdTramo
FROM dbo.bodega_ubicacion INNER JOIN
dbo.trans_picking_ubic AS pu ON pu.IdUbicacion = dbo.bodega_ubicacion.IdUbicacion AND dbo.bodega_ubicacion.IdBodega = pu.IdBodega INNER JOIN
dbo.trans_picking_det AS pkdet ON pkdet.IdPickingDet = pu.IdPickingDet INNER JOIN
dbo.trans_pe_det AS pdet ON pdet.IdPedidoDet = pkdet.IdPedidoDet INNER JOIN
dbo.stock_res AS sr ON pkdet.IdPedidoDet = sr.IdPedidoDet AND pu.IdUbicacion = sr.IdUbicacion AND pu.IdStockRes = sr.IdStockRes INNER JOIN
dbo.trans_picking_enc ON pkdet.IdPickingEnc = dbo.trans_picking_enc.IdPickingEnc LEFT OUTER JOIN
dbo.producto_presentacion AS pp ON pp.IdPresentacion = pu.IdPresentacion INNER JOIN
dbo.producto_bodega AS pb ON pb.IdProductoBodega = pu.IdProductoBodega INNER JOIN
dbo.producto AS p ON p.IdProducto = pb.IdProducto INNER JOIN
dbo.unidad_medida um ON um.IdUnidadMedida = pu.IdUnidadMedida INNER JOIN
dbo.trans_pe_enc ON pdet.IdPedidoEnc = dbo.trans_pe_enc.IdPedidoEnc LEFT OUTER JOIN
dbo.road_ruta ON dbo.trans_pe_enc.RoadIdRutaDespacho = dbo.road_ruta.IdRuta LEFT OUTER JOIN
dbo.producto_clasificacion AS pc ON pc.IdClasificacion = p.IdClasificacion inner join 
dbo.producto_estado pe on pu.IdProductoEstado = pe.IdEstado 
GROUP BY pu.IdPickingEnc, pu.IdUbicacion, pu.IdPropietarioBodega, pu.IdProductoBodega, pu.IdProductoEstado, pu.IdPresentacion, pu.IdUnidadMedida, pu.IdRecepcion, pu.lote, pu.fecha_vence, pu.fecha_minima, pu.lic_plate,
pu.encontrado, pu.dañado_verificacion, pu.fecha_real_vence, pu.fecha_picking, pu.fecha_verificado, pu.fecha_packing, pu.fecha_despachado, pu.cantidad_despachada, pu.user_agr, CAST(CONVERT(NVARCHAR,
pu.fec_agr, 112) AS DATETIME), pu.user_mod, CAST(CONVERT(NVARCHAR, pu.fec_mod, 112) AS DATETIME), pu.activo, pu.dañado_picking, pu.lic_plate_reemplazo, pu.IdUbicacion_reemplazo, pu.IdStock_reemplazo,
pu.IdBodega, pu.IdOperadorBodega_Pickeo, pu.IdPresentacion, um.IdUnidadMedida, pdet.IdProductoBodega, p.codigo, p.nombre, pp.nombre, um.Nombre, pdet.nom_estado,
pdet.IdEstado, dbo.bodega_ubicacion.indice_x, dbo.bodega_ubicacion.nivel, dbo.bodega_ubicacion.orientacion_pos, dbo.bodega_ubicacion.IdUbicacion, pp.CajasPorCama, pp.CamasPorTarima,
pu.no_encontrado, dbo.bodega_ubicacion.IdArea, pc.nombre, pu.IdUbicacionTemporal, dbo.road_ruta.CODIGO, dbo.road_ruta.NOMBRE, pu.IdOperadorBodega_Asignado, bodega_ubicacion.IdTramo,pe.nombre
GO



